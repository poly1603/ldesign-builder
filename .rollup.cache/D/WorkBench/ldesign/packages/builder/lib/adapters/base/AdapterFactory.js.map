{"version":3,"file":"AdapterFactory.js","sourceRoot":"","sources":["../../../src/adapters/base/AdapterFactory.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 适配器工厂\r\n * \r\n * 负责创建和管理不同的打包器适配器\r\n * \r\n * @author LDesign Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport type { IBundlerAdapter, AdapterOptions } from '../../types/adapter'\r\nimport type { BundlerType } from '../../types/bundler'\r\nimport { ErrorCode } from '../../constants/errors'\r\nimport { BuilderError } from '../../utils/error-handler'\r\n\r\n/**\r\n * 基础适配器实现（临时）\r\n */\r\nclass BaseAdapter implements IBundlerAdapter {\r\n  readonly name: BundlerType\r\n  readonly version: string = '1.0.0'\r\n  readonly available: boolean = true\r\n\r\n  constructor(name: BundlerType) {\r\n    this.name = name\r\n  }\r\n\r\n  async build(_config: any): Promise<any> {\r\n    // 临时实现，返回模拟结果\r\n    return {\r\n      success: true,\r\n      outputs: [],\r\n      duration: 1000,\r\n      stats: {\r\n        totalSize: 0,\r\n        gzipSize: 0,\r\n        files: [],\r\n        chunks: [],\r\n        assets: [],\r\n        modules: [],\r\n        dependencies: [],\r\n        warnings: [],\r\n        errors: []\r\n      },\r\n      warnings: [],\r\n      errors: []\r\n    }\r\n  }\r\n\r\n  async watch(_config: any): Promise<any> {\r\n    // 临时实现\r\n    const mockWatcher = {\r\n      patterns: ['src/**/*'],\r\n      watching: true,\r\n      close: async () => { },\r\n      on: () => { },\r\n      off: () => { },\r\n      emit: () => { }\r\n    }\r\n\r\n    return mockWatcher\r\n  }\r\n\r\n  async transformConfig(config: any): Promise<any> {\r\n    return config\r\n  }\r\n\r\n  async transformPlugins(plugins: any[]): Promise<any[]> {\r\n    return plugins\r\n  }\r\n\r\n  supportsFeature(_feature: any): boolean {\r\n    return true\r\n  }\r\n\r\n  getFeatureSupport(): any {\r\n    return {}\r\n  }\r\n\r\n  getPerformanceMetrics(): any {\r\n    return {\r\n      buildTime: 0,\r\n      memoryUsage: {\r\n        heapUsed: 0,\r\n        heapTotal: 0,\r\n        external: 0,\r\n        rss: 0,\r\n        peak: 0,\r\n        trend: []\r\n      },\r\n      cacheStats: {\r\n        hits: 0,\r\n        misses: 0,\r\n        hitRate: 0,\r\n        size: 0,\r\n        entries: 0,\r\n        timeSaved: 0\r\n      },\r\n      fileStats: {\r\n        totalFiles: 0,\r\n        filesByType: {},\r\n        averageProcessingTime: 0,\r\n        slowestFiles: [],\r\n        processingRate: 0\r\n      },\r\n      pluginPerformance: [],\r\n      systemResources: {\r\n        cpuUsage: 0,\r\n        availableMemory: 0,\r\n        diskUsage: {\r\n          total: 0,\r\n          used: 0,\r\n          available: 0,\r\n          usagePercent: 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async dispose(): Promise<void> {\r\n    // 清理资源\r\n  }\r\n}\r\n\r\n/**\r\n * 适配器工厂类\r\n */\r\nexport class BundlerAdapterFactory {\r\n  private static adapters: Map<BundlerType, new (options: AdapterOptions) => IBundlerAdapter> = new Map()\r\n  private static instances: Map<string, IBundlerAdapter> = new Map()\r\n\r\n  /**\r\n   * 注册适配器\r\n   */\r\n  static register(\r\n    bundler: BundlerType,\r\n    adapterClass: new (options: AdapterOptions) => IBundlerAdapter\r\n  ): void {\r\n    this.adapters.set(bundler, adapterClass)\r\n  }\r\n\r\n  /**\r\n   * 创建适配器实例\r\n   */\r\n  static create(bundler: BundlerType, options: Partial<AdapterOptions> = {}): IBundlerAdapter {\r\n    // 检查是否已有实例\r\n    const instanceKey = `${bundler}-${JSON.stringify(options)}`\r\n    const existingInstance = this.instances.get(instanceKey)\r\n    if (existingInstance) {\r\n      return existingInstance\r\n    }\r\n\r\n    // 获取适配器类\r\n    const AdapterClass = this.adapters.get(bundler)\r\n\r\n    if (!AdapterClass) {\r\n      // 如果没有注册的适配器，使用基础适配器\r\n      const adapter = new BaseAdapter(bundler)\r\n      this.instances.set(instanceKey, adapter)\r\n      return adapter\r\n    }\r\n\r\n    try {\r\n      // 创建新实例\r\n      const adapter = new AdapterClass(options as AdapterOptions)\r\n\r\n      // 检查适配器是否可用\r\n      if (!adapter.available) {\r\n        throw new BuilderError(\r\n          ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n          `适配器 ${bundler} 不可用`\r\n        )\r\n      }\r\n\r\n      this.instances.set(instanceKey, adapter)\r\n      return adapter\r\n\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_INIT_ERROR,\r\n        `创建适配器 ${bundler} 失败`,\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取可用的适配器列表\r\n   */\r\n  static getAvailableAdapters(): BundlerType[] {\r\n    const available: BundlerType[] = []\r\n\r\n    for (const bundler of ['rollup', 'rolldown'] as BundlerType[]) {\r\n      try {\r\n        const adapter = this.create(bundler)\r\n        if (adapter.available) {\r\n          available.push(bundler)\r\n        }\r\n      } catch {\r\n        // 忽略不可用的适配器\r\n      }\r\n    }\r\n\r\n    return available\r\n  }\r\n\r\n  /**\r\n   * 检查适配器是否可用\r\n   */\r\n  static isAvailable(bundler: BundlerType): boolean {\r\n    try {\r\n      const adapter = this.create(bundler)\r\n      return adapter.available\r\n    } catch {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理所有实例\r\n   */\r\n  static async dispose(): Promise<void> {\r\n    const disposePromises = Array.from(this.instances.values()).map(adapter =>\r\n      adapter.dispose()\r\n    )\r\n\r\n    await Promise.all(disposePromises)\r\n    this.instances.clear()\r\n  }\r\n\r\n  /**\r\n   * 获取适配器信息\r\n   */\r\n  static getAdapterInfo(bundler: BundlerType): {\r\n    name: BundlerType\r\n    version: string\r\n    available: boolean\r\n  } {\r\n    try {\r\n      const adapter = this.create(bundler)\r\n      return {\r\n        name: adapter.name,\r\n        version: adapter.version,\r\n        available: adapter.available\r\n      }\r\n    } catch {\r\n      return {\r\n        name: bundler,\r\n        version: 'unknown',\r\n        available: false\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 导入真实的适配器\r\nimport { RollupAdapter } from '../rollup/RollupAdapter'\r\nimport { RolldownAdapter } from '../rolldown/RolldownAdapter'\r\n\r\n// 注册真实的适配器\r\nBundlerAdapterFactory.register('rollup', RollupAdapter)\r\nBundlerAdapterFactory.register('rolldown', RolldownAdapter)\r\n"]}