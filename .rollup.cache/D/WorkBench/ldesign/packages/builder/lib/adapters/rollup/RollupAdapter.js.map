{"version":3,"file":"RollupAdapter.js","sourceRoot":"","sources":["../../../src/adapters/rollup/RollupAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Rollup 适配器\r\n *\r\n * 提供 Rollup 打包器的适配实现\r\n *\r\n * @author LDesign Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport type {\r\n  IBundlerAdapter,\r\n  UnifiedConfig,\r\n  AdapterOptions,\r\n  BundlerSpecificConfig,\r\n  BundlerSpecificPlugin\r\n} from '../../types/adapter'\r\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\r\nimport type { PerformanceMetrics } from '../../types/performance'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport { execSync } from 'child_process'\r\nimport { Logger } from '../../utils/logger'\r\nimport { BuilderError } from '../../utils/error-handler'\r\nimport { ErrorCode } from '../../constants/errors'\r\nimport { normalizeInput } from '../../utils/glob'\r\nimport { BannerGenerator } from '../../utils/banner-generator'\r\nimport { RollupCache } from '../../utils/cache'\r\n\r\n/**\r\n * Rollup 适配器类\r\n */\r\nexport class RollupAdapter implements IBundlerAdapter {\r\n  readonly name = 'rollup' as const\r\n  version: string\r\n  available: boolean\r\n\r\n  private logger: Logger\r\n  private multiConfigs?: any[]\r\n\r\n  constructor(options: Partial<AdapterOptions> = {}) {\r\n    this.logger = options.logger || new Logger()\r\n\r\n    // 初始化为可用状态，实际检查在第一次使用时进行\r\n    this.version = 'unknown'\r\n    this.available = true\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * 执行构建\r\n   */\r\n  async build(config: UnifiedConfig): Promise<BuildResult> {\r\n    if (!this.available) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rollup 适配器不可用'\r\n      )\r\n    }\r\n\r\n    try {\r\n      // 检查是否为清理模式\r\n      const isCleanMode = (config as any)?.clean === true\r\n      this.logger.info(`清理模式检查: config.clean=${(config as any)?.clean}, isCleanMode=${isCleanMode}`)\r\n\r\n      // 受控启用构建缓存（清理模式下禁用缓存）\r\n      const cacheEnabled = !isCleanMode && this.isCacheEnabled(config)\r\n      const cacheOptions = this.resolveCacheOptions(config)\r\n      const cache = new RollupCache({\r\n        cacheDir: cacheOptions.cacheDir,\r\n        ttl: cacheOptions.ttl,\r\n        maxSize: cacheOptions.maxSize,\r\n      })\r\n\r\n      // 如果是清理模式，清除相关缓存\r\n      if (isCleanMode) {\r\n        this.logger.info('清理模式：跳过缓存并清除现有缓存')\r\n        const cacheKey = { adapter: this.name, config }\r\n        const crypto = await import('crypto')\r\n        const configHash = crypto.createHash('md5').update(JSON.stringify(cacheKey)).digest('hex')\r\n        await cache.delete(`build:${configHash}`)\r\n      }\r\n\r\n      const cacheKey = { adapter: this.name, config }\r\n      const lookupStart = Date.now()\r\n      // 清理模式下强制跳过缓存查找\r\n      const cachedResult = (cacheEnabled && !isCleanMode) ? await cache.getBuildResult(cacheKey) : null\r\n      const lookupMs = Date.now() - lookupStart\r\n\r\n      // 检查缓存结果和输出产物的存在性\r\n      if (cacheEnabled && cachedResult) {\r\n        // 验证输出产物是否存在\r\n        const outputExists = await this.validateOutputArtifacts(config)\r\n\r\n        if (outputExists) {\r\n          // 附加缓存信息并返回\r\n          cachedResult.cache = {\r\n            enabled: true,\r\n            hit: true,\r\n            lookupMs,\r\n            savedMs: typeof cachedResult.duration === 'number' ? cachedResult.duration : 0,\r\n            dir: cache.getDirectory?.() || undefined,\r\n            ttl: cache.getTTL?.() || undefined,\r\n            maxSize: cache.getMaxSize?.() || undefined,\r\n          }\r\n          this.logger.info('使用缓存的构建结果 (cache hit, artifacts verified)')\r\n          return cachedResult\r\n        } else {\r\n          // 输出产物不存在，尝试从缓存恢复文件\r\n          this.logger.info('缓存命中但输出产物不存在，尝试从缓存恢复文件')\r\n\r\n          const restored = await cache.restoreFilesFromCache(cachedResult)\r\n          if (restored) {\r\n            // 文件恢复成功，验证产物是否存在\r\n            const outputExistsAfterRestore = await this.validateOutputArtifacts(config)\r\n            if (outputExistsAfterRestore) {\r\n              // 附加缓存信息并返回\r\n              cachedResult.cache = {\r\n                enabled: true,\r\n                hit: true,\r\n                lookupMs,\r\n                savedMs: typeof cachedResult.duration === 'number' ? cachedResult.duration : 0,\r\n                dir: cache.getDirectory?.() || undefined,\r\n                ttl: cache.getTTL?.() || undefined,\r\n                maxSize: cache.getMaxSize?.() || undefined,\r\n              }\r\n              this.logger.info('从缓存恢复文件成功 (cache hit, files restored)')\r\n              return cachedResult\r\n            }\r\n          }\r\n\r\n          // 文件恢复失败，使缓存失效并重新构建\r\n          this.logger.info('从缓存恢复文件失败，使缓存失效并重新构建')\r\n          const crypto = await import('crypto')\r\n          const configHash = crypto.createHash('md5').update(JSON.stringify(cacheKey)).digest('hex')\r\n          await cache.delete(`build:${configHash}`)\r\n        }\r\n      } else if (cacheEnabled) {\r\n        this.logger.debug('未命中构建缓存 (cache miss)')\r\n      } else if (isCleanMode) {\r\n        this.logger.debug('清理模式：已禁用缓存')\r\n      }\r\n\r\n      const rollup = await this.loadRollup()\r\n      const rollupConfig = await this.transformConfig(config)\r\n\r\n      this.logger.info('开始 Rollup 构建...')\r\n      const startTime = Date.now()\r\n\r\n      // 收集带格式信息的输出\r\n      const results: Array<{ chunk: any; format: string }> = []\r\n\r\n      // 如果有多个配置，分别构建每个配置\r\n      if (this.multiConfigs && this.multiConfigs.length > 1) {\r\n        for (const singleConfig of this.multiConfigs) {\r\n          const bundle = await rollup.rollup(singleConfig)\r\n\r\n          // 生成并记录输出（保留每个配置的 format）\r\n          const { output } = await bundle.generate(singleConfig.output)\r\n          for (const item of output) {\r\n            results.push({ chunk: item, format: String(singleConfig.output?.format || 'es') })\r\n          }\r\n\r\n          // 写入文件\r\n          await bundle.write(singleConfig.output)\r\n          await bundle.close()\r\n        }\r\n      } else {\r\n        // 单配置构建\r\n        const bundle = await rollup.rollup(rollupConfig)\r\n\r\n        const outputs = Array.isArray(rollupConfig.output)\r\n          ? rollupConfig.output\r\n          : [rollupConfig.output]\r\n\r\n        for (const outputConfig of outputs) {\r\n          const { output } = await bundle.generate(outputConfig)\r\n          for (const item of output) {\r\n            results.push({ chunk: item, format: String(outputConfig?.format || 'es') })\r\n          }\r\n        }\r\n\r\n        // 写入文件\r\n        for (const outputConfig of outputs) {\r\n          await bundle.write(outputConfig)\r\n        }\r\n\r\n        await bundle.close()\r\n      }\r\n\r\n      const duration = Date.now() - startTime\r\n\r\n      // 计算 gzip 大小并产出规范化的 outputs\r\n      const { gzipSize } = await import('gzip-size')\r\n      const outputs = [] as any[]\r\n      let totalRaw = 0\r\n      let largest = { file: '', size: 0 }\r\n      for (const r of results) {\r\n        const chunk = r.chunk\r\n        const codeOrSource = chunk.type === 'chunk' ? chunk.code : chunk.source\r\n        const rawSize = typeof codeOrSource === 'string' ? codeOrSource.length : (codeOrSource?.byteLength || 0)\r\n        const gz = typeof codeOrSource === 'string' ? await gzipSize(codeOrSource) : 0\r\n        totalRaw += rawSize\r\n        if (rawSize > largest.size) {\r\n          largest = { file: chunk.fileName, size: rawSize }\r\n        }\r\n        outputs.push({\r\n          fileName: chunk.fileName,\r\n          size: rawSize,\r\n          source: codeOrSource,\r\n          type: chunk.type,\r\n          format: r.format,\r\n          gzipSize: gz\r\n        })\r\n      }\r\n\r\n      // 构建结果\r\n      const buildResult: BuildResult = {\r\n        success: true,\r\n        outputs,\r\n        duration,\r\n        stats: {\r\n          buildTime: duration,\r\n          fileCount: outputs.length,\r\n          totalSize: {\r\n            raw: totalRaw,\r\n            gzip: outputs.reduce((s, o) => s + (o.gzipSize || 0), 0),\r\n            brotli: 0,\r\n            byType: {},\r\n            byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 },\r\n            largest,\r\n            fileCount: outputs.length\r\n          },\r\n          byFormat: {\r\n            esm: { fileCount: outputs.filter(o => o.format === 'es' || o.format === 'esm').length, size: { raw: outputs.filter(o => o.format === 'es' || o.format === 'esm').reduce((s, o) => s + o.size, 0), gzip: outputs.filter(o => o.format === 'es' || o.format === 'esm').reduce((s, o) => s + (o.gzipSize || 0), 0), brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\r\n            cjs: { fileCount: outputs.filter(o => o.format === 'cjs').length, size: { raw: outputs.filter(o => o.format === 'cjs').reduce((s, o) => s + o.size, 0), gzip: outputs.filter(o => o.format === 'cjs').reduce((s, o) => s + (o.gzipSize || 0), 0), brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\r\n            umd: { fileCount: outputs.filter(o => o.format === 'umd').length, size: { raw: outputs.filter(o => o.format === 'umd').reduce((s, o) => s + o.size, 0), gzip: outputs.filter(o => o.format === 'umd').reduce((s, o) => s + (o.gzipSize || 0), 0), brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\r\n            iife: { fileCount: outputs.filter(o => o.format === 'iife').length, size: { raw: outputs.filter(o => o.format === 'iife').reduce((s, o) => s + o.size, 0), gzip: outputs.filter(o => o.format === 'iife').reduce((s, o) => s + (o.gzipSize || 0), 0), brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\r\n            css: { fileCount: outputs.filter(o => o.format === 'css').length, size: { raw: outputs.filter(o => o.format === 'css').reduce((s, o) => s + o.size, 0), gzip: outputs.filter(o => o.format === 'css').reduce((s, o) => s + (o.gzipSize || 0), 0), brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0, css: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } }\r\n          },\r\n          modules: {\r\n            total: 0,\r\n            external: 0,\r\n            internal: 0,\r\n            largest: {\r\n              id: '',\r\n              size: 0,\r\n              renderedLength: 0,\r\n              originalLength: 0,\r\n              isEntry: false,\r\n              isExternal: false,\r\n              importedIds: [],\r\n              dynamicallyImportedIds: [],\r\n              importers: [],\r\n              dynamicImporters: []\r\n            }\r\n          },\r\n          dependencies: {\r\n            total: 0,\r\n            external: [],\r\n            bundled: [],\r\n            circular: []\r\n          }\r\n        },\r\n        performance: this.getPerformanceMetrics(),\r\n        warnings: [],\r\n        errors: [],\r\n        buildId: `rollup-${Date.now()}`,\r\n        timestamp: Date.now(),\r\n        bundler: 'rollup',\r\n        mode: 'production'\r\n      }\r\n\r\n      this.logger.success(`Rollup 构建完成 (${duration}ms)`)\r\n\r\n      // 缓存构建结果\r\n      if (cacheEnabled) {\r\n        await cache.cacheBuildResult(cacheKey, buildResult)\r\n        buildResult.cache = {\r\n          enabled: true,\r\n          hit: false,\r\n          lookupMs,\r\n          savedMs: 0,\r\n          dir: cache.getDirectory?.() || undefined,\r\n          ttl: cache.getTTL?.() || undefined,\r\n          maxSize: cache.getMaxSize?.() || undefined,\r\n        }\r\n        this.logger.debug('构建结果已缓存')\r\n      }\r\n\r\n      return buildResult\r\n\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.BUILD_FAILED,\r\n        `Rollup 构建失败: ${(error as Error).message}`,\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 启动监听模式\r\n   */\r\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\r\n    if (!this.available) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rollup 适配器不可用'\r\n      )\r\n    }\r\n\r\n    try {\r\n      const rollup = await this.loadRollup()\r\n      const rollupConfig = await this.transformConfig(config)\r\n\r\n      // 添加监听配置\r\n      const watchOptions = config.watch || {}\r\n      const watchConfig = {\r\n        ...rollupConfig,\r\n        watch: {\r\n          include: (watchOptions as any).include || ['src/**/*'],\r\n          exclude: (watchOptions as any).exclude || ['node_modules/**/*'],\r\n          ...(typeof watchOptions === 'object' ? watchOptions : {})\r\n        }\r\n      }\r\n\r\n      const watcher = rollup.watch(watchConfig)\r\n\r\n      // 创建统一的监听器接口\r\n      const buildWatcher = {\r\n        patterns: watchConfig.watch.include,\r\n        watching: true,\r\n\r\n        async close() {\r\n          await watcher.close()\r\n        },\r\n\r\n        on(event: string, listener: (...args: any[]) => void) {\r\n          watcher.on(event, listener)\r\n          return this\r\n        },\r\n\r\n        off(event: string, listener: (...args: any[]) => void) {\r\n          watcher.off(event, listener)\r\n          return this\r\n        },\r\n\r\n        emit(_event: string, ..._args: any[]) {\r\n          return false // Rollup watcher 不支持 emit\r\n        }\r\n      } as BuildWatcher\r\n\r\n      this.logger.info('Rollup 监听模式已启动')\r\n      return buildWatcher\r\n\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.BUILD_FAILED,\r\n        `启动 Rollup 监听模式失败: ${(error as Error).message}`,\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 转换配置\r\n   */\r\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\r\n    // 转换为 Rollup 配置格式\r\n    const basePlugins = await this.getBasePlugins(config)\r\n\r\n    // 应用 exclude 过滤到输入配置\r\n    const filteredInput = await normalizeInput(config.input, process.cwd(), config.exclude)\r\n\r\n    const rollupConfig: any = {\r\n      input: filteredInput,\r\n      external: config.external,\r\n      onwarn: this.getOnWarn(config)\r\n    }\r\n\r\n    // 注入 Acorn 插件以支持在转换前解析 TSX/JSX/TS 语法，避免早期解析错误\r\n    const acornPlugins = await this.getAcornPlugins()\r\n    if (acornPlugins.length > 0) {\r\n      rollupConfig.acorn = { ...(rollupConfig.acorn || {}), injectPlugins: acornPlugins }\r\n    }\r\n\r\n    // 转换输出配置\r\n    if (config.output) {\r\n      const outputConfig = config.output as any\r\n\r\n      // 优先处理对象化的输出配置（output.esm / output.cjs / output.umd）\r\n      if (outputConfig.esm || outputConfig.cjs || outputConfig.umd) {\r\n        const configs: any[] = []\r\n\r\n        // 处理 ESM 配置\r\n        if (outputConfig.esm && outputConfig.esm !== false) {\r\n          const isSimpleConfig = outputConfig.esm === true\r\n          const esmConfig = isSimpleConfig ? {} : outputConfig.esm\r\n          const esmDir = esmConfig.dir || 'es'\r\n          const esmPlugins = await this.transformPluginsForFormat(config.plugins || [], esmDir, { emitDts: true })\r\n          // 使用 output 中的 input 配置，如果没有则使用默认或顶层 input\r\n          const esmInput = esmConfig.input\r\n            ? await normalizeInput(esmConfig.input, process.cwd(), config.exclude)\r\n            : filteredInput\r\n          // 统一注入 Banner/Footer/Intro/Outro\r\n          const bannerCfgEsm = (config as any).banner\r\n          const _bannerEsm = await this.resolveBanner(bannerCfgEsm, config)\r\n          const _footerEsm = await this.resolveFooter(bannerCfgEsm)\r\n          const _introEsm = await this.resolveIntro(bannerCfgEsm)\r\n          const _outroEsm = await this.resolveOutro(bannerCfgEsm)\r\n          configs.push({\r\n            input: esmInput,\r\n            external: config.external,\r\n            plugins: [...basePlugins, ...esmPlugins],\r\n            output: {\r\n              dir: esmDir,\r\n              format: 'es',\r\n              sourcemap: esmConfig.sourcemap ?? outputConfig.sourcemap,\r\n              entryFileNames: '[name].js',\r\n              chunkFileNames: '[name].js',\r\n              assetFileNames: '[name].[ext]',\r\n              exports: esmConfig.exports ?? 'auto',\r\n              preserveModules: esmConfig.preserveStructure ?? true,\r\n              preserveModulesRoot: 'src',\r\n              globals: outputConfig.globals,\r\n              name: outputConfig.name,\r\n              banner: _bannerEsm,\r\n              footer: _footerEsm,\r\n              intro: _introEsm,\r\n              outro: _outroEsm\r\n            },\r\n            treeshake: config.treeshake,\r\n            onwarn: this.getOnWarn(config)\r\n          })\r\n        }\r\n\r\n        // 处理 CJS 配置\r\n        if (outputConfig.cjs && outputConfig.cjs !== false) {\r\n          const isSimpleConfig = outputConfig.cjs === true\r\n          const cjsConfig = isSimpleConfig ? {} : outputConfig.cjs\r\n          const cjsDir = cjsConfig.dir || 'lib'\r\n          const cjsPlugins = await this.transformPluginsForFormat(config.plugins || [], cjsDir, { emitDts: true })\r\n          // 使用 output 中的 input 配置，如果没有则使用默认或顶层 input\r\n          const cjsInput = cjsConfig.input\r\n            ? await normalizeInput(cjsConfig.input, process.cwd(), config.exclude)\r\n            : filteredInput\r\n          // 统一注入 Banner/Footer/Intro/Outro\r\n          const bannerCfgCjs = (config as any).banner\r\n          const _bannerCjs = await this.resolveBanner(bannerCfgCjs, config)\r\n          const _footerCjs = await this.resolveFooter(bannerCfgCjs)\r\n          const _introCjs = await this.resolveIntro(bannerCfgCjs)\r\n          const _outroCjs = await this.resolveOutro(bannerCfgCjs)\r\n          configs.push({\r\n            input: cjsInput,\r\n            external: config.external,\r\n            plugins: [...basePlugins, ...cjsPlugins],\r\n            output: {\r\n              dir: cjsDir,\r\n              format: 'cjs',\r\n              sourcemap: cjsConfig.sourcemap ?? outputConfig.sourcemap,\r\n              entryFileNames: '[name].cjs',\r\n              chunkFileNames: '[name].cjs',\r\n              assetFileNames: '[name].[ext]',\r\n              exports: cjsConfig.exports ?? 'named',\r\n              preserveModules: cjsConfig.preserveStructure ?? true,\r\n              preserveModulesRoot: 'src',\r\n              globals: outputConfig.globals,\r\n              name: outputConfig.name,\r\n              banner: _bannerCjs,\r\n              footer: _footerCjs,\r\n              intro: _introCjs,\r\n              outro: _outroCjs\r\n            },\r\n            treeshake: config.treeshake,\r\n            onwarn: this.getOnWarn(config)\r\n          })\r\n        }\r\n\r\n        if (outputConfig.umd || (config as any).umd) {\r\n          const umdCfg = await this.createUMDConfig(config, filteredInput)\r\n          // umdCfg 现在可能是数组（包含常规版本和压缩版本）\r\n          if (Array.isArray(umdCfg)) {\r\n            configs.push(...umdCfg)\r\n          } else {\r\n            configs.push(umdCfg)\r\n          }\r\n        }\r\n\r\n        // 如果未声明 umd，不自动添加\r\n        // UMD 应该通过配置显式启用，或者在 output.format 中包含 'umd'\r\n\r\n        if (configs.length > 0) {\r\n          this.multiConfigs = configs\r\n\r\n          // 为了兼容测试，返回包含output数组的配置\r\n          if (configs.length > 1) {\r\n            return {\r\n              ...rollupConfig,\r\n              output: configs.map(config => config.output).filter(Boolean)\r\n            }\r\n          }\r\n          return configs[0]\r\n        }\r\n        // 如果没有任何子配置，则回退到单一输出逻辑\r\n      }\r\n\r\n      // 处理数组或者单一 format 字段\r\n      // 处理多格式输出\r\n      if (Array.isArray(outputConfig.format)) {\r\n        // 原有多格式逻辑（略微精简），同上\r\n        const isMultiEntry = this.isMultiEntryBuild(filteredInput)\r\n        let formats = outputConfig.format\r\n        let umdConfig: any = null\r\n\r\n        if (isMultiEntry) {\r\n          const originalFormats = [...formats]\r\n          const hasUMD = formats.includes('umd')\r\n          const forceUMD = (config as any).umd?.forceMultiEntry || false\r\n          const umdEnabled = (config as any).umd?.enabled\r\n          this.logger.info(`多入口项目UMD检查: hasUMD=${hasUMD}, forceUMD=${forceUMD}, umdEnabled=${umdEnabled}`)\r\n\r\n          if (hasUMD && forceUMD) {\r\n            umdConfig = await this.createUMDConfig(config, filteredInput)\r\n            this.logger.info('多入口项目强制启用 UMD 构建')\r\n          } else if (hasUMD) {\r\n            formats = formats.filter((format: any) => format !== 'umd' && format !== 'iife')\r\n            if ((config as any).umd?.enabled !== false) {\r\n              umdConfig = await this.createUMDConfig(config, filteredInput)\r\n              this.logger.info('为多入口项目创建独立的 UMD 构建')\r\n            }\r\n          } else {\r\n            if ((config as any).umd?.enabled) {\r\n              umdConfig = await this.createUMDConfig(config, filteredInput)\r\n              this.logger.info('根据UMD配置为多入口项目创建 UMD 构建')\r\n            }\r\n            formats = formats.filter((format: any) => format !== 'umd' && format !== 'iife')\r\n          }\r\n\r\n          const filteredFormats = originalFormats.filter((format: any) => !formats.includes(format))\r\n          if (filteredFormats.length > 0 && !umdConfig) {\r\n            this.logger.warn(`多入口构建不支持 ${filteredFormats.join(', ')} 格式，已自动过滤`)\r\n          }\r\n        } else {\r\n          const hasUmdSection = Boolean((config as any).umd || (config as any).output?.umd)\r\n          if (formats.includes('umd') || (config as any).umd?.enabled || hasUmdSection) {\r\n            umdConfig = await this.createUMDConfig(config, filteredInput)\r\n          }\r\n          formats = formats.filter((f: any) => f !== 'umd' && f !== 'iife')\r\n        }\r\n\r\n        const configs: any[] = []\r\n        for (const format of formats) {\r\n          const mapped = this.mapFormat(format)\r\n          const isESM = format === 'esm'\r\n          const isCJS = format === 'cjs'\r\n          const dir = isESM ? 'es' : isCJS ? 'lib' : 'dist'\r\n          const entryFileNames = isESM ? '[name].js' : isCJS ? '[name].cjs' : '[name].js'\r\n          const chunkFileNames = entryFileNames\r\n          const formatPlugins = await this.transformPluginsForFormat(config.plugins || [], dir, { emitDts: true })\r\n          try {\r\n            const names = [...(formatPlugins || [])].map((p: any) => p?.name || '(anon)')\r\n            this.logger.info(`[${format}] 有效插件: ${names.join(', ')}`)\r\n          } catch { }\r\n          const bannerCfg = (config as any).banner\r\n          const _banner = await this.resolveBanner(bannerCfg, config)\r\n          const _footer = await this.resolveFooter(bannerCfg)\r\n          const _intro = await this.resolveIntro(bannerCfg)\r\n          const _outro = await this.resolveOutro(bannerCfg)\r\n          configs.push({\r\n            input: filteredInput,\r\n            external: config.external,\r\n            plugins: [...basePlugins, ...formatPlugins],\r\n            output: {\r\n              dir,\r\n              format: mapped,\r\n              name: outputConfig.name,\r\n              sourcemap: outputConfig.sourcemap,\r\n              globals: outputConfig.globals,\r\n              entryFileNames,\r\n              chunkFileNames,\r\n              assetFileNames: '[name].[ext]',\r\n              exports: isESM ? (outputConfig as any).exports ?? 'auto' : 'named',\r\n              preserveModules: isESM || isCJS,\r\n              preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined,\r\n              banner: _banner,\r\n              footer: _footer,\r\n              intro: _intro,\r\n              outro: _outro\r\n            },\r\n            treeshake: config.treeshake,\r\n            onwarn: this.getOnWarn(config)\r\n          })\r\n        }\r\n        if (umdConfig) {\r\n          // umdConfig 现在可能是数组（包含常规版本和压缩版本）\r\n          if (Array.isArray(umdConfig)) {\r\n            configs.push(...umdConfig)\r\n          } else {\r\n            configs.push(umdConfig)\r\n          }\r\n        }\r\n        this.multiConfigs = configs\r\n\r\n        // 为了兼容测试，返回包含output数组的配置\r\n        if (configs.length > 1) {\r\n          return {\r\n            ...rollupConfig,\r\n            output: configs.map(config => config.output).filter(Boolean)\r\n          }\r\n        }\r\n        return configs[0]\r\n      } else {\r\n        const format = (outputConfig as any).format\r\n        const mapped = this.mapFormat(format)\r\n        const isESM = format === 'esm'\r\n        const isCJS = format === 'cjs'\r\n        // 使用配置中的输出目录，如果没有则使用默认值\r\n        const defaultDir = isESM ? 'es' : isCJS ? 'lib' : 'dist'\r\n        const dir = outputConfig.dir || defaultDir\r\n        const entryFileNames = isESM ? '[name].js' : isCJS ? '[name].cjs' : '[name].js'\r\n        const chunkFileNames = entryFileNames\r\n        const userPlugins = await this.transformPluginsForFormat(config.plugins || [], dir, { emitDts: true })\r\n        try {\r\n          const names = [...(userPlugins || [])].map((p: any) => p?.name || '(anon)')\r\n          this.logger.info(`[${format}] 有效插件: ${names.join(', ')}`)\r\n        } catch { }\r\n        const bannerCfg2 = (config as any).banner\r\n        const _banner2 = await this.resolveBanner(bannerCfg2, config)\r\n        const _footer2 = await this.resolveFooter(bannerCfg2)\r\n        const _intro2 = await this.resolveIntro(bannerCfg2)\r\n        const _outro2 = await this.resolveOutro(bannerCfg2)\r\n        rollupConfig.plugins = [...basePlugins, ...userPlugins]\r\n        rollupConfig.output = {\r\n          dir,\r\n          format: mapped,\r\n          name: outputConfig.name,\r\n          sourcemap: outputConfig.sourcemap,\r\n          globals: outputConfig.globals,\r\n          entryFileNames,\r\n          chunkFileNames,\r\n          assetFileNames: '[name].[ext]',\r\n          exports: isESM ? (outputConfig as any).exports ?? 'auto' : 'named',\r\n          preserveModules: isESM || isCJS,\r\n          preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined,\r\n          banner: _banner2,\r\n          footer: _footer2,\r\n          intro: _intro2,\r\n          outro: _outro2\r\n        }\r\n      }\r\n    }\r\n\r\n    // 转换其他选项\r\n    if (config.treeshake !== undefined) {\r\n      rollupConfig.treeshake = config.treeshake\r\n    }\r\n\r\n    return rollupConfig\r\n  }\r\n\r\n  /**\r\n   * 转换插件\r\n   */\r\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\r\n    const transformedPlugins: BundlerSpecificPlugin[] = []\r\n\r\n    for (const plugin of plugins) {\r\n      try {\r\n        // 如果插件有 plugin 函数，调用它来获取实际插件\r\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\r\n          const actualPlugin = await plugin.plugin()\r\n          transformedPlugins.push(actualPlugin)\r\n        }\r\n        // 如果插件有 rollup 特定配置，使用它\r\n        else if (plugin.rollup) {\r\n          transformedPlugins.push({ ...plugin, ...plugin.rollup })\r\n        }\r\n        // 直接使用插件\r\n        else {\r\n          transformedPlugins.push(plugin)\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\r\n      }\r\n    }\r\n\r\n    return transformedPlugins\r\n  }\r\n\r\n  /**\r\n   * 为特定格式转换插件，动态设置TypeScript插件的declarationDir\r\n   */\r\n  async transformPluginsForFormat(plugins: any[], outputDir: string, options?: { emitDts?: boolean }): Promise<BundlerSpecificPlugin[]> {\r\n    const { emitDts = true } = options || {}\r\n    const transformedPlugins: BundlerSpecificPlugin[] = []\r\n\r\n    for (const plugin of plugins) {\r\n      try {\r\n        const pluginName: string = (plugin && (plugin.name || plugin?.rollup?.name)) || ''\r\n        const nameLc = String(pluginName).toLowerCase()\r\n\r\n        // 当明确不需要 d.ts（例如 UMD/IIFE）时，跳过纯 dts 插件，但保留 typescript 插件（用于解析 .ts 文件）\r\n        if (!emitDts && nameLc.includes('dts') && !nameLc.includes('typescript')) {\r\n          continue\r\n        }\r\n\r\n        // 如果插件有 plugin 函数，调用它来获取实际插件\r\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\r\n          // 如果是TypeScript插件，需要特殊处理（为 ESM/CJS 定向声明输出目录）\r\n          if (nameLc === 'typescript') {\r\n            // 重新创建TypeScript插件，设置正确的declarationDir\r\n            const typescript = await import('@rollup/plugin-typescript')\r\n\r\n            // 直接从插件包装对象读取原始选项（在策略中附加）\r\n            const originalOptions = (plugin as any).options || {}\r\n\r\n            // 清理不被 @rollup/plugin-typescript 支持的字段\r\n            const { tsconfigOverride: _ignored, compilerOptions: origCO = {}, ...rest } = originalOptions as any\r\n\r\n            // 创建新的TypeScript插件，保留 include/exclude 等选项，并覆盖声明目录\r\n            // 若指定的 tsconfig 不存在，则删除该字段，避免插件内部解析异常\r\n            try {\r\n              const pathMod = await import('path')\r\n              const fsMod = await import('fs')\r\n              if (typeof (rest as any).tsconfig === 'string') {\r\n                const tsconfigAbs = pathMod.resolve(process.cwd(), (rest as any).tsconfig)\r\n                if (!fsMod.existsSync(tsconfigAbs)) {\r\n                  delete (rest as any).tsconfig\r\n                }\r\n              }\r\n            } catch { }\r\n\r\n            const newPlugin = typescript.default({\r\n              ...rest,\r\n              compilerOptions: {\r\n                ...origCO,\r\n                declaration: emitDts,\r\n                emitDeclarationOnly: emitDts,\r\n                // 关闭 d.ts 的 sourceMap，避免生成到上级目录等不合法路径\r\n                declarationMap: false,\r\n                declarationDir: emitDts ? outputDir : undefined,\r\n                outDir: emitDts ? outputDir : undefined,\r\n                // 避免 @rollup/plugin-typescript 在缺少 tsconfig 时的根目录推断失败\r\n                rootDir: (origCO as any)?.rootDir ?? 'src'\r\n              }\r\n            })\r\n\r\n            transformedPlugins.push(newPlugin)\r\n          } else {\r\n            // 其他插件正常处理\r\n            const actualPlugin = await plugin.plugin()\r\n            transformedPlugins.push(actualPlugin)\r\n          }\r\n        }\r\n        // 如果插件有 rollup 特定配置，使用它\r\n        else if (plugin.rollup) {\r\n          // UMD/IIFE 禁止纯 dts 插件，但保留 typescript 插件\r\n          const rnameLc = String(plugin.rollup.name || '').toLowerCase()\r\n          if (!emitDts && rnameLc.includes('dts') && !rnameLc.includes('typescript')) {\r\n            continue\r\n          }\r\n          transformedPlugins.push({ ...plugin, ...plugin.rollup })\r\n        }\r\n        // 直接使用已实例化的插件\r\n        else {\r\n          // UMD/IIFE 禁止纯 dts 插件，但保留 typescript 插件\r\n          const inameLc = String((plugin as any)?.name || '').toLowerCase()\r\n          if (!emitDts && inameLc.includes('dts') && !inameLc.includes('typescript')) {\r\n            continue\r\n          }\r\n          transformedPlugins.push(plugin)\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\r\n      }\r\n    }\r\n\r\n    return transformedPlugins\r\n  }\r\n\r\n  /**\r\n   * 检查功能支持\r\n   */\r\n  supportsFeature(feature: any): boolean {\r\n    // Rollup 支持的功能\r\n    const supportedFeatures = [\r\n      'treeshaking',\r\n      'code-splitting',\r\n      'dynamic-import',\r\n      'sourcemap',\r\n      'plugin-system',\r\n      'config-file',\r\n      'cache-support'\r\n    ]\r\n\r\n    return supportedFeatures.includes(feature)\r\n  }\r\n\r\n  /**\r\n   * 获取功能支持映射\r\n   */\r\n  getFeatureSupport(): any {\r\n    return {\r\n      treeshaking: true,\r\n      'code-splitting': true,\r\n      'dynamic-import': true,\r\n      'worker-support': false,\r\n      'css-bundling': false,\r\n      'asset-processing': true,\r\n      sourcemap: true,\r\n      minification: false,\r\n      'hot-reload': false,\r\n      'module-federation': false,\r\n      'incremental-build': false,\r\n      'parallel-build': false,\r\n      'cache-support': true,\r\n      'plugin-system': true,\r\n      'config-file': true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取性能指标\r\n   */\r\n  getPerformanceMetrics(): PerformanceMetrics {\r\n    // 返回默认指标，因为 PerformanceMonitor 没有直接的 getMetrics 方法\r\n    // 性能指标应该通过 endBuild 方法获取\r\n    return {\r\n      buildTime: 0,\r\n      memoryUsage: {\r\n        heapUsed: process.memoryUsage().heapUsed,\r\n        heapTotal: process.memoryUsage().heapTotal,\r\n        external: process.memoryUsage().external,\r\n        rss: process.memoryUsage().rss,\r\n        peak: 0,\r\n        trend: []\r\n      },\r\n      cacheStats: {\r\n        hits: 0,\r\n        misses: 0,\r\n        hitRate: 0,\r\n        size: 0,\r\n        entries: 0,\r\n        timeSaved: 0\r\n      },\r\n      fileStats: {\r\n        totalFiles: 0,\r\n        filesByType: {},\r\n        averageProcessingTime: 0,\r\n        slowestFiles: [],\r\n        processingRate: 0\r\n      },\r\n      pluginPerformance: [],\r\n      systemResources: {\r\n        cpuUsage: 0,\r\n        availableMemory: 0,\r\n        diskUsage: {\r\n          total: 0,\r\n          used: 0,\r\n          available: 0,\r\n          usagePercent: 0\r\n        }\r\n      },\r\n      bundleSize: 0 // 添加bundleSize属性\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * 判断是否启用构建缓存\r\n   */\r\n  private isCacheEnabled(config: any): boolean {\r\n    const c = (config as any)?.cache\r\n    if (c === false) return false\r\n    if (typeof c === 'object' && c) {\r\n      if ('enabled' in c) return (c as any).enabled !== false\r\n    }\r\n    return true\r\n  }\r\n  /**\r\n   * 验证输出产物是否存在\r\n   * 检查关键输出文件是否存在，如果不存在则缓存应该失效\r\n   */\r\n  private async validateOutputArtifacts(config: any): Promise<boolean> {\r\n    try {\r\n      const fs = await import('fs-extra')\r\n\r\n      // 获取输出配置 - 使用 any 类型避免类型问题\r\n      const outputConfig = config.output || {}\r\n      const outputDir = config.outDir || 'dist'\r\n\r\n      // 检查主要输出文件\r\n      const mainOutputFiles: string[] = []\r\n\r\n      // ESM 输出\r\n      if (outputConfig.esm) {\r\n        const esmDir = typeof outputConfig.esm === 'object' && outputConfig.esm.dir\r\n          ? outputConfig.esm.dir\r\n          : (outputConfig.esm === true ? 'es' : outputDir)\r\n        mainOutputFiles.push(path.join(esmDir, 'index.js'))\r\n      }\r\n\r\n      // CJS 输出\r\n      if (outputConfig.cjs) {\r\n        const cjsDir = typeof outputConfig.cjs === 'object' && outputConfig.cjs.dir\r\n          ? outputConfig.cjs.dir\r\n          : (outputConfig.cjs === true ? 'lib' : outputDir)\r\n        mainOutputFiles.push(path.join(cjsDir, 'index.cjs'))\r\n      }\r\n\r\n      // UMD 输出\r\n      if (outputConfig.umd) {\r\n        const umdDir = typeof outputConfig.umd === 'object' && outputConfig.umd.dir\r\n          ? outputConfig.umd.dir\r\n          : outputDir\r\n        mainOutputFiles.push(path.join(umdDir, 'index.umd.js'))\r\n      }\r\n\r\n      // 检查通用格式配置\r\n      if (outputConfig.format) {\r\n        const formats = Array.isArray(outputConfig.format) ? outputConfig.format : [outputConfig.format]\r\n        for (const format of formats) {\r\n          if (format === 'esm' && !outputConfig.esm) {\r\n            mainOutputFiles.push(path.join(outputDir, 'index.js'))\r\n          } else if (format === 'cjs' && !outputConfig.cjs) {\r\n            mainOutputFiles.push(path.join(outputDir, 'index.cjs'))\r\n          } else if (format === 'umd' && !outputConfig.umd) {\r\n            mainOutputFiles.push(path.join(outputDir, 'index.js'))\r\n          }\r\n        }\r\n      }\r\n\r\n      // 如果没有配置输出格式，检查默认输出\r\n      if (mainOutputFiles.length === 0) {\r\n        mainOutputFiles.push(path.join(outputDir, 'index.js'))\r\n      }\r\n\r\n      // 检查至少一个主要输出文件是否存在\r\n      for (const outputFile of mainOutputFiles) {\r\n        const fullPath = path.isAbsolute(outputFile)\r\n          ? outputFile\r\n          : path.resolve(process.cwd(), outputFile)\r\n\r\n        if (await fs.pathExists(fullPath)) {\r\n          this.logger.debug(`输出产物验证通过: ${fullPath}`)\r\n          return true\r\n        }\r\n      }\r\n\r\n      this.logger.debug(`输出产物验证失败，未找到任何主要输出文件: ${mainOutputFiles.join(', ')}`)\r\n      return false\r\n    } catch (error) {\r\n      this.logger.warn(`验证输出产物时出错: ${(error as Error).message}`)\r\n      // 出错时保守处理，认为产物不存在\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析 config.cache -> RollupCache 选项\r\n   */\r\n  private resolveCacheOptions(config: any): { cacheDir?: string; ttl?: number; maxSize?: number } {\r\n    const c = (config as any)?.cache\r\n    const opts: { cacheDir?: string; ttl?: number; maxSize?: number } = {}\r\n    if (typeof c === 'object' && c) {\r\n      if (typeof c.dir === 'string' && c.dir.trim()) {\r\n        opts.cacheDir = path.isAbsolute(c.dir) ? c.dir : path.resolve(process.cwd(), c.dir)\r\n      }\r\n      if (typeof c.maxAge === 'number' && isFinite(c.maxAge) && c.maxAge > 0) {\r\n        opts.ttl = Math.floor(c.maxAge)\r\n      }\r\n      if (typeof c.maxSize === 'number' && isFinite(c.maxSize) && c.maxSize > 0) {\r\n        opts.maxSize = Math.floor(c.maxSize)\r\n      }\r\n    }\r\n    return opts\r\n  }\r\n\r\n\r\n  /**\r\n   * 尝试加载 Acorn 插件（JSX 与 TypeScript），以便 Rollup 在插件转换之前也能解析相应语法\r\n   */\r\n  private async getAcornPlugins(): Promise<any[]> {\r\n    const plugins: any[] = []\r\n    try {\r\n      const jsx = (await import('acorn-jsx')).default\r\n      // acorn-jsx 返回一个插件工厂函数\r\n      plugins.push(jsx())\r\n    } catch (e) {\r\n      // 忽略\r\n    }\r\n\r\n    try {\r\n      const ts = (await import('acorn-typescript')).default\r\n      plugins.push(ts())\r\n    } catch (e) {\r\n      // 忽略\r\n    }\r\n\r\n    return plugins\r\n  }\r\n\r\n  /**\r\n   * 清理资源\r\n   */\r\n  async dispose(): Promise<void> {\r\n    // Rollup 适配器没有需要清理的资源\r\n  }\r\n\r\n  /**\r\n   * 加载 Rollup\r\n   */\r\n  private async loadRollup(): Promise<any> {\r\n    try {\r\n      // 使用动态 import 加载 Rollup\r\n      return await import('rollup')\r\n    } catch (error) {\r\n      throw new Error('Rollup 未安装，请运行: npm install rollup --save-dev')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取基础插件（内置）\r\n   * - node-resolve: 解决第三方包解析，并优先浏览器分支\r\n   * - commonjs: 兼容 CommonJS 包\r\n   * - json: 允许 import JSON（如某些包内的 package.json 或配置 JSON）\r\n   */\r\n  private async getBasePlugins(config: UnifiedConfig): Promise<BundlerSpecificPlugin[]> {\r\n    try {\r\n      const { nodeResolve } = await import('@rollup/plugin-node-resolve')\r\n      const commonjs = (await import('@rollup/plugin-commonjs')).default\r\n      const json = (await import('@rollup/plugin-json')).default\r\n\r\n      const resolvePlugin = nodeResolve({\r\n        browser: true,\r\n        preferBuiltins: false,\r\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\r\n      })\r\n\r\n      const commonjsPlugin = commonjs({\r\n        include: /node_modules/,\r\n        ignoreDynamicRequires: false\r\n      })\r\n\r\n      const jsonPlugin = json({\r\n        // 优化 JSON 插件配置\r\n        compact: false,  // 保持 JSON 格式化，便于调试\r\n        namedExports: true,  // 支持命名导出\r\n        preferConst: true,  // 使用 const 声明\r\n        // 包含所有 JSON 文件\r\n        include: ['**/*.json'],\r\n        exclude: ['node_modules/**']\r\n      })\r\n\r\n      const plugins = [\r\n        resolvePlugin as unknown as BundlerSpecificPlugin,\r\n        commonjsPlugin as unknown as BundlerSpecificPlugin,\r\n        jsonPlugin as unknown as BundlerSpecificPlugin\r\n      ]\r\n\r\n      // 添加 Babel 插件（如果启用）\r\n      const babelPlugin = await this.getBabelPlugin(config)\r\n      if (babelPlugin) {\r\n        plugins.push(babelPlugin)\r\n      }\r\n\r\n      return plugins\r\n    } catch (error) {\r\n      this.logger.warn('基础插件加载失败，将尝试继续构建', (error as Error).message)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取 Babel 插件\r\n   */\r\n  private async getBabelPlugin(config: UnifiedConfig): Promise<BundlerSpecificPlugin | null> {\r\n    const babelConfig = (config as any).babel\r\n\r\n    if (!babelConfig?.enabled) {\r\n      return null\r\n    }\r\n\r\n    try {\r\n      const { getBabelOutputPlugin } = await import('@rollup/plugin-babel')\r\n\r\n      const babelOptions: any = {\r\n        babelHelpers: babelConfig.runtime ? 'runtime' : 'bundled',\r\n        exclude: babelConfig.exclude || /node_modules/,\r\n        include: babelConfig.include,\r\n        extensions: ['.js', '.jsx', '.ts', '.tsx'],\r\n        presets: babelConfig.presets || [],\r\n        plugins: babelConfig.plugins || []\r\n      }\r\n\r\n      // 添加默认预设（如果没有指定）\r\n      if (babelOptions.presets.length === 0) {\r\n        babelOptions.presets = [\r\n          ['@babel/preset-env', {\r\n            targets: babelConfig.targets || 'defaults',\r\n            useBuiltIns: babelConfig.polyfill === 'usage' ? 'usage' : false,\r\n            corejs: babelConfig.polyfill ? 3 : false\r\n          }]\r\n        ]\r\n      }\r\n\r\n      // 添加运行时插件（如果启用）\r\n      if (babelConfig.runtime && !babelOptions.plugins.some((p: any) =>\r\n        (Array.isArray(p) ? p[0] : p).includes('@babel/plugin-transform-runtime')\r\n      )) {\r\n        babelOptions.plugins.push(['@babel/plugin-transform-runtime', {\r\n          corejs: false,\r\n          helpers: true,\r\n          regenerator: true,\r\n          useESModules: true\r\n        }])\r\n      }\r\n\r\n      // 使用配置文件（如果指定）\r\n      if (babelConfig.configFile !== false) {\r\n        babelOptions.configFile = babelConfig.configFile\r\n      }\r\n\r\n      if (babelConfig.babelrc !== false) {\r\n        babelOptions.babelrc = babelConfig.babelrc\r\n      }\r\n\r\n      return getBabelOutputPlugin(babelOptions) as unknown as BundlerSpecificPlugin\r\n    } catch (error) {\r\n      this.logger.warn('Babel 插件加载失败，将跳过 Babel 转换', (error as Error).message)\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 映射输出格式\r\n   */\r\n  private mapFormat(format: any): string {\r\n    if (typeof format === 'string') {\r\n      const formatMap: Record<string, string> = {\r\n        esm: 'es',\r\n        cjs: 'cjs',\r\n        umd: 'umd',\r\n        iife: 'iife'\r\n      }\r\n      return formatMap[format] || format\r\n    }\r\n    return 'es'\r\n  }\r\n\r\n  /**\r\n   * 检查是否为多入口构建\r\n   */\r\n  private isMultiEntryBuild(input: any): boolean {\r\n    // 如果input是数组，则为多入口\r\n    if (Array.isArray(input)) {\r\n      return input.length > 1\r\n    }\r\n\r\n    // 如果input是对象，则为多入口\r\n    if (typeof input === 'object' && input !== null) {\r\n      return Object.keys(input).length > 1\r\n    }\r\n\r\n    // 如果input是字符串且包含glob模式，可能为多入口\r\n    if (typeof input === 'string') {\r\n      // 检查是否包含glob通配符\r\n      return input.includes('*') || input.includes('?') || input.includes('[')\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 创建 UMD 配置（返回常规版本和压缩版本的数组）\r\n   */\r\n  private async createUMDConfig(config: UnifiedConfig, filteredInput?: string | string[] | Record<string, string>): Promise<any[]> {\r\n    // 处理 boolean 配置\r\n    let umdSection = (config as any).umd || (config as any).output?.umd || {}\r\n    if (umdSection === true) {\r\n      umdSection = {} // 使用默认配置\r\n    } else if (umdSection === false) {\r\n      return [] // 禁用 UMD，返回空数组\r\n    }\r\n    const outputConfig = config.output || {}\r\n\r\n    // 确定 UMD 入口文件\r\n    const fs = await import('fs')\r\n    const path = await import('path')\r\n    const projectRoot = (config as any).root || (config as any).cwd || process.cwd()\r\n\r\n    // 优先使用 output.umd.input，然后是 umd.entry，最后是顶层 input\r\n    let umdEntry = umdSection.input || umdSection.entry || (typeof filteredInput === 'string' ? filteredInput : undefined)\r\n\r\n    // 如果有通配符，需要解析\r\n    if (umdEntry && (umdEntry.includes('*') || Array.isArray(umdEntry))) {\r\n      const resolved = await normalizeInput(umdEntry, projectRoot, config.exclude)\r\n      // UMD 必须是单入口\r\n      if (Array.isArray(resolved)) {\r\n        throw new Error('UMD 格式不支持多入口，请在配置中指定单个入口文件。例如: umd: { entry: \"src/index.ts\" }')\r\n      }\r\n      if (typeof resolved === 'object' && !Array.isArray(resolved)) {\r\n        throw new Error('UMD 格式不支持多入口配置。请指定单个入口文件，例如: umd: { entry: \"src/index.ts\" }')\r\n      }\r\n      umdEntry = resolved as string\r\n    }\r\n\r\n    // 如果未显式指定，优先使用 UMD 专用入口，然后回退到通用入口\r\n    if (!umdEntry) {\r\n      const candidates = [\r\n        'src/index-lib.ts',\r\n        'src/index-lib.js',\r\n        'src/index-umd.ts',\r\n        'src/index-umd.js',\r\n        'src/index.ts',\r\n        'src/index.js',\r\n        'src/main.ts',\r\n        'src/main.js',\r\n        'index.ts',\r\n        'index.js'\r\n      ]\r\n\r\n      for (const entry of candidates) {\r\n        if (fs.existsSync(path.resolve(projectRoot, entry))) {\r\n          umdEntry = entry\r\n          this.logger.info(`UMD 入口文件自动检测: ${entry}`)\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!umdEntry) {\r\n        // 兜底：使用 src/index.ts，但如果不存在会在后续报错\r\n        umdEntry = 'src/index.ts'\r\n        this.logger.warn(`未找到有效的 UMD 入口文件，使用默认值: ${umdEntry}`)\r\n      }\r\n    }\r\n\r\n    // 验证入口文件是否存在\r\n    if (!fs.existsSync(path.resolve(projectRoot, umdEntry))) {\r\n      throw new Error(`UMD 入口文件不存在: ${umdEntry}\\n\\n请检查：\\n1. 确保文件存在于指定路径\\n2. 或在配置中指定正确的入口文件: umd: { entry: \"your-entry.ts\" }\\n3. 或禁用 UMD 构建: umd: { enabled: false }`)\r\n    }\r\n\r\n    // 确定 UMD 全局变量名\r\n    let umdName = umdSection.name || outputConfig.name\r\n    if (!umdName) {\r\n      // 尝试从 package.json 推断\r\n      try {\r\n        const packageJson = JSON.parse(fs.readFileSync(path.resolve(process.cwd(), 'package.json'), 'utf-8'))\r\n        umdName = this.generateUMDName(packageJson.name)\r\n      } catch {\r\n        umdName = 'MyLibrary'\r\n      }\r\n    }\r\n\r\n    // 创建 UMD 构建配置\r\n    const basePlugins = await this.getBasePlugins(config)\r\n    const userPlugins = await this.transformPluginsForFormat(config.plugins || [], (umdSection.dir || 'dist'), { emitDts: false })\r\n\r\n    // 调试：打印 UMD 插件列表，确认没有 typescript/dts 插件\r\n    try {\r\n      const names = [...(userPlugins || [])].map((p: any) => p?.name || '(anon)')\r\n      this.logger.info(`[UMD] 有效插件: ${names.join(', ')}`)\r\n    } catch { }\r\n\r\n    // 应用 Banner 和 Footer 配置\r\n    const bannerConfig = (config as any).banner\r\n    const banner = await this.resolveBanner(bannerConfig, config)\r\n    const footer = await this.resolveFooter(bannerConfig)\r\n\r\n    this.logger.info(`UMD Banner配置: ${JSON.stringify(bannerConfig)}`)\r\n    this.logger.info(`解析后的Banner: ${banner}`)\r\n\r\n    // 默认 UMD 全局变量映射（用于常见外部库）\r\n    const defaultGlobals: Record<string, string> = {\r\n      react: 'React',\r\n      'react-dom': 'ReactDOM',\r\n      'react/jsx-runtime': 'jsxRuntime',\r\n      'react/jsx-dev-runtime': 'jsxDevRuntime',\r\n      vue: 'Vue',\r\n      'vue-demi': 'VueDemi',\r\n      '@angular/core': 'ngCore',\r\n      '@angular/common': 'ngCommon',\r\n      preact: 'Preact',\r\n      'preact/hooks': 'preactHooks',\r\n      'preact/jsx-runtime': 'jsxRuntime',\r\n      'preact/jsx-dev-runtime': 'jsxDevRuntime',\r\n      'solid-js': 'Solid',\r\n      'solid-js/web': 'SolidWeb',\r\n      'solid-js/jsx-runtime': 'jsxRuntime',\r\n      svelte: 'Svelte',\r\n      lit: 'Lit',\r\n      'lit-html': 'litHtml'\r\n    }\r\n\r\n    const mergedGlobals = {\r\n      ...defaultGlobals,\r\n      ...(outputConfig.globals || {}),\r\n      ...(umdSection.globals || {})\r\n    }\r\n\r\n    // 根据入口自动推断默认 UMD 文件名\r\n    const defaultUmdFile = 'index.js'\r\n\r\n\r\n    // 创建两个 UMD 配置：常规版本和压缩版本\r\n    const baseConfig = {\r\n      input: umdEntry,\r\n      external: config.external,\r\n      treeshake: config.treeshake,\r\n      onwarn: this.getOnWarn(config)\r\n    }\r\n\r\n    const outputDir = umdSection.dir || 'dist'\r\n    const fileName = umdSection.fileName || defaultUmdFile\r\n    const baseFileName = fileName.replace(/\\.js$/, '')\r\n\r\n    // 常规版本配置\r\n    const regularConfig = {\r\n      ...baseConfig,\r\n      plugins: [...basePlugins, ...userPlugins],\r\n      output: {\r\n        format: 'umd',\r\n        name: umdName,\r\n        file: `${outputDir}/${fileName}`,\r\n        inlineDynamicImports: true,\r\n        sourcemap: (umdSection.sourcemap ?? outputConfig.sourcemap),\r\n        globals: mergedGlobals,\r\n        exports: 'named',\r\n        assetFileNames: '[name].[ext]',\r\n        banner,\r\n        footer,\r\n        intro: await this.resolveIntro(bannerConfig),\r\n        outro: await this.resolveOutro(bannerConfig)\r\n      }\r\n    }\r\n\r\n    // 压缩版本配置\r\n    const terserPlugin = await this.getTerserPlugin()\r\n    const minifiedPlugins = terserPlugin ? [...basePlugins, ...userPlugins, terserPlugin] : [...basePlugins, ...userPlugins]\r\n\r\n    const minifiedConfig = {\r\n      ...baseConfig,\r\n      plugins: minifiedPlugins,\r\n      output: {\r\n        format: 'umd',\r\n        name: umdName,\r\n        file: `${outputDir}/${baseFileName}.min.js`,\r\n        inlineDynamicImports: true,\r\n        sourcemap: (umdSection.sourcemap ?? outputConfig.sourcemap),\r\n        globals: mergedGlobals,\r\n        exports: 'named',\r\n        assetFileNames: '[name].[ext]',\r\n        banner,\r\n        footer,\r\n        intro: await this.resolveIntro(bannerConfig),\r\n        outro: await this.resolveOutro(bannerConfig)\r\n      }\r\n    }\r\n\r\n    // 返回数组配置，Rollup 会分别构建两个版本\r\n    return [regularConfig, minifiedConfig]\r\n  }\r\n\r\n  /**\r\n   * 获取 Terser 压缩插件\r\n   */\r\n  private async getTerserPlugin(): Promise<any> {\r\n    try {\r\n      const { default: terser } = await import('@rollup/plugin-terser')\r\n      return terser({\r\n        compress: {\r\n          drop_console: false,\r\n          drop_debugger: true,\r\n          pure_funcs: ['console.log']\r\n        },\r\n        mangle: {\r\n          reserved: ['exports', 'require', 'module', '__dirname', '__filename']\r\n        },\r\n        format: {\r\n          comments: /^!/\r\n        }\r\n      })\r\n    } catch (error) {\r\n      this.logger.warn('Terser 插件不可用，跳过压缩:', error)\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 生成 UMD 全局变量名\r\n   */\r\n  private generateUMDName(packageName: string): string {\r\n    if (!packageName) return 'MyLibrary'\r\n\r\n    // 移除作用域前缀 (@scope/package -> package)\r\n    const name = packageName.replace(/^@[^/]+\\//, '')\r\n\r\n    // 转换为 PascalCase\r\n    return name\r\n      .split(/[-_]/)\r\n      .map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase())\r\n      .join('')\r\n  }\r\n\r\n  /**\r\n   * 解析 Banner\r\n   */\r\n  private async resolveBanner(bannerConfig: any, config?: any): Promise<string | undefined> {\r\n    // 显式禁用\r\n    if (bannerConfig === false) return undefined\r\n\r\n    const banners: string[] = []\r\n\r\n    // 自定义 Banner\r\n    if (bannerConfig && typeof bannerConfig.banner === 'function') {\r\n      const customBanner = await bannerConfig.banner()\r\n      if (customBanner) banners.push(customBanner)\r\n    } else if (bannerConfig && typeof bannerConfig.banner === 'string' && bannerConfig.banner) {\r\n      banners.push(bannerConfig.banner)\r\n    }\r\n\r\n    // 自动生成版权信息\r\n    if (bannerConfig && (bannerConfig as any).copyright) {\r\n      const copyright = this.generateCopyright((bannerConfig as any).copyright)\r\n      if (copyright) banners.push(copyright)\r\n    }\r\n\r\n    // 自动生成构建信息\r\n    if (bannerConfig && (bannerConfig as any).buildInfo) {\r\n      const buildInfo = await this.generateBuildInfo((bannerConfig as any).buildInfo)\r\n      if (buildInfo) banners.push(buildInfo)\r\n    }\r\n\r\n    if (banners.length > 0) return banners.join('\\n')\r\n\r\n    // 未提供任何 banner 配置时，自动生成默认 banner（从 package.json 推断）\r\n    try {\r\n      const projectInfo = await BannerGenerator.getProjectInfo()\r\n      const auto = BannerGenerator.generate({\r\n        bundler: this.name,\r\n        bundlerVersion: this.version !== 'unknown' ? this.version : undefined,\r\n        ...projectInfo,\r\n        buildMode: (config as any)?.mode || process.env.NODE_ENV || 'production',\r\n        minified: Boolean((config as any)?.minify)\r\n      })\r\n      return auto\r\n    } catch {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析 Footer\r\n   */\r\n  private async resolveFooter(bannerConfig: any): Promise<string | undefined> {\r\n    if (bannerConfig === false) return undefined\r\n    if (bannerConfig && typeof bannerConfig.footer === 'function') {\r\n      return await bannerConfig.footer()\r\n    }\r\n    if (bannerConfig && typeof bannerConfig.footer === 'string') {\r\n      return bannerConfig.footer\r\n    }\r\n    // 默认 Footer（未提供时自动生成）\r\n    try {\r\n      const info = await BannerGenerator.getProjectInfo()\r\n      if (info.projectName) {\r\n        return `/*! End of ${info.projectName} | Powered by @ldesign/builder */`\r\n      }\r\n    } catch { }\r\n    return '/*! Powered by @ldesign/builder */'\r\n  }\r\n\r\n  /**\r\n   * 解析 Intro\r\n   */\r\n  private async resolveIntro(bannerConfig: any): Promise<string | undefined> {\r\n    if (!bannerConfig) return undefined\r\n    if (typeof bannerConfig.intro === 'function') {\r\n      return await bannerConfig.intro()\r\n    }\r\n    if (typeof bannerConfig.intro === 'string') {\r\n      return bannerConfig.intro\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * 解析 Outro\r\n   */\r\n  private async resolveOutro(bannerConfig: any): Promise<string | undefined> {\r\n    if (!bannerConfig) return undefined\r\n    if (typeof bannerConfig.outro === 'function') {\r\n      return await bannerConfig.outro()\r\n    }\r\n    if (typeof bannerConfig.outro === 'string') {\r\n      return bannerConfig.outro\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * 统一的 onwarn 处理：过滤不必要的告警\r\n   */\r\n  private getOnWarn(config?: any) {\r\n    // 如果配置了 logLevel 为 silent，完全抑制所有警告\r\n    if (config?.logLevel === 'silent') {\r\n      return () => {\r\n        // 完全静默，不输出任何警告\r\n      }\r\n    }\r\n\r\n    // 如果用户配置了自定义的 onwarn 处理器，优先使用用户的配置\r\n    if (config?.build?.rollupOptions?.onwarn) {\r\n      return config.build.rollupOptions.onwarn\r\n    }\r\n\r\n    const ignoredCodes = new Set([\r\n      'NAMESPACE_CONFLICT',\r\n      'MIXED_EXPORTS',\r\n      'EMPTY_BUNDLE',           // 忽略空chunk警告\r\n      'FILE_NAME_CONFLICT',     // 忽略文件名冲突警告\r\n      'MISSING_GLOBAL_NAME',    // 忽略外部模块globals警告\r\n      'UNRESOLVED_IMPORT',      // 忽略未解析的导入警告\r\n    ])\r\n\r\n    return (warning: any, defaultHandler: (w: any) => void) => {\r\n      // 过滤常见非致命告警\r\n      if (ignoredCodes.has(warning.code)) return\r\n\r\n      // 过滤 CSS 文件覆盖警告\r\n      if (warning.code === 'FILE_NAME_CONFLICT' && warning.message?.includes('.css.map')) {\r\n        return\r\n      }\r\n\r\n      // 过滤 Vue 组件文件的类型声明警告\r\n      if (warning.code === 'UNRESOLVED_IMPORT' && warning.source?.endsWith('.vue')) {\r\n        return\r\n      }\r\n\r\n      // 过滤 Node.js 内置模块警告\r\n      if (warning.code === 'UNRESOLVED_IMPORT' && warning.source?.startsWith('node:')) {\r\n        return\r\n      }\r\n\r\n      // 过滤 typescript 插件的 TS5096 等诊断噪音\r\n      if (warning.code === 'PLUGIN_WARNING' && warning.plugin === 'typescript') {\r\n        const msg = String(warning.message || '')\r\n        if (msg.includes('TS5096')) return\r\n      }\r\n\r\n      // 其他告警交给默认处理\r\n      defaultHandler(warning)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 生成版权信息\r\n   */\r\n  private generateCopyright(copyrightConfig: any): string {\r\n    const config = typeof copyrightConfig === 'object' ? copyrightConfig : {}\r\n    const year = config.year || new Date().getFullYear()\r\n    const owner = config.owner || 'Unknown'\r\n    const license = config.license || 'MIT'\r\n\r\n    if (config.template) {\r\n      return config.template\r\n        .replace(/\\{year\\}/g, year)\r\n        .replace(/\\{owner\\}/g, owner)\r\n        .replace(/\\{license\\}/g, license)\r\n    }\r\n\r\n    return `/*!\\n * Copyright (c) ${year} ${owner}\\n * Licensed under ${license}\\n */`\r\n  }\r\n\r\n  /**\r\n   * 生成构建信息\r\n   */\r\n  private async generateBuildInfo(buildInfoConfig: any): Promise<string> {\r\n    const config = typeof buildInfoConfig === 'object' ? buildInfoConfig : {}\r\n    const parts: string[] = []\r\n\r\n    if (config.version !== false) {\r\n      try {\r\n        const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf-8'))\r\n        parts.push(`Version: ${packageJson.version}`)\r\n      } catch {\r\n        // 忽略错误\r\n      }\r\n    }\r\n\r\n    if (config.buildTime !== false) {\r\n      parts.push(`Built: ${new Date().toISOString()}`)\r\n    }\r\n\r\n    if (config.environment !== false) {\r\n      parts.push(`Environment: ${process.env.NODE_ENV || 'development'}`)\r\n    }\r\n\r\n    if (config.git !== false) {\r\n      try {\r\n        const commit = execSync('git rev-parse --short HEAD', { encoding: 'utf-8' }).trim()\r\n        parts.push(`Commit: ${commit}`)\r\n      } catch {\r\n        // 忽略错误\r\n      }\r\n    }\r\n\r\n    if (config.template) {\r\n      return config.template\r\n    }\r\n\r\n    return parts.length > 0 ? `/*!\\n * ${parts.join('\\n * ')}\\n */` : ''\r\n  }\r\n\r\n}\r\n"]}