{"version":3,"file":"RolldownAdapter.js","sourceRoot":"","sources":["../../../src/adapters/rolldown/RolldownAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Rolldown 适配器\r\n * \r\n * 提供 Rolldown 打包器的适配实现\r\n * \r\n * @author LDesign Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport type {\r\n  IBundlerAdapter,\r\n  UnifiedConfig,\r\n  AdapterOptions,\r\n  BundlerSpecificConfig,\r\n  BundlerSpecificPlugin\r\n} from '../../types/adapter'\r\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\r\nimport type { PerformanceMetrics } from '../../types/performance'\r\nimport { Logger } from '../../utils/logger'\r\nimport { BuilderError } from '../../utils/error-handler'\r\nimport { ErrorCode } from '../../constants/errors'\r\n\r\n/**\r\n * Rolldown 适配器类\r\n */\r\nexport class RolldownAdapter implements IBundlerAdapter {\r\n  readonly name = 'rolldown' as const\r\n  readonly version: string\r\n  readonly available: boolean\r\n\r\n  private logger: Logger\r\n\r\n  constructor(options: Partial<AdapterOptions> = {}) {\r\n    this.logger = options.logger || new Logger()\r\n\r\n    // 在 ES 模块环境中，我们无法在构造函数中同步加载 rolldown\r\n    // 所以我们假设它是可用的，并在实际使用时进行检查\r\n    try {\r\n      const rolldown = this.loadRolldown()\r\n      this.version = rolldown.VERSION || 'unknown'\r\n      this.available = true\r\n      this.logger.debug(`Rolldown 适配器初始化成功 (v${this.version})`)\r\n    } catch (error) {\r\n      // 同步加载失败，但这在 ES 模块环境中是预期的\r\n      // 我们将在实际使用时尝试异步加载\r\n      this.version = 'unknown'\r\n      this.available = true // 假设可用，在使用时验证\r\n      this.logger.debug('Rolldown 同步加载失败，将在使用时异步加载')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行构建\r\n   */\r\n  async build(config: UnifiedConfig): Promise<BuildResult> {\r\n    if (!this.available) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rolldown 适配器不可用'\r\n      )\r\n    }\r\n\r\n    try {\r\n      // 尝试加载 rolldown，支持异步加载\r\n      const rolldown = await this.ensureRolldownLoaded()\r\n\r\n      this.logger.info('开始 Rolldown 构建...')\r\n      const startTime = Date.now()\r\n\r\n      // 检查是否需要多格式构建\r\n      const outputConfig = config.output\r\n      const formats = Array.isArray(outputConfig?.format) ? outputConfig.format : [outputConfig?.format || 'esm']\r\n\r\n      // Rolldown 目前主要支持 ESM，但我们可以尝试构建多个格式\r\n      const supportedFormats = formats.filter(format => ['esm', 'cjs'].includes(format))\r\n      if (supportedFormats.length === 0) {\r\n        supportedFormats.push('esm') // 默认使用 ESM\r\n      }\r\n\r\n      const allResults: any[] = []\r\n      let totalDuration = 0\r\n\r\n      // 为每个支持的格式执行构建\r\n      for (const format of supportedFormats) {\r\n        this.logger.info(`构建 ${format.toUpperCase()} 格式...`)\r\n\r\n        // 为当前格式创建配置\r\n        const formatConfig = {\r\n          ...config,\r\n          output: {\r\n            ...outputConfig,\r\n            format: format\r\n          }\r\n        }\r\n\r\n        const rolldownConfig = await this.transformConfig(formatConfig)\r\n        const formatStartTime = Date.now()\r\n\r\n        try {\r\n          const result = await rolldown.build(rolldownConfig)\r\n          const formatDuration = Date.now() - formatStartTime\r\n          totalDuration += formatDuration\r\n\r\n          allResults.push({\r\n            format,\r\n            result,\r\n            duration: formatDuration\r\n          })\r\n\r\n          this.logger.info(`${format.toUpperCase()} 格式构建完成 (${formatDuration}ms)`)\r\n        } catch (error) {\r\n          this.logger.warn(`${format.toUpperCase()} 格式构建失败: ${(error as Error).message}`)\r\n          // 继续构建其他格式\r\n        }\r\n      }\r\n\r\n      const duration = Date.now() - startTime\r\n\r\n      // 合并所有构建结果\r\n      const combinedOutputs = allResults.flatMap(r => r.result.outputs || [])\r\n      const combinedWarnings = allResults.flatMap(r => r.result.warnings || [])\r\n\r\n      // 构建结果\r\n      const totalRawSize = combinedOutputs.reduce((sum, output) => sum + (output.size || 0), 0)\r\n      const largestOutput = combinedOutputs.reduce((max, o) => (o.size || 0) > (max.size || 0) ? o : max, { size: 0, fileName: '' } as any)\r\n\r\n      const buildResult: BuildResult = {\r\n        success: allResults.length > 0,\r\n        outputs: combinedOutputs,\r\n        duration,\r\n        stats: {\r\n          buildTime: duration,\r\n          fileCount: combinedOutputs.length,\r\n          totalSize: {\r\n            raw: totalRawSize,\r\n            gzip: 0,\r\n            brotli: 0,\r\n            byType: {},\r\n            byFormat: {} as any,\r\n            largest: {\r\n              file: largestOutput.fileName || '',\r\n              size: largestOutput.size || 0\r\n            },\r\n            fileCount: combinedOutputs.length\r\n          },\r\n          byFormat: {} as any,\r\n          modules: {\r\n            total: 0,\r\n            external: 0,\r\n            internal: 0,\r\n            largest: {\r\n              id: '',\r\n              size: 0,\r\n              renderedLength: 0,\r\n              originalLength: 0,\r\n              isEntry: false,\r\n              isExternal: false,\r\n              importedIds: [],\r\n              dynamicallyImportedIds: [],\r\n              importers: [],\r\n              dynamicImporters: []\r\n            }\r\n          },\r\n          dependencies: {\r\n            total: 0,\r\n            external: [],\r\n            bundled: [],\r\n            circular: []\r\n          }\r\n        },\r\n        performance: this.getPerformanceMetrics(),\r\n        warnings: combinedWarnings,\r\n        errors: [],\r\n        buildId: `rolldown-${Date.now()}`,\r\n        timestamp: Date.now(),\r\n        bundler: 'rolldown',\r\n        mode: 'production'\r\n      }\r\n\r\n      this.logger.success(`Rolldown 构建完成 (${duration}ms)，成功构建 ${allResults.length}/${supportedFormats.length} 个格式`)\r\n      return buildResult\r\n\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.BUILD_FAILED,\r\n        `Rolldown 构建失败: ${(error as Error).message}`,\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 启动监听模式\r\n   */\r\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\r\n    if (!this.available) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rolldown 适配器不可用'\r\n      )\r\n    }\r\n\r\n    try {\r\n      const rolldown = await this.ensureRolldownLoaded()\r\n      const rolldownConfig = await this.transformConfig(config)\r\n\r\n      // 启动监听\r\n      const watcher = await rolldown.watch(rolldownConfig)\r\n\r\n      // 创建统一的监听器接口\r\n      const watchOptions = config.watch || {}\r\n      const buildWatcher = {\r\n        patterns: (typeof watchOptions === 'object' && (watchOptions as any).include) || ['src/**/*'],\r\n        watching: true,\r\n\r\n        async close() {\r\n          if (watcher && typeof watcher.close === 'function') {\r\n            await watcher.close()\r\n          }\r\n        },\r\n\r\n        on(event: string, listener: (...args: any[]) => void) {\r\n          if (watcher && typeof watcher.on === 'function') {\r\n            watcher.on(event, listener)\r\n          }\r\n          return this\r\n        },\r\n\r\n        off(event: string, listener: (...args: any[]) => void) {\r\n          if (watcher && typeof watcher.off === 'function') {\r\n            watcher.off(event, listener)\r\n          }\r\n          return this\r\n        },\r\n\r\n        emit(event: string, ...args: any[]) {\r\n          if (watcher && typeof watcher.emit === 'function') {\r\n            return watcher.emit(event, ...args)\r\n          }\r\n          return false\r\n        }\r\n      } as BuildWatcher\r\n\r\n      this.logger.info('Rolldown 监听模式已启动')\r\n      return buildWatcher\r\n\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.BUILD_FAILED,\r\n        `启动 Rolldown 监听模式失败: ${(error as Error).message}`,\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 转换配置\r\n   */\r\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\r\n    // 转换为 Rolldown 配置格式\r\n    const rolldownConfig: any = {\r\n      input: config.input,\r\n      external: config.external,\r\n      plugins: [] // 暂时禁用所有插件来测试基本功能\r\n    }\r\n\r\n    // 转换输出配置 - 实现标准目录结构\r\n    if (config.output) {\r\n      const outputConfig = config.output\r\n      const formats = Array.isArray(outputConfig.format) ? outputConfig.format : [outputConfig.format]\r\n      const format = formats[0] || 'esm' // Rolldown 目前主要支持 ESM\r\n\r\n      // 根据格式确定输出目录，遵循标准目录结构\r\n      const isESM = format === 'esm'\r\n      const isCJS = format === 'cjs'\r\n      const isUMD = format === 'umd'\r\n\r\n      let dir: string\r\n      let fileName: string\r\n\r\n      if (isESM) {\r\n        dir = 'es'\r\n        fileName = '[name].js'\r\n      } else if (isCJS) {\r\n        dir = 'cjs'\r\n        fileName = '[name].cjs'\r\n      } else if (isUMD) {\r\n        dir = 'dist'\r\n        fileName = '[name].umd.js'\r\n      } else {\r\n        dir = 'dist'\r\n        fileName = '[name].js'\r\n      }\r\n\r\n      rolldownConfig.output = {\r\n        dir: outputConfig.dir || dir,\r\n        file: outputConfig.file,\r\n        format: format as any,\r\n        name: outputConfig.name,\r\n        sourcemap: outputConfig.sourcemap,\r\n        globals: outputConfig.globals,\r\n        entryFileNames: fileName,\r\n        chunkFileNames: fileName\r\n      }\r\n\r\n      this.logger.info(`Rolldown 输出配置: 格式=${format}, 目录=${dir}, 文件名=${fileName}`)\r\n    }\r\n\r\n    // Rolldown 特有配置\r\n    if (config.platform) {\r\n      rolldownConfig.platform = config.platform\r\n    }\r\n\r\n    // 转换其他选项\r\n    if (config.treeshake !== undefined) {\r\n      rolldownConfig.treeshake = config.treeshake\r\n    }\r\n\r\n    return rolldownConfig\r\n  }\r\n\r\n  /**\r\n   * 转换插件\r\n   */\r\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\r\n    const transformedPlugins: BundlerSpecificPlugin[] = []\r\n\r\n    for (const plugin of plugins) {\r\n      try {\r\n        // 如果插件有 plugin 函数，调用它来获取实际插件\r\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\r\n          const actualPlugin = await plugin.plugin()\r\n          transformedPlugins.push(actualPlugin)\r\n        }\r\n        // 如果插件有 rolldown 特定配置，使用它\r\n        else if (plugin.rolldown) {\r\n          transformedPlugins.push({ ...plugin, ...plugin.rolldown })\r\n        }\r\n        // 如果插件有 setup 方法，保持原样\r\n        else if (plugin.setup) {\r\n          transformedPlugins.push(plugin)\r\n        }\r\n        // 尝试转换 Rollup 插件为 Rolldown 格式\r\n        else {\r\n          transformedPlugins.push(this.convertRollupPlugin(plugin))\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\r\n      }\r\n    }\r\n\r\n    return transformedPlugins\r\n  }\r\n\r\n  /**\r\n   * 检查功能支持\r\n   */\r\n  supportsFeature(feature: any): boolean {\r\n    // Rolldown 支持的功能\r\n    const supportedFeatures = [\r\n      'treeshaking',\r\n      'code-splitting',\r\n      'dynamic-import',\r\n      'sourcemap',\r\n      'minification',\r\n      'plugin-system',\r\n      'config-file',\r\n      'cache-support',\r\n      'parallel-build',\r\n      'incremental-build'\r\n    ]\r\n\r\n    return supportedFeatures.includes(feature)\r\n  }\r\n\r\n  /**\r\n   * 获取功能支持映射\r\n   */\r\n  getFeatureSupport(): any {\r\n    return {\r\n      treeshaking: true,\r\n      'code-splitting': true,\r\n      'dynamic-import': true,\r\n      'worker-support': true,\r\n      'css-bundling': true,\r\n      'asset-processing': true,\r\n      sourcemap: true,\r\n      minification: true,\r\n      'hot-reload': false,\r\n      'module-federation': false,\r\n      'incremental-build': true,\r\n      'parallel-build': true,\r\n      'cache-support': true,\r\n      'plugin-system': true,\r\n      'config-file': true\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取性能指标\r\n   */\r\n  getPerformanceMetrics(): PerformanceMetrics {\r\n    // 返回默认指标，因为 PerformanceMonitor 没有直接的 getMetrics 方法\r\n    // 性能指标应该通过 endBuild 方法获取\r\n    return {\r\n      buildTime: 0,\r\n      memoryUsage: {\r\n        heapUsed: process.memoryUsage().heapUsed,\r\n        heapTotal: process.memoryUsage().heapTotal,\r\n        external: process.memoryUsage().external,\r\n        rss: process.memoryUsage().rss,\r\n        peak: 0,\r\n        trend: []\r\n      },\r\n      cacheStats: {\r\n        hits: 0,\r\n        misses: 0,\r\n        hitRate: 0,\r\n        size: 0,\r\n        entries: 0,\r\n        timeSaved: 0\r\n      },\r\n      fileStats: {\r\n        totalFiles: 0,\r\n        filesByType: {},\r\n        averageProcessingTime: 0,\r\n        slowestFiles: [],\r\n        processingRate: 0\r\n      },\r\n      pluginPerformance: [],\r\n      systemResources: {\r\n        cpuUsage: 0,\r\n        availableMemory: 0,\r\n        diskUsage: {\r\n          total: 0,\r\n          used: 0,\r\n          available: 0,\r\n          usagePercent: 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理资源\r\n   */\r\n  async dispose(): Promise<void> {\r\n    // Rolldown 适配器没有需要清理的资源\r\n  }\r\n\r\n  /**\r\n   * 确保 Rolldown 已加载（支持异步）\r\n   */\r\n  private async ensureRolldownLoaded(): Promise<any> {\r\n    try {\r\n      // 首先尝试同步加载\r\n      return this.loadRolldown()\r\n    } catch (error) {\r\n      // 同步加载失败，尝试异步加载\r\n      try {\r\n        this.logger.debug('尝试异步加载 rolldown...')\r\n        const rolldown = await import('rolldown')\r\n        if (rolldown && (rolldown.VERSION || typeof rolldown.build === 'function')) {\r\n          this.logger.debug(`Rolldown 异步加载成功: ${rolldown.VERSION || 'unknown'}`)\r\n          return rolldown\r\n        }\r\n        throw new Error('Rolldown 模块无效')\r\n      } catch (asyncError) {\r\n        throw new BuilderError(\r\n          ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n          'Rolldown 未安装或无法加载，请运行: npm install rolldown --save-dev',\r\n          { cause: asyncError as Error }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载 Rolldown（同步方式）\r\n   */\r\n  private loadRolldown(): any {\r\n    try {\r\n      // 方式1: 在 CommonJS 环境中直接使用 require\r\n      if (typeof require !== 'undefined') {\r\n        return require('rolldown')\r\n      }\r\n\r\n      // 方式2: 在 ES 模块环境中，尝试使用 createRequire\r\n      // 由于这是一个同步方法，我们不能使用 async import\r\n      // 但我们可以尝试访问全局的 require 函数\r\n\r\n      // 检查是否在 Node.js 环境中\r\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\r\n        // 尝试通过 globalThis 访问 require\r\n        const globalRequire = (globalThis as any).require\r\n        if (globalRequire) {\r\n          return globalRequire('rolldown')\r\n        }\r\n\r\n        // 尝试通过 global 访问 require\r\n        const nodeGlobal = (global as any)\r\n        if (nodeGlobal && nodeGlobal.require) {\r\n          return nodeGlobal.require('rolldown')\r\n        }\r\n      }\r\n\r\n      throw new Error('无法在当前环境中加载 rolldown 模块')\r\n    } catch (error) {\r\n      throw new Error('Rolldown 未安装，请运行: npm install rolldown --save-dev')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 转换 Rollup 插件为 Rolldown 格式\r\n   */\r\n  private convertRollupPlugin(plugin: any): any {\r\n    // 如果插件已经是 Rolldown 格式，直接返回\r\n    if (plugin.setup) {\r\n      return plugin\r\n    }\r\n\r\n    // 尝试转换 Rollup 插件\r\n    return {\r\n      name: plugin.name || 'unknown',\r\n      setup(build: any) {\r\n        // 转换 Rollup 钩子为 Rolldown 钩子\r\n        if (plugin.resolveId) {\r\n          build.onResolve({ filter: /.*/ }, plugin.resolveId)\r\n        }\r\n\r\n        if (plugin.load) {\r\n          build.onLoad({ filter: /.*/ }, plugin.load)\r\n        }\r\n\r\n        if (plugin.transform) {\r\n          build.onTransform({ filter: /.*/ }, plugin.transform)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}