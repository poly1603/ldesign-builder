{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/cli/commands/build.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 构建命令实现\r\n */\r\n\r\nimport { Command } from 'commander'\r\nimport chalk from 'chalk'\r\nimport { LibraryBuilder } from '../../core/LibraryBuilder'\r\nimport { logger } from '../../utils/logger'\r\nimport { formatFileSize, formatDuration } from '../../utils/format-utils'\r\nimport { ConfigLoader } from '../../utils/config/config-loader'\r\nimport type { BuilderConfig } from '../../types/config'\r\nimport path from 'path'\r\nimport { writeFile } from '../../utils/file-system'\r\n\r\n/**\r\n * 构建命令选项\r\n */\r\ninterface BuildOptions {\r\n  config?: string\r\n  bundler?: 'rollup' | 'rolldown'\r\n  mode?: 'development' | 'production'\r\n  input?: string\r\n  output?: string\r\n  format?: string\r\n  minify?: boolean\r\n  sourcemap?: boolean\r\n  clean?: boolean\r\n  analyze?: boolean\r\n  watch?: boolean\r\n  report?: string | boolean\r\n  sizeLimit?: string\r\n}\r\n\r\n/**\r\n * 创建构建命令\r\n */\r\nexport const buildCommand = new Command('build')\r\n  .description('构建库文件')\r\n  .option('-i, --input <path>', '指定入口文件')\r\n  .option('-o, --output <dir>', '指定输出目录')\r\n  .option('-f, --format <formats>', '指定输出格式 (esm,cjs,umd,iife)')\r\n  .option('--minify', '启用代码压缩')\r\n  .option('--no-minify', '禁用代码压缩')\r\n  .option('--sourcemap', '生成 sourcemap')\r\n  .option('--no-sourcemap', '不生成 sourcemap')\r\n  .option('--clean', '构建前清理输出目录')\r\n  .option('--no-clean', '构建前不清理输出目录')\r\n  .option('--analyze', '分析打包结果')\r\n  .option('--report [file]', '输出构建报告 JSON 文件（默认 dist/build-report.json）')\r\n  .option('--size-limit <limit>', '设置总包体或单产物大小上限，如 200k、1mb、或字节数')\r\n  .option('-w, --watch', '监听文件变化')\r\n  .action(async (options: BuildOptions, command: Command) => {\r\n    try {\r\n      await executeBuild(options, command.parent?.opts())\r\n    } catch (error) {\r\n      logger.error('构建失败:', error)\r\n      process.exit(1)\r\n    }\r\n  })\r\n\r\n/**\r\n * 执行构建\r\n */\r\nasync function executeBuild(options: BuildOptions, globalOptions: any = {}): Promise<void> {\r\n  const startTime = Date.now()\r\n\r\n  // 显示构建开始信息\r\n  logger.start('开始构建...')\r\n\r\n  try {\r\n    // 创建构建器实例\r\n    const builder = new LibraryBuilder({\r\n      logger,\r\n      autoDetect: true\r\n    })\r\n\r\n    // 初始化构建器\r\n    await builder.initialize()\r\n\r\n    // 构建配置\r\n    const config = await buildConfig(options, globalOptions)\r\n\r\n    // 显示配置信息\r\n    showBuildInfo(config)\r\n\r\n    // 执行构建\r\n    let result\r\n    if (options.watch) {\r\n      logger.info('启动监听模式...')\r\n      const watcher = await builder.buildWatch(config)\r\n\r\n      // 监听构建事件\r\n      watcher.on('change', (file) => {\r\n        logger.info(`文件变化: ${file}`)\r\n      })\r\n\r\n      watcher.on('build', (result) => {\r\n        showBuildResult(result, startTime)\r\n      })\r\n\r\n      // 保持进程运行\r\n      process.on('SIGINT', async () => {\r\n        logger.info('正在停止监听...')\r\n        await watcher.close()\r\n        await builder.dispose()\r\n        process.exit(0)\r\n      })\r\n\r\n      logger.success('监听模式已启动，按 Ctrl+C 停止')\r\n      return\r\n    } else {\r\n      result = await builder.build(config)\r\n    }\r\n\r\n    // 显示构建结果\r\n    showBuildResult(result, startTime)\r\n\r\n    // 分析打包结果\r\n    if (options.analyze) {\r\n      await analyzeBuildResult(result)\r\n    }\r\n\r\n    // 输出构建报告（JSON）\r\n    if (options.report) {\r\n      const reportPath = typeof options.report === 'string' && options.report.trim()\r\n        ? options.report\r\n        : path.join((config.output?.dir || 'dist'), 'build-report.json')\r\n      await writeBuildReport(result, reportPath)\r\n      logger.info(`报告已输出: ${chalk.cyan(reportPath)}`)\r\n    }\r\n\r\n    // 体积阈值检查（使用 gzip 优先，回退原始大小）\r\n    if (options.sizeLimit) {\r\n      enforceSizeLimit(result, options.sizeLimit)\r\n    }\r\n\r\n    // 清理资源\r\n    await builder.dispose()\r\n\r\n    logger.complete('构建完成')\r\n\r\n  } catch (error) {\r\n    const duration = Date.now() - startTime\r\n    logger.fail(`构建失败 (${formatDuration(duration)})`)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * 构建配置\r\n */\r\nasync function buildConfig(options: BuildOptions, globalOptions: any): Promise<BuilderConfig> {\r\n  // 使用ConfigManager加载配置（包含默认配置合并）\r\n  const { ConfigManager } = await import('../..')\r\n  const configManager = new ConfigManager()\r\n  let baseConfig: BuilderConfig = await configManager.loadConfig({})\r\n\r\n  try {\r\n    const configPath = options.config\r\n    if (configPath) {\r\n      logger.info(`加载配置文件: ${configPath}`)\r\n      baseConfig = await configManager.loadConfig({ configFile: configPath })\r\n    } else {\r\n      // 查找配置文件\r\n      const configLoader = new ConfigLoader()\r\n      const foundConfigPath = await configLoader.findConfigFile()\r\n      if (foundConfigPath) {\r\n        logger.info(`加载配置文件: ${foundConfigPath}`)\r\n        baseConfig = await configManager.loadConfig({ configFile: foundConfigPath })\r\n      } else {\r\n        logger.info('未找到配置文件，使用默认配置')\r\n        baseConfig = await configManager.loadConfig({})\r\n      }\r\n    }\r\n  } catch (error) {\r\n    logger.warn('配置文件加载失败，使用默认配置:', (error as Error).message)\r\n    baseConfig = await configManager.loadConfig({})\r\n  }\r\n\r\n  // 命令行选项覆盖配置文件\r\n  const config: BuilderConfig = { ...baseConfig }\r\n\r\n  // 基础配置\r\n  if (options.input) {\r\n    config.input = options.input\r\n  }\r\n\r\n  if (options.output) {\r\n    config.output = { ...config.output, dir: options.output }\r\n  }\r\n\r\n  if (options.format) {\r\n    const formats = options.format.split(',').map(f => f.trim())\r\n    config.output = { ...config.output, format: formats as any }\r\n  }\r\n\r\n  // 构建选项\r\n  if (options.minify !== undefined) {\r\n    config.minify = options.minify\r\n  }\r\n\r\n  if (options.clean !== undefined) {\r\n    config.clean = options.clean\r\n  }\r\n\r\n  // 输出选项\r\n  if (options.sourcemap !== undefined) {\r\n    config.output = { ...config.output, sourcemap: options.sourcemap }\r\n  }\r\n\r\n  // 全局选项\r\n  if (globalOptions.bundler) {\r\n    config.bundler = globalOptions.bundler\r\n  }\r\n\r\n  if (globalOptions.mode) {\r\n    config.mode = globalOptions.mode\r\n  }\r\n\r\n  return config\r\n}\r\n\r\n/**\r\n * 显示构建信息\r\n */\r\nfunction showBuildInfo(config: BuilderConfig): void {\r\n  logger.info('构建配置:')\r\n\r\n  if (config.input) {\r\n    logger.info(`  入口: ${chalk.cyan(config.input)}`)\r\n  }\r\n\r\n  if (config.output?.dir) {\r\n    logger.info(`  输出: ${chalk.cyan(config.output.dir)}`)\r\n  }\r\n\r\n  if (config.output?.format) {\r\n    const formats = Array.isArray(config.output.format)\r\n      ? config.output.format.join(', ')\r\n      : config.output.format\r\n    logger.info(`  格式: ${chalk.cyan(formats)}`)\r\n  }\r\n\r\n  if (config.bundler) {\r\n    logger.info(`  打包器: ${chalk.cyan(config.bundler)}`)\r\n  }\r\n\r\n  if (config.mode) {\r\n    logger.info(`  模式: ${chalk.cyan(config.mode)}`)\r\n  }\r\n\r\n  logger.newLine()\r\n}\r\n\r\n/**\r\n * 显示构建结果\r\n */\r\nfunction showBuildResult(result: any, startTime: number): void {\r\n  const duration = Date.now() - startTime\r\n\r\n  logger.success(`构建成功 (${formatDuration(duration)})`)\r\n\r\n  if (result.outputs && result.outputs.length > 0) {\r\n    logger.info('输出文件:')\r\n\r\n    for (const output of result.outputs) {\r\n      const size = formatFileSize(output.size)\r\n      const gzipSize = output.gzipSize ? ` (gzip: ${formatFileSize(output.gzipSize)})` : ''\r\n      logger.info(`  ${chalk.cyan(output.fileName)} ${chalk.gray(size)}${chalk.gray(gzipSize)}`)\r\n    }\r\n  }\r\n  // 缓存摘要\r\n  if (result.cache) {\r\n    const parts: string[] = []\r\n    const enabledStr = result.cache.enabled ? '启用' : '禁用'\r\n    parts.push(`状态 ${enabledStr}`)\r\n    if (result.cache.enabled && typeof result.cache.hit === 'boolean') {\r\n      parts.push(result.cache.hit ? '命中' : '未命中')\r\n    }\r\n    if (typeof result.cache.lookupMs === 'number') {\r\n      parts.push(`查询 ${formatDuration(result.cache.lookupMs)}`)\r\n    }\r\n    if (result.cache.hit && typeof result.cache.savedMs === 'number' && result.cache.savedMs > 0) {\r\n      parts.push(`节省 ${formatDuration(result.cache.savedMs)}`)\r\n    }\r\n    logger.info(`缓存: ${parts.join('， ')}`)\r\n  }\r\n\r\n\r\n  if (result.warnings && result.warnings.length > 0) {\r\n    logger.newLine()\r\n    logger.warn(`发现 ${result.warnings.length} 个警告:`)\r\n    for (const warning of result.warnings) {\r\n      logger.warn(`  ${warning.message}`)\r\n    }\r\n  }\r\n\r\n  logger.newLine()\r\n}\r\n\r\n/**\r\n * 写出构建报告 JSON\r\n */\r\nasync function writeBuildReport(result: any, reportPath: string): Promise<void> {\r\n  const files = (result.outputs || []).map((o: any) => ({\r\n    fileName: o.fileName,\r\n    type: o.type,\r\n    format: o.format,\r\n    size: o.size,\r\n    gzipSize: o.gzipSize ?? null\r\n  }))\r\n\r\n  const totalRaw = files.reduce((s: number, f: any) => s + (f.size || 0), 0)\r\n  const totalGzip = files.reduce((s: number, f: any) => s + (f.gzipSize || 0), 0)\r\n\r\n  const report = {\r\n    meta: {\r\n      bundler: result.bundler,\r\n      mode: result.mode,\r\n      libraryType: result.libraryType || null,\r\n      buildId: result.buildId,\r\n      timestamp: result.timestamp,\r\n      duration: result.duration,\r\n      cache: result.cache || undefined\r\n    },\r\n    totals: {\r\n      raw: totalRaw,\r\n      gzip: totalGzip,\r\n      fileCount: files.length\r\n    },\r\n    files\r\n  }\r\n\r\n  const abs = path.isAbsolute(reportPath) ? reportPath : path.resolve(process.cwd(), reportPath)\r\n  await writeFile(abs, JSON.stringify(report, null, 2), 'utf8')\r\n}\r\n\r\n/**\r\n * 体积阈值检查（优先使用 gzip）\r\n * 超限则抛出错误\r\n */\r\nfunction enforceSizeLimit(result: any, limitStr: string): void {\r\n  const limit = parseSizeLimit(limitStr)\r\n  if (!isFinite(limit) || limit <= 0) return\r\n\r\n  const outputs = result.outputs || []\r\n  const totalGzip = outputs.reduce((s: number, o: any) => s + (o.gzipSize || 0), 0)\r\n  const totalRaw = outputs.reduce((s: number, o: any) => s + (o.size || 0), 0)\r\n  const metric = totalGzip > 0 ? totalGzip : totalRaw\r\n  const using = totalGzip > 0 ? 'gzip' : 'raw'\r\n\r\n  if (metric > limit) {\r\n    // 显示前若干个最大文件帮助定位\r\n    const top = [...outputs]\r\n      .sort((a: any, b: any) => (b.gzipSize || b.size || 0) - (a.gzipSize || a.size || 0))\r\n      .slice(0, 5)\r\n      .map((o: any) => `- ${o.fileName} ${formatFileSize(o.gzipSize || o.size)}${o.format ? ` (${o.format})` : ''}`)\r\n      .join('\\n')\r\n\r\n    throw new Error(\r\n      `构建包体超出限制: ${formatFileSize(metric)} > ${formatFileSize(limit)} （度量: ${using}）\\nTop 较大文件:\\n${top}`\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * 解析尺寸字符串：支持 200k / 1mb / 12345（字节）\r\n */\r\nfunction parseSizeLimit(input: string): number {\r\n  const s = String(input || '').trim().toLowerCase()\r\n  const m = s.match(/^(\\d+(?:\\.\\d+)?)(b|kb|k|mb|m|gb|g)?$/i)\r\n  if (!m) return Number(s) || 0\r\n  const n = parseFloat(m[1])\r\n  const unit = (m[2] || 'b').toLowerCase()\r\n  const factor = unit === 'gb' || unit === 'g' ? 1024 ** 3\r\n    : unit === 'mb' || unit === 'm' ? 1024 ** 2\r\n    : unit === 'kb' || unit === 'k' ? 1024\r\n    : 1\r\n  return Math.round(n * factor)\r\n}\r\n\r\nasync function analyzeBuildResult(result: any): Promise<void> {\r\n  logger.info('正在分析打包结果...')\r\n\r\n  const outputs = Array.isArray(result.outputs) ? result.outputs : []\r\n\r\n  // 汇总体积信息（优先 gzip）\r\n  let totalRaw = 0\r\n  let totalGzip = 0\r\n  const withSizes: Array<any & { _raw: number; _gzip: number }> = []\r\n\r\n  // 仅处理字符串源码，避免 Buffer 类型兼容问题\r\n  type GzipFn = (s: string) => Promise<number>\r\n  let gzipSizeFn: GzipFn | null = null\r\n  const needComputeGzip = outputs.some((o: any) => typeof o.gzipSize !== 'number' && typeof o.source === 'string')\r\n  if (needComputeGzip) {\r\n    try {\r\n      const { gzipSize } = await import('gzip-size')\r\n      gzipSizeFn = async (s: string) => gzipSize(s)\r\n    } catch {\r\n      // 忽略 gzip 计算失败，使用 raw 体积\r\n      gzipSizeFn = null\r\n    }\r\n  }\r\n\r\n  for (const o of outputs) {\r\n    const raw = typeof o.size === 'number' ? o.size : (typeof o.source === 'string' ? o.source.length : 0)\r\n    const gzip = typeof o.gzipSize === 'number'\r\n      ? o.gzipSize\r\n      : (gzipSizeFn && typeof o.source === 'string' ? await gzipSizeFn(o.source) : 0)\r\n\r\n    withSizes.push({ ...o, _raw: raw, _gzip: gzip })\r\n    totalRaw += raw\r\n    totalGzip += gzip\r\n  }\r\n\r\n  logger.info(`产物统计: 文件 ${outputs.length} 个，原始总计 ${formatFileSize(totalRaw)}${totalGzip > 0 ? `，gzip 总计 ${formatFileSize(totalGzip)}` : ''}`)\r\n\r\n  // 按格式统计\r\n  const byFormat = new Map<string, { count: number; raw: number; gzip: number }>()\r\n  for (const o of withSizes) {\r\n    const fmt = String(o.format || 'unknown')\r\n    const agg = byFormat.get(fmt) || { count: 0, raw: 0, gzip: 0 }\r\n    agg.count += 1\r\n    agg.raw += o._raw\r\n    agg.gzip += o._gzip\r\n    byFormat.set(fmt, agg)\r\n  }\r\n  for (const [fmt, agg] of byFormat.entries()) {\r\n    logger.info(`  格式 ${chalk.cyan(fmt)}: ${agg.count} 个，原始 ${formatFileSize(agg.raw)}${agg.gzip > 0 ? `，gzip ${formatFileSize(agg.gzip)}` : ''}`)\r\n  }\r\n\r\n  // Top 体积文件（按 gzip 优先）\r\n  const top = [...withSizes]\r\n    .sort((a, b) => (b._gzip || b._raw) - (a._gzip || a._raw))\r\n    .slice(0, 5)\r\n\r\n  if (top.length > 0) {\r\n    logger.newLine()\r\n    logger.info('Top 体积文件:')\r\n    for (const o of top) {\r\n      const sizeStr = o._gzip > 0\r\n        ? `${formatFileSize(o._gzip)} (gzip) / ${formatFileSize(o._raw)} (raw)`\r\n        : `${formatFileSize(o._raw)} (raw)`\r\n      logger.info(`  ${chalk.cyan(o.fileName || '(unknown)')} ${chalk.gray(sizeStr)}${o.format ? chalk.gray(` [${o.format}]`) : ''}`)\r\n    }\r\n  }\r\n\r\n  logger.info('分析完成')\r\n}\r\n"]}