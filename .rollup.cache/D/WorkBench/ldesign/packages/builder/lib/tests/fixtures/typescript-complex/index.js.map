{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/tests/fixtures/typescript-complex/index.ts"],"names":[],"mappings":"AAMA,MAAM,OAAO,WAAW;IAAxB;QACU,UAAK,GAAW,EAAE,CAAA;IAa5B,CAAC;IAXC,OAAO,CAAC,IAAU;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACvB,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAA;IAChD,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;IACxB,CAAC;CACF;AAED,MAAM,UAAU,UAAU,CAAC,IAAY,EAAE,KAAc;IACrD,OAAO;QACL,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;QACpC,IAAI;QACJ,KAAK,EAAE,KAAK,IAAI,SAAS;KAC1B,CAAA;AACH,CAAC;AAED,eAAe,WAAW,CAAA","sourcesContent":["export interface User {\n  id: number\n  name: string\n  email?: string\n}\n\nexport class UserManager {\n  private users: User[] = []\n\n  addUser(user: User): void {\n    this.users.push(user)\n  }\n\n  getUser(id: number): User | undefined {\n    return this.users.find(user => user.id === id)\n  }\n\n  getAllUsers(): User[] {\n    return [...this.users]\n  }\n}\n\nexport function createUser(name: string, email?: string): User {\n  return {\n    id: Math.floor(Math.random() * 1000),\n    name,\n    email: email || undefined\n  }\n}\n\nexport default UserManager\n"]}