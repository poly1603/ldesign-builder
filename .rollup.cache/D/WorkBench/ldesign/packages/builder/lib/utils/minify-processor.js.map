{"version":3,"file":"minify-processor.js","sourceRoot":"","sources":["../../src/utils/minify-processor.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAGH,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AAEjC,MAAM,OAAO,eAAe;IAG1B,YAAY,MAAe;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,MAAM,EAAE,CAAA;IACtC,CAAC;IAED;;OAEG;IACH,wBAAwB,CAAC,OAAgC;QACvD,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA;QAChD,MAAM,OAAO,GAAU,EAAE,CAAA;QAEzB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YACf,OAAO,OAAO,CAAA;QAChB,CAAC;QAED,IAAI,CAAC;YACH,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,QAAQ,IAAI,MAAM,CAAC,EAAE,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;gBACtE,gBAAgB;gBAChB,MAAM,OAAO,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAA;gBAChD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;oBAC3B,MAAM,EAAE,IAAI;oBACZ,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,MAAM,IAAI,QAAQ;oBACpC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,WAAW;oBAChC,aAAa,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM;iBAChD,CAAC,CAAC,CAAA;YACL,CAAC;iBAAM,CAAC;gBACN,eAAe;gBACf,MAAM,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAA;gBAC/C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAG,KAAe,CAAC,OAAO,CAAC,CAAA;QAC/D,CAAC;QAED,OAAO,OAAO,CAAA;IAChB,CAAC;IAED;;OAEG;IACH,0BAA0B,CAAC,OAAgC;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA;QAEhD,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YACf,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;QAC1B,CAAC;QAED,kBAAkB;QAClB,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,8BAA8B;SAC/B,CAAA;IACH,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,OAAgC;QAC1D,IAAI,OAAO,OAAO,KAAK,SAAS,EAAE,CAAC;YACjC,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,CAAA;QAC9E,CAAC;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,SAAoC;QAC9D,IAAI,OAAO,SAAS,KAAK,SAAS,EAAE,CAAC;YACnC,OAAO,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAA;QACnC,CAAC;QAED,MAAM,aAAa,GAAQ,EAAE,CAAA;QAE7B,OAAO;QACP,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YACnC,IAAI,OAAO,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;gBAC1C,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAA;YACzC,CAAC;iBAAM,CAAC;gBACN,aAAa,CAAC,MAAM,GAAG;oBACrB,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE;oBACzC,UAAU,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU,IAAI,KAAK;iBACjD,CAAA;YACH,CAAC;QACH,CAAC;QAED,OAAO;QACP,IAAI,SAAS,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;YACrC,IAAI,OAAO,SAAS,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;gBAC5C,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAA;YAC7C,CAAC;iBAAM,CAAC;gBACN,aAAa,CAAC,QAAQ,GAAG;oBACvB,YAAY,EAAE,SAAS,CAAC,QAAQ,CAAC,YAAY;oBAC7C,aAAa,EAAE,SAAS,CAAC,QAAQ,CAAC,aAAa;oBAC/C,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,SAAS;oBACvC,MAAM,EAAE,SAAS,CAAC,QAAQ,CAAC,MAAM;iBAClC,CAAA;YACH,CAAC;QACH,CAAC;QAED,SAAS;QACT,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;YACrB,aAAa,CAAC,MAAM,GAAG;gBACrB,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ;gBACnC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ;gBACnC,WAAW,EAAE,SAAS,CAAC,MAAM,CAAC,WAAW;aAC1C,CAAA;QACH,CAAC;QAED,WAAW;QACX,IAAI,SAAS,CAAC,WAAW,KAAK,SAAS,EAAE,CAAC;YACxC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAA;QACnD,CAAC;QACD,IAAI,SAAS,CAAC,eAAe,KAAK,SAAS,EAAE,CAAC;YAC5C,aAAa,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,CAAA;QAC3D,CAAC;QAED,OAAO,aAAa,CAAA;IACtB,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,OAAmC;QACvD,IAAI,CAAC,OAAO;YAAE,OAAO,IAAI,CAAA;QAEzB,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAA;YAChD,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;YAElC,MAAM,UAAU,GAAG,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAA;YAC7D,MAAM,cAAc,GAAQ,EAAE,CAAA;YAE9B,IAAI,UAAU,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;gBAC1C,cAAc,CAAC,aAAa,GAAG,UAAU,CAAC,YAAY,CAAA;YACxD,CAAC;YACD,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE,CAAC;gBACxC,cAAc,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAA;YACnD,CAAC;YACD,IAAI,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;gBACtC,cAAc,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAA;YAC/C,CAAC;YACD,IAAI,UAAU,CAAC,eAAe,KAAK,SAAS,EAAE,CAAC;gBAC7C,cAAc,CAAC,eAAe,GAAG,UAAU,CAAC,eAAe,CAAA;YAC7D,CAAC;YACD,IAAI,UAAU,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;gBAC1C,cAAc,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAA;YACvD,CAAC;YAED,OAAO,OAAO,CAAC;gBACb,OAAO,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAClC,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAA;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAG,KAAe,CAAC,OAAO,CAAC,CAAA;YAC3D,OAAO,IAAI,CAAA;QACb,CAAC;IACH,CAAC;IAED;;OAEG;IACH,mBAAmB,CAAC,YAAoB,EAAE,cAAsB;QAC9D,MAAM,KAAK,GAAG,CAAC,CAAC,YAAY,GAAG,cAAc,CAAC,GAAG,YAAY,CAAC,GAAG,GAAG,CAAA;QACpE,OAAO;YACL,YAAY;YACZ,cAAc;YACd,UAAU,EAAE,YAAY,GAAG,cAAc;YACzC,gBAAgB,EAAE,KAAK;YACvB,cAAc,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;YACtC,qBAAqB,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YACrD,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;YACzD,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,cAAc,CAAC;SACrE,CAAA;IACH,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,KAAa;QAC/B,IAAI,KAAK,KAAK,CAAC;YAAE,OAAO,KAAK,CAAA;QAC7B,MAAM,CAAC,GAAG,IAAI,CAAA;QACd,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QACrC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACnD,OAAO,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACzE,CAAC;CACF;AAED;;GAEG;AACH,MAAM,UAAU,qBAAqB,CAAC,MAAe;IACnD,OAAO,IAAI,eAAe,CAAC,MAAM,CAAC,CAAA;AACpC,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,sBAAsB;IACpC,OAAO;QACL,KAAK,EAAE,OAAO;QACd,EAAE,EAAE;YACF,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE;gBACR,YAAY,EAAE,KAAK;gBACnB,aAAa,EAAE,IAAI;gBACnB,SAAS,EAAE,IAAI;gBACf,MAAM,EAAE,KAAK;aACd;YACD,MAAM,EAAE;gBACN,QAAQ,EAAE,MAAM;aACjB;SACF;QACD,GAAG,EAAE;YACH,QAAQ,EAAE,SAAS;YACnB,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE,KAAK;YACtB,YAAY,EAAE,IAAI;SACnB;QACD,QAAQ,EAAE,MAAM;QAChB,KAAK,EAAE,IAAI;KACZ,CAAA;AACH,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,YAAY,CAAC,MAAW;IACtC,+BAA+B;IAC/B,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;QACvC,OAAO,MAAM,CAAC,MAAM,CAAA;IACtB,CAAC;IACD,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,EAAE,CAAC;QACtC,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,KAAK,MAAM,CAAA;IACvC,CAAC;IACD,mCAAmC;IACnC,IAAI,MAAM,EAAE,WAAW,IAAI,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;QAC5E,OAAO,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;IAC3C,CAAC;IACD,4BAA4B;IAC5B,OAAO,MAAM,CAAC,IAAI,KAAK,YAAY,CAAA;AACrC,CAAC","sourcesContent":["/**\r\n * 压缩处理器\r\n * \r\n * 提供统一的代码压缩功能\r\n * \r\n * @author LDesign Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport type { MinifyOptions, JSMinifyOptions, CSSMinifyOptions } from '../types/minify'\r\nimport { Logger } from './logger'\r\n\r\nexport class MinifyProcessor {\r\n  private logger: Logger\r\n\r\n  constructor(logger?: Logger) {\r\n    this.logger = logger || new Logger()\r\n  }\r\n\r\n  /**\r\n   * 创建 Rollup 压缩插件\r\n   */\r\n  createRollupMinifyPlugin(options: boolean | MinifyOptions): any[] {\r\n    const config = this.resolveMinifyConfig(options)\r\n    const plugins: any[] = []\r\n\r\n    if (!config.js) {\r\n      return plugins\r\n    }\r\n\r\n    try {\r\n      if (typeof config.js === 'object' && config.js.minifier === 'esbuild') {\r\n        // 使用 esbuild 压缩\r\n        const esbuild = require('rollup-plugin-esbuild')\r\n        plugins.push(esbuild.default({\r\n          minify: true,\r\n          target: config.js.target || 'es2015',\r\n          keepNames: config.js.keep_fnames,\r\n          legalComments: config.legal ? 'inline' : 'none'\r\n        }))\r\n      } else {\r\n        // 使用 terser 压缩\r\n        const terser = require('@rollup/plugin-terser')\r\n        plugins.push(terser.default(this.createTerserOptions(config.js)))\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn('压缩插件加载失败，将跳过压缩:', (error as Error).message)\r\n    }\r\n\r\n    return plugins\r\n  }\r\n\r\n  /**\r\n   * 创建 Rolldown 压缩配置\r\n   */\r\n  createRolldownMinifyConfig(options: boolean | MinifyOptions): any {\r\n    const config = this.resolveMinifyConfig(options)\r\n\r\n    if (!config.js) {\r\n      return { minify: false }\r\n    }\r\n\r\n    // Rolldown 内置压缩支持\r\n    return {\r\n      minify: true,\r\n      // 可以根据需要添加更多 Rolldown 特定的压缩选项\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析压缩配置\r\n   */\r\n  private resolveMinifyConfig(options: boolean | MinifyOptions): MinifyOptions {\r\n    if (typeof options === 'boolean') {\r\n      return options ? { level: 'basic', js: true } : { level: 'none', js: false }\r\n    }\r\n    return options\r\n  }\r\n\r\n  /**\r\n   * 创建 Terser 选项\r\n   */\r\n  private createTerserOptions(jsOptions: boolean | JSMinifyOptions): any {\r\n    if (typeof jsOptions === 'boolean') {\r\n      return jsOptions ? {} : undefined\r\n    }\r\n\r\n    const terserOptions: any = {}\r\n\r\n    // 混淆配置\r\n    if (jsOptions.mangle !== undefined) {\r\n      if (typeof jsOptions.mangle === 'boolean') {\r\n        terserOptions.mangle = jsOptions.mangle\r\n      } else {\r\n        terserOptions.mangle = {\r\n          reserved: jsOptions.mangle.reserved || [],\r\n          properties: jsOptions.mangle.properties || false\r\n        }\r\n      }\r\n    }\r\n\r\n    // 压缩配置\r\n    if (jsOptions.compress !== undefined) {\r\n      if (typeof jsOptions.compress === 'boolean') {\r\n        terserOptions.compress = jsOptions.compress\r\n      } else {\r\n        terserOptions.compress = {\r\n          drop_console: jsOptions.compress.drop_console,\r\n          drop_debugger: jsOptions.compress.drop_debugger,\r\n          dead_code: jsOptions.compress.dead_code,\r\n          inline: jsOptions.compress.inline\r\n        }\r\n      }\r\n    }\r\n\r\n    // 输出格式配置\r\n    if (jsOptions.format) {\r\n      terserOptions.format = {\r\n        comments: jsOptions.format.comments,\r\n        beautify: jsOptions.format.beautify,\r\n        indent_size: jsOptions.format.indent_size\r\n      }\r\n    }\r\n\r\n    // 保留函数名和类名\r\n    if (jsOptions.keep_fnames !== undefined) {\r\n      terserOptions.keep_fnames = jsOptions.keep_fnames\r\n    }\r\n    if (jsOptions.keep_classnames !== undefined) {\r\n      terserOptions.keep_classnames = jsOptions.keep_classnames\r\n    }\r\n\r\n    return terserOptions\r\n  }\r\n\r\n  /**\r\n   * 创建 CSS 压缩插件\r\n   */\r\n  createCSSMinifyPlugin(options: boolean | CSSMinifyOptions): any | null {\r\n    if (!options) return null\r\n\r\n    try {\r\n      const postcss = require('rollup-plugin-postcss')\r\n      const cssnano = require('cssnano')\r\n\r\n      const cssOptions = typeof options === 'object' ? options : {}\r\n      const cssnanoOptions: any = {}\r\n\r\n      if (cssOptions.removeUnused !== undefined) {\r\n        cssnanoOptions.discardUnused = cssOptions.removeUnused\r\n      }\r\n      if (cssOptions.mergeRules !== undefined) {\r\n        cssnanoOptions.mergeRules = cssOptions.mergeRules\r\n      }\r\n      if (cssOptions.colormin !== undefined) {\r\n        cssnanoOptions.colormin = cssOptions.colormin\r\n      }\r\n      if (cssOptions.discardComments !== undefined) {\r\n        cssnanoOptions.discardComments = cssOptions.discardComments\r\n      }\r\n      if (cssOptions.discardEmpty !== undefined) {\r\n        cssnanoOptions.discardEmpty = cssOptions.discardEmpty\r\n      }\r\n\r\n      return postcss({\r\n        plugins: [cssnano(cssnanoOptions)],\r\n        extract: true,\r\n        minimize: true\r\n      })\r\n    } catch (error) {\r\n      this.logger.warn('CSS 压缩插件加载失败:', (error as Error).message)\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取压缩统计信息\r\n   */\r\n  getCompressionStats(originalSize: number, compressedSize: number) {\r\n    const ratio = ((originalSize - compressedSize) / originalSize) * 100\r\n    return {\r\n      originalSize,\r\n      compressedSize,\r\n      savedBytes: originalSize - compressedSize,\r\n      compressionRatio: ratio,\r\n      formattedRatio: `${ratio.toFixed(1)}%`,\r\n      formattedOriginalSize: this.formatBytes(originalSize),\r\n      formattedCompressedSize: this.formatBytes(compressedSize),\r\n      formattedSavedBytes: this.formatBytes(originalSize - compressedSize)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 格式化字节大小\r\n   */\r\n  private formatBytes(bytes: number): string {\r\n    if (bytes === 0) return '0 B'\r\n    const k = 1024\r\n    const sizes = ['B', 'KB', 'MB', 'GB']\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n  }\r\n}\r\n\r\n/**\r\n * 创建压缩处理器实例\r\n */\r\nexport function createMinifyProcessor(logger?: Logger): MinifyProcessor {\r\n  return new MinifyProcessor(logger)\r\n}\r\n\r\n/**\r\n * 获取默认压缩配置\r\n */\r\nexport function getDefaultMinifyConfig(): MinifyOptions {\r\n  return {\r\n    level: 'basic',\r\n    js: {\r\n      minifier: 'terser',\r\n      mangle: false,\r\n      compress: {\r\n        drop_console: false,\r\n        drop_debugger: true,\r\n        dead_code: true,\r\n        inline: false\r\n      },\r\n      format: {\r\n        comments: 'some'\r\n      }\r\n    },\r\n    css: {\r\n      minifier: 'cssnano',\r\n      removeUnused: false,\r\n      mergeRules: true,\r\n      colormin: true,\r\n      discardComments: false,\r\n      discardEmpty: true\r\n    },\r\n    comments: 'some',\r\n    legal: true\r\n  }\r\n}\r\n\r\n/**\r\n * 检查是否需要压缩\r\n */\r\nexport function shouldMinify(config: any): boolean {\r\n  // 1) 顶层 minify 优先（boolean 或对象）\r\n  if (typeof config.minify === 'boolean') {\r\n    return config.minify\r\n  }\r\n  if (typeof config.minify === 'object') {\r\n    return config.minify.level !== 'none'\r\n  }\r\n  // 2) 回退到 performance.minify（若显式设置）\r\n  if (config?.performance && typeof config.performance.minify !== 'undefined') {\r\n    return Boolean(config.performance.minify)\r\n  }\r\n  // 3) 最后按模式：生产环境默认压缩，开发环境不压缩\r\n  return config.mode === 'production'\r\n}\r\n"]}