{"version":3,"file":"factory.js","sourceRoot":"","sources":["../../src/utils/factory.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 工厂函数 - 便捷创建构建器实例\n */\n\nimport { LibraryBuilder } from '../core/LibraryBuilder'\nimport type { BuilderOptions } from '../types/builder'\nimport type { BuilderConfig } from '../types/config'\nimport { LibraryType } from '../types/library'\nimport { createLogger } from './logger'\n\n/**\n * 创建构建器实例的便捷函数\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  // 创建默认的日志记录器\n  const logger = options.logger || createLogger({\n    level: 'info',\n    colors: true,\n    prefix: '@ldesign/builder'\n  })\n\n  // 创建默认的错误处理器（暂时不使用）\n  // const errorHandler = createErrorHandler({\n  //   logger,\n  //   showSuggestions: true\n  // })\n\n  // 合并选项\n  const builderOptions: BuilderOptions = {\n    config,\n    logger,\n    autoDetect: true,\n    cache: true,\n    performance: true,\n    ...options\n  }\n\n  return new LibraryBuilder(builderOptions)\n}\n\n/**\n * 创建开发模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createDevBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const devConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    mode: 'development',\n    minify: false,\n    output: {\n      sourcemap: 'inline'\n    },\n    debug: true,\n    ...config\n  }\n\n  return createBuilder(devConfig, options)\n}\n\n/**\n * 创建生产模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createProdBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const prodConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    mode: 'production',\n    minify: true,\n    clean: true,\n    output: {\n      sourcemap: true\n    },\n    debug: false,\n    ...config\n  }\n\n  return createBuilder(prodConfig, options)\n}\n\n/**\n * 创建 TypeScript 库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createTypeScriptBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const tsConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    libraryType: LibraryType.TYPESCRIPT,\n    typescript: {\n      declaration: true,\n      isolatedDeclarations: true\n    },\n    output: {\n      format: ['esm', 'cjs']\n    },\n    ...config\n  }\n\n  return createBuilder(tsConfig, options)\n}\n\n/**\n * 创建 Vue3 组件库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createVue3Builder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const vueConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    libraryType: LibraryType.VUE3,\n    vue: {\n      version: 3,\n      onDemand: true\n    },\n    external: ['vue'],\n    globals: {\n      vue: 'Vue'\n    },\n    output: {\n      format: ['esm', 'cjs', 'umd']\n    },\n    ...config\n  }\n\n  return createBuilder(vueConfig, options)\n}\n\n/**\n * 创建样式库构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createStyleBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const styleConfig: BuilderConfig = {\n    input: 'src/index.css',\n    libraryType: LibraryType.STYLE,\n    style: {\n      extract: true,\n      minimize: true,\n      autoprefixer: true\n    },\n    output: {\n      format: ['esm']\n    },\n    ...config\n  }\n\n  return createBuilder(styleConfig, options)\n}\n\n/**\n * 创建快速构建器（最小配置）\n * \n * @param input 入口文件\n * @param output 输出目录\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createQuickBuilder(\n  input: string,\n  output?: string,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const quickConfig: BuilderConfig = {\n    input,\n    output: output ? { dir: output } : undefined\n  }\n\n  return createBuilder(quickConfig, options)\n}\n\n/**\n * 创建监听模式构建器\n * \n * @param config 初始配置\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport function createWatchBuilder(\n  config?: BuilderConfig,\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder {\n  const watchConfig: BuilderConfig = {\n    input: 'src/index.ts',\n    watch: {\n      include: ['src/**/*'],\n      exclude: ['node_modules/**/*', 'dist/**/*']\n    },\n    ...config\n  }\n\n  return createBuilder(watchConfig, options)\n}\n\n/**\n * 从 package.json 创建构建器\n * \n * @param packageJsonPath package.json 文件路径\n * @param options 构建器选项\n * @returns 构建器实例\n */\nexport async function createBuilderFromPackage(\n  packageJsonPath: string = './package.json',\n  options: Omit<BuilderOptions, 'config'> = {}\n): Promise<LibraryBuilder> {\n  try {\n    const { readFile } = await import('./file-system')\n    const packageContent = await readFile(packageJsonPath, 'utf-8')\n    const packageJson = JSON.parse(packageContent)\n\n    // 从 package.json 推断配置\n    const config: BuilderConfig = {\n      input: packageJson.source || packageJson.main || 'src/index.ts',\n      output: {\n        dir: 'dist'\n      }\n    }\n\n    // 如果有 builder 字段，使用它\n    if (packageJson.builder) {\n      Object.assign(config, packageJson.builder)\n    }\n\n    return createBuilder(config, options)\n  } catch (error) {\n    throw new Error(`从 package.json 创建构建器失败: ${(error as Error).message}`)\n  }\n}\n\n/**\n * 批量创建构建器\n * \n * @param configs 配置数组\n * @param options 构建器选项\n * @returns 构建器实例数组\n */\nexport function createBuilders(\n  configs: BuilderConfig[],\n  options: Omit<BuilderOptions, 'config'> = {}\n): LibraryBuilder[] {\n  return configs.map(config => createBuilder(config, options))\n}\n\n/**\n * 创建构建器池\n * \n * @param configs 配置数组\n * @param options 构建器选项\n * @returns 构建器池\n */\nexport function createBuilderPool(\n  configs: BuilderConfig[],\n  options: Omit<BuilderOptions, 'config'> = {}\n): {\n  builders: LibraryBuilder[]\n  buildAll: () => Promise<any[]>\n  disposeAll: () => Promise<void>\n} {\n  const builders = createBuilders(configs, options)\n\n  return {\n    builders,\n\n    async buildAll() {\n      return Promise.all(builders.map(builder => builder.build()))\n    },\n\n    async disposeAll() {\n      await Promise.all(builders.map(builder => builder.dispose()))\n    }\n  }\n}\n"]}