{"version":3,"file":"format-utils.js","sourceRoot":"","sources":["../../src/utils/format-utils.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 格式化工具函数\n */\n\n/**\n * 格式化文件大小\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B'\n\n  const units = ['B', 'KB', 'MB', 'GB', 'TB']\n  const k = 1024\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return `${(bytes / Math.pow(k, i)).toFixed(1)} ${units[i]}`\n}\n\n/**\n * 格式化持续时间\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) {\n    return `${ms}ms`\n  }\n\n  const seconds = ms / 1000\n  if (seconds < 60) {\n    return `${seconds.toFixed(1)}s`\n  }\n\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n  return `${minutes}m ${remainingSeconds.toFixed(1)}s`\n}\n\n/**\n * 格式化百分比\n */\nexport function formatPercentage(value: number, total: number): string {\n  if (total === 0) return '0%'\n  return `${((value / total) * 100).toFixed(1)}%`\n}\n\n/**\n * 格式化数字\n */\nexport function formatNumber(num: number): string {\n  return num.toLocaleString()\n}\n\n/**\n * 格式化内存使用\n */\nexport function formatMemory(bytes: number): string {\n  return formatFileSize(bytes)\n}\n\n/**\n * 格式化时间戳\n */\nexport function formatTimestamp(timestamp: number): string {\n  return new Date(timestamp).toLocaleString()\n}\n\n/**\n * 格式化相对时间\n */\nexport function formatRelativeTime(timestamp: number): string {\n  const now = Date.now()\n  const diff = now - timestamp\n\n  if (diff < 1000) {\n    return '刚刚'\n  }\n\n  if (diff < 60000) {\n    return `${Math.floor(diff / 1000)}秒前`\n  }\n\n  if (diff < 3600000) {\n    return `${Math.floor(diff / 60000)}分钟前`\n  }\n\n  if (diff < 86400000) {\n    return `${Math.floor(diff / 3600000)}小时前`\n  }\n\n  return `${Math.floor(diff / 86400000)}天前`\n}\n\n/**\n * 格式化路径（缩短显示）\n */\nexport function formatPath(filePath: string, maxLength: number = 50): string {\n  if (filePath.length <= maxLength) {\n    return filePath\n  }\n\n  const parts = filePath.split('/')\n  if (parts.length <= 2) {\n    return filePath\n  }\n\n  // 保留开头和结尾，中间用 ... 替代\n  const start = parts[0]\n  const end = parts[parts.length - 1]\n  return `${start}/.../${end}`\n}\n\n/**\n * 格式化版本号\n */\nexport function formatVersion(version: string): string {\n  // 移除前缀 v\n  return version.replace(/^v/, '')\n}\n\n/**\n * 格式化构建状态\n */\nexport function formatBuildStatus(status: string): string {\n  const statusMap: Record<string, string> = {\n    idle: '空闲',\n    initializing: '初始化中',\n    building: '构建中',\n    watching: '监听中',\n    error: '错误',\n    complete: '完成',\n    cancelled: '已取消'\n  }\n\n  return statusMap[status] || status\n}\n\n// formatError 已在 error-handler.ts 中定义，这里导入\nexport { formatError } from './error-handler'\n\n/**\n * 格式化配置对象\n */\nexport function formatConfig(config: any, indent: number = 2): string {\n  try {\n    return JSON.stringify(config, null, indent)\n  } catch {\n    return String(config)\n  }\n}\n\n/**\n * 格式化列表\n */\nexport function formatList(items: string[], separator: string = ', '): string {\n  if (items.length === 0) return ''\n  if (items.length === 1) return items[0]\n  if (items.length === 2) return items.join(' 和 ')\n\n  const last = items[items.length - 1]\n  const rest = items.slice(0, -1)\n  return `${rest.join(separator)} 和 ${last}`\n}\n\n/**\n * 格式化表格数据\n */\nexport function formatTable(data: Array<Record<string, any>>, columns?: string[]): string {\n  if (data.length === 0) return ''\n\n  const keys = columns || Object.keys(data[0])\n  const rows = data.map(row => keys.map(key => String(row[key] || '')))\n\n  // 计算每列的最大宽度\n  const widths = keys.map((key, i) =>\n    Math.max(\n      key.length,\n      ...rows.map(row => row[i].length)\n    )\n  )\n\n  // 生成表格\n  const header = keys.map((key, i) => key.padEnd(widths[i])).join(' | ')\n  const separator = widths.map(width => '-'.repeat(width)).join('-|-')\n  const body = rows.map(row =>\n    row.map((cell, i) => cell.padEnd(widths[i])).join(' | ')\n  ).join('\\n')\n\n  return `${header}\\n${separator}\\n${body}`\n}\n\n/**\n * 格式化进度条\n */\nexport function formatProgressBar(\n  current: number,\n  total: number,\n  width: number = 20,\n  char: string = '█'\n): string {\n  const percentage = total > 0 ? current / total : 0\n  const filled = Math.round(percentage * width)\n  const empty = width - filled\n\n  return char.repeat(filled) + '░'.repeat(empty)\n}\n\n/**\n * 格式化键值对\n */\nexport function formatKeyValue(\n  obj: Record<string, any>,\n  separator: string = ': ',\n  indent: string = '  '\n): string {\n  return Object.entries(obj)\n    .map(([key, value]) => `${indent}${key}${separator}${value}`)\n    .join('\\n')\n}\n\n/**\n * 截断文本\n */\nexport function truncateText(text: string, maxLength: number, suffix: string = '...'): string {\n  if (text.length <= maxLength) {\n    return text\n  }\n\n  return text.slice(0, maxLength - suffix.length) + suffix\n}\n\n/**\n * 首字母大写\n */\nexport function capitalize(text: string): string {\n  return text.charAt(0).toUpperCase() + text.slice(1)\n}\n\n/**\n * 驼峰转短横线\n */\nexport function camelToKebab(text: string): string {\n  return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * 短横线转驼峰\n */\nexport function kebabToCamel(text: string): string {\n  return text.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())\n}\n"]}