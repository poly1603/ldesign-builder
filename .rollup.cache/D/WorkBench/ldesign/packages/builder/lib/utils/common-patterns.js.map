{"version":3,"file":"common-patterns.js","sourceRoot":"","sources":["../../src/utils/common-patterns.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 通用模式和工具函数\n * \n * 提供常用的代码模式和工具函数，减少代码重复\n */\n\nimport { BUILD_CONSTANTS } from '../constants/defaults'\n\n/**\n * 重试配置\n */\nexport interface RetryOptions {\n  /** 最大重试次数 */\n  maxRetries?: number\n  /** 重试延迟基数 (ms) */\n  delayBase?: number\n  /** 最大延迟时间 (ms) */\n  maxDelay?: number\n  /** 是否使用指数退避 */\n  exponentialBackoff?: boolean\n}\n\n/**\n * 带重试的异步函数执行器\n */\nexport async function withRetry<T>(\n  fn: () => Promise<T>,\n  options: RetryOptions = {}\n): Promise<T> {\n  const {\n    maxRetries = BUILD_CONSTANTS.MAX_RETRY_COUNT,\n    delayBase = BUILD_CONSTANTS.RETRY_DELAY_BASE,\n    maxDelay = 10000,\n    exponentialBackoff = true\n  } = options\n\n  let lastError: Error | null = null\n  \n  for (let attempt = 0; attempt <= maxRetries; attempt++) {\n    try {\n      return await fn()\n    } catch (error) {\n      lastError = error instanceof Error ? error : new Error(String(error))\n      \n      if (attempt === maxRetries) {\n        break\n      }\n      \n      // 计算延迟时间\n      const delay = exponentialBackoff \n        ? Math.min(delayBase * Math.pow(2, attempt), maxDelay)\n        : delayBase\n      \n      await new Promise(resolve => setTimeout(resolve, delay))\n    }\n  }\n  \n  throw lastError\n}\n\n/**\n * 安全的异步操作包装器\n */\nexport async function safeAsync<T>(\n  fn: () => Promise<T>,\n  fallback?: T,\n  onError?: (error: Error) => void\n): Promise<T | undefined> {\n  try {\n    return await fn()\n  } catch (error) {\n    const err = error instanceof Error ? error : new Error(String(error))\n    onError?.(err)\n    return fallback\n  }\n}\n\n/**\n * 批量处理数组元素\n */\nexport async function batchProcess<T, R>(\n  items: T[],\n  processor: (item: T, index: number) => Promise<R>,\n  batchSize = 10\n): Promise<R[]> {\n  const results: R[] = []\n  \n  for (let i = 0; i < items.length; i += batchSize) {\n    const batch = items.slice(i, i + batchSize)\n    const batchResults = await Promise.all(\n      batch.map((item, index) => processor(item, i + index))\n    )\n    results.push(...batchResults)\n  }\n  \n  return results\n}\n\n/**\n * 防抖函数\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout | undefined\n  \n  return (...args: Parameters<T>) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    \n    timeoutId = setTimeout(() => {\n      fn(...args)\n    }, delay)\n  }\n}\n\n/**\n * 节流函数\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let lastCall = 0\n  \n  return (...args: Parameters<T>) => {\n    const now = Date.now()\n    \n    if (now - lastCall >= delay) {\n      lastCall = now\n      fn(...args)\n    }\n  }\n}\n\n/**\n * 缓存装饰器\n */\nexport function memoize<T extends (...args: any[]) => any>(\n  fn: T,\n  keyGenerator?: (...args: Parameters<T>) => string\n): T {\n  const cache = new Map<string, ReturnType<T>>()\n  \n  return ((...args: Parameters<T>) => {\n    const key = keyGenerator ? keyGenerator(...args) : JSON.stringify(args)\n    \n    if (cache.has(key)) {\n      return cache.get(key)!\n    }\n    \n    const result = fn(...args)\n    cache.set(key, result)\n    return result\n  }) as T\n}\n\n/**\n * 格式化文件大小\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 B'\n  \n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`\n}\n\n/**\n * 格式化持续时间\n */\nexport function formatDuration(ms: number): string {\n  if (ms < 1000) return `${ms}ms`\n  if (ms < 60000) return `${(ms / 1000).toFixed(2)}s`\n  if (ms < 3600000) return `${(ms / 60000).toFixed(2)}m`\n  return `${(ms / 3600000).toFixed(2)}h`\n}\n\n/**\n * 深度合并对象\n */\nexport function deepMerge<T extends Record<string, any>>(\n  target: T,\n  ...sources: Partial<T>[]\n): T {\n  if (!sources.length) return target\n  \n  const source = sources.shift()\n  if (!source) return target\n  \n  for (const key in source) {\n    if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n      if (!target[key] || typeof target[key] !== 'object') {\n        target[key] = {} as any\n      }\n      deepMerge(target[key], source[key])\n    } else {\n      target[key] = source[key] as any\n    }\n  }\n  \n  return deepMerge(target, ...sources)\n}\n\n/**\n * 检查是否为空值\n */\nexport function isEmpty(value: any): boolean {\n  if (value == null) return true\n  if (typeof value === 'string') return value.trim().length === 0\n  if (Array.isArray(value)) return value.length === 0\n  if (typeof value === 'object') return Object.keys(value).length === 0\n  return false\n}\n\n/**\n * 确保值为数组\n */\nexport function ensureArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value]\n}\n\n/**\n * 安全的JSON解析\n */\nexport function safeJsonParse<T = any>(\n  json: string,\n  fallback?: T\n): T | undefined {\n  try {\n    return JSON.parse(json)\n  } catch {\n    return fallback\n  }\n}\n\n/**\n * 创建计时器\n */\nexport function createTimer(label?: string) {\n  const startTime = performance.now()\n  \n  return {\n    end: () => {\n      const duration = performance.now() - startTime\n      if (label) {\n        console.log(`${label}: ${formatDuration(duration)}`)\n      }\n      return duration\n    },\n    elapsed: () => performance.now() - startTime\n  }\n}\n\n/**\n * 并发限制器\n */\nexport class ConcurrencyLimiter {\n  private running = 0\n  private queue: Array<() => void> = []\n\n  constructor(private limit: number) {}\n\n  async run<T>(fn: () => Promise<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const execute = async () => {\n        this.running++\n        try {\n          const result = await fn()\n          resolve(result)\n        } catch (error) {\n          reject(error)\n        } finally {\n          this.running--\n          this.processQueue()\n        }\n      }\n\n      if (this.running < this.limit) {\n        execute()\n      } else {\n        this.queue.push(execute)\n      }\n    })\n  }\n\n  private processQueue() {\n    if (this.queue.length > 0 && this.running < this.limit) {\n      const next = this.queue.shift()\n      if (next) next()\n    }\n  }\n}\n"]}