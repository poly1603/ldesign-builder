{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/utils/logger.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 日志系统工具\n * \n * TODO: 后期可以移到 @ldesign/kit 中统一管理\n */\n\nimport chalk from 'chalk'\nimport type { LogLevel } from '../types/common'\n\n/**\n * 日志级别枚举\n */\nexport enum LogLevelEnum {\n  SILENT = 0,\n  ERROR = 1,\n  WARN = 2,\n  INFO = 3,\n  DEBUG = 4,\n  VERBOSE = 5\n}\n\n/**\n * 日志级别映射\n */\nconst LOG_LEVEL_MAP: Record<LogLevel, LogLevelEnum> = {\n  silent: LogLevelEnum.SILENT,\n  error: LogLevelEnum.ERROR,\n  warn: LogLevelEnum.WARN,\n  info: LogLevelEnum.INFO,\n  debug: LogLevelEnum.DEBUG,\n  verbose: LogLevelEnum.VERBOSE\n}\n\n/**\n * 日志选项\n */\nexport interface LoggerOptions {\n  /** 日志级别 */\n  level?: LogLevel\n  /** 是否启用颜色 */\n  colors?: boolean\n  /** 是否显示时间戳 */\n  timestamp?: boolean\n  /** 日志前缀 */\n  prefix?: string\n  /** 是否静默模式 */\n  silent?: boolean\n}\n\n/**\n * 日志记录器类\n */\nexport class Logger {\n  private level: LogLevelEnum\n  private colors: boolean\n  private timestamp: boolean\n  private prefix: string\n  private silent: boolean\n\n  constructor(options: LoggerOptions = {}) {\n    this.level = LOG_LEVEL_MAP[options.level || 'info']\n    this.colors = options.colors ?? true\n    this.timestamp = options.timestamp ?? false\n    this.prefix = options.prefix || '@ldesign/builder'\n    this.silent = options.silent ?? false\n  }\n\n  /**\n   * 设置日志级别\n   */\n  setLevel(level: LogLevel): void {\n    this.level = LOG_LEVEL_MAP[level]\n  }\n\n  /**\n   * 获取当前日志级别\n   */\n  getLevel(): LogLevel {\n    const entries = Object.entries(LOG_LEVEL_MAP)\n    const entry = entries.find(([, value]) => value === this.level)\n    return (entry?.[0] as LogLevel) || 'info'\n  }\n\n  /**\n   * 设置静默模式\n   */\n  setSilent(silent: boolean): void {\n    this.silent = silent\n  }\n\n  /**\n   * 错误日志\n   */\n  error(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.ERROR)) {\n      this.log('ERROR', message, chalk.red, ...args)\n    }\n  }\n\n  /**\n   * 警告日志\n   */\n  warn(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.WARN)) {\n      this.log('WARN', message, chalk.yellow, ...args)\n    }\n  }\n\n  /**\n   * 信息日志\n   */\n  info(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('INFO', message, chalk.blue, ...args)\n    }\n  }\n\n  /**\n   * 调试日志\n   */\n  debug(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.DEBUG)) {\n      this.log('DEBUG', message, chalk.gray, ...args)\n    }\n  }\n\n  /**\n   * 详细日志\n   */\n  verbose(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.VERBOSE)) {\n      this.log('VERBOSE', message, chalk.gray, ...args)\n    }\n  }\n\n  /**\n   * 成功日志\n   */\n  success(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('SUCCESS', message, chalk.green, ...args)\n    }\n  }\n\n  /**\n   * 开始日志（带缩进）\n   */\n  start(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('START', `▶ ${message}`, chalk.cyan, ...args)\n    }\n  }\n\n  /**\n   * 完成日志（带缩进）\n   */\n  complete(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      this.log('COMPLETE', `✓ ${message}`, chalk.green, ...args)\n    }\n  }\n\n  /**\n   * 失败日志（带缩进）\n   */\n  fail(message: string, ...args: any[]): void {\n    if (this.shouldLog(LogLevelEnum.ERROR)) {\n      this.log('FAIL', `✗ ${message}`, chalk.red, ...args)\n    }\n  }\n\n  /**\n   * 进度日志\n   */\n  progress(current: number, total: number, message?: string): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      const percent = Math.round((current / total) * 100)\n      const progressBar = this.createProgressBar(percent)\n      const progressMessage = message ? ` ${message}` : ''\n      this.log('PROGRESS', `${progressBar} ${percent}%${progressMessage}`, chalk.cyan)\n    }\n  }\n\n  /**\n   * 表格日志\n   */\n  table(data: Record<string, any>[]): void {\n    if (this.shouldLog(LogLevelEnum.INFO) && data.length > 0) {\n      console.table(data)\n    }\n  }\n\n  /**\n   * 分组开始\n   */\n  group(label: string): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.group(this.formatMessage('GROUP', label, chalk.cyan))\n    }\n  }\n\n  /**\n   * 分组结束\n   */\n  groupEnd(): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.groupEnd()\n    }\n  }\n\n  /**\n   * 清屏\n   */\n  clear(): void {\n    if (!this.silent) {\n      console.clear()\n    }\n  }\n\n  /**\n   * 换行\n   */\n  newLine(): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.log()\n    }\n  }\n\n  /**\n   * 分隔线\n   */\n  divider(char: string = '-', length: number = 50): void {\n    if (this.shouldLog(LogLevelEnum.INFO)) {\n      console.log(chalk.gray(char.repeat(length)))\n    }\n  }\n\n  /**\n   * 创建子日志记录器\n   */\n  child(prefix: string, options: Partial<LoggerOptions> = {}): Logger {\n    return new Logger({\n      level: this.getLevel(),\n      colors: this.colors,\n      timestamp: this.timestamp,\n      prefix: `${this.prefix}:${prefix}`,\n      silent: this.silent,\n      ...options\n    })\n  }\n\n  /**\n   * 判断是否应该记录日志\n   */\n  private shouldLog(level: LogLevelEnum): boolean {\n    return !this.silent && this.level >= level\n  }\n\n  /**\n   * 记录日志\n   */\n  private log(type: string, message: string, colorFn: (str: string) => string, ...args: any[]): void {\n    const formattedMessage = this.formatMessage(type, message, colorFn)\n    console.log(formattedMessage, ...args)\n  }\n\n  /**\n   * 格式化消息\n   */\n  private formatMessage(type: string, message: string, colorFn: (str: string) => string): string {\n    let formatted = ''\n\n    // 添加时间戳\n    if (this.timestamp) {\n      const timestamp = new Date().toISOString()\n      formatted += chalk.gray(`[${timestamp}] `)\n    }\n\n    // 添加前缀\n    if (this.prefix) {\n      formatted += chalk.gray(`[${this.prefix}] `)\n    }\n\n    // 添加类型\n    if (this.colors) {\n      formatted += colorFn(`[${type}] `)\n    } else {\n      formatted += `[${type}] `\n    }\n\n    // 添加消息\n    if (this.colors) {\n      formatted += colorFn(message)\n    } else {\n      formatted += message\n    }\n\n    return formatted\n  }\n\n  /**\n   * 创建进度条\n   */\n  private createProgressBar(percent: number, width: number = 20): string {\n    const filled = Math.round((percent / 100) * width)\n    const empty = width - filled\n    const bar = '█'.repeat(filled) + '░'.repeat(empty)\n    return this.colors ? chalk.cyan(bar) : bar\n  }\n}\n\n/**\n * 默认日志记录器实例\n */\nexport const logger = new Logger()\n\n/**\n * 创建日志记录器\n */\nexport function createLogger(options: LoggerOptions = {}): Logger {\n  return new Logger(options)\n}\n\n/**\n * 设置全局日志级别\n */\nexport function setLogLevel(level: LogLevel): void {\n  logger.setLevel(level)\n}\n\n/**\n * 设置全局静默模式\n */\nexport function setSilent(silent: boolean): void {\n  logger.setSilent(silent)\n}\n"]}