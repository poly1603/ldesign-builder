{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/types/index.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AAEH,OAAO;AACP,cAAc,WAAW,CAAA;AACzB,cAAc,UAAU,CAAA;AACxB,cAAc,WAAW,CAAA;AACzB,cAAc,YAAY,CAAA;AAC1B,cAAc,UAAU,CAAA;AACxB,cAAc,WAAW,CAAA;AACzB,cAAc,WAAW,CAAA;AACzB,cAAc,UAAU,CAAA;AACxB,cAAc,eAAe,CAAA;AAC7B,cAAc,UAAU,CAAA;AACxB,cAAc,UAAU,CAAA","sourcesContent":["/**\n * @ldesign/builder - 类型定义统一导出\n * \n * 提供所有公共类型定义的统一导出\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\n// 核心类型\nexport * from './builder'\nexport * from './config'\nexport * from './adapter'\nexport * from './strategy'\nexport * from './plugin'\nexport * from './library'\nexport * from './bundler'\nexport * from './output'\nexport * from './performance'\nexport * from './common'\nexport * from './minify'\n\n// 导出验证相关类型，但排除冲突的 ValidationResult\nexport type {\n  PostBuildValidationConfig,\n  ValidationEnvironmentConfig,\n  ValidationReportingConfig,\n  ValidationHooks,\n  ValidationScopeConfig,\n  ValidationContext,\n  TestRunResult,\n  TestError,\n  CoverageInfo,\n  CoverageMetric,\n  FileCoverageInfo,\n  TestPerformanceMetrics,\n  ValidationReport,\n  ValidationSummary,\n  ValidationDetails,\n  FileValidationResult,\n  FormatValidationResult,\n  TypeValidationResult,\n  StyleValidationResult,\n  TypeCheckResult,\n  TypeDiagnostic,\n  ValidationError,\n  ValidationWarning,\n  ValidationStats,\n  ValidationRecommendation,\n  IPostBuildValidator,\n  ITestRunner,\n  IValidationReporter\n} from './validation'\n\n// 重新导出 ValidationResult 为不同的名称以避免冲突\nexport type { ValidationResult as PostBuildValidationResult } from './validation'\n"]}