{"version":3,"file":"MixedStrategy.js","sourceRoot":"","sources":["../../../src/strategies/mixed/MixedStrategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 混合策略\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\nexport class MixedStrategy implements ILibraryStrategy {\n  readonly name = 'mixed'\n  readonly supportedTypes: LibraryType[] = [LibraryType.MIXED]\n  readonly priority = 5\n\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: await this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.MIXED\n  }\n\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.MIXED,\n      output: {\n        format: ['esm', 'cjs'],\n        sourcemap: true\n      },\n      typescript: {\n        declaration: true\n      },\n      style: {\n        extract: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      }\n    }\n  }\n\n  getRecommendedPlugins(_config: BuilderConfig): any[] {\n    return []\n  }\n\n  validateConfig(_config: BuilderConfig): any {\n    return {\n      valid: true,\n      errors: [],\n      warnings: [],\n      suggestions: []\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx,vue,css,less,scss,sass,json}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      exports: 'named'\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    try {\n      // Node resolve\n      const nodeResolve = await import('@rollup/plugin-node-resolve')\n      plugins.push(nodeResolve.default({\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx', '.vue', '.css', '.less', '.scss']\n      }))\n\n      // CommonJS\n      const commonjs = await import('@rollup/plugin-commonjs')\n      plugins.push(commonjs.default())\n\n      // TypeScript\n      const ts = await import('@rollup/plugin-typescript')\n      plugins.push({\n        name: 'typescript',\n        plugin: async () => ts.default({\n          tsconfig: 'tsconfig.json',\n          declaration: config.typescript?.declaration !== false,\n          // declarationDir 将由 RollupAdapter 动态设置\n          target: config.typescript?.target || 'ES2020',\n          module: config.typescript?.module || 'ESNext',\n          strict: config.typescript?.strict !== false,\n          skipLibCheck: true,\n          sourceMap: config.output?.sourcemap !== false\n        } as any)\n      })\n\n      // PostCSS for styles\n      if (config.style?.extract !== false) {\n        const postcss = await import('rollup-plugin-postcss')\n        plugins.push(postcss.default({\n          extract: true,\n          minimize: config.style?.minimize !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          modules: config.style?.modules || false\n        }))\n      }\n\n    } catch (error) {\n      console.error('插件加载失败:', error)\n    }\n\n    return plugins\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n}\n"]}