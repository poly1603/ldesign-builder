{"version":3,"file":"TypeScriptStrategy.js","sourceRoot":"","sources":["../../../src/strategies/typescript/TypeScriptStrategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * TypeScript 策略\n *\n * 为 TypeScript 库提供完整的构建策略，包括：\n * - TypeScript 编译和类型检查\n * - 声明文件生成\n * - 多格式输出支持\n * - Tree Shaking 优化\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\nimport { shouldMinify } from '../../utils/minify-processor'\n\n/**\n * TypeScript 库构建策略\n */\nexport class TypeScriptStrategy implements ILibraryStrategy {\n  readonly name = 'typescript'\n  readonly supportedTypes: LibraryType[] = [LibraryType.TYPESCRIPT]\n  readonly priority = 10\n\n  /**\n   * 应用 TypeScript 策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    const outputConfig = this.buildOutputConfig(config)\n\n    // 计算入口：若用户未指定，则默认将 src 目录下的所有源码文件作为多入口\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    // 创建基础配置，保留重要的原始配置属性\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: outputConfig,\n      plugins: this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: config.performance?.treeshaking !== false,\n      onwarn: this.createWarningHandler(),\n      // 保留重要的构建选项\n      clean: (config as any).clean,\n      minify: config.performance?.minify,\n      sourcemap: config.output?.sourcemap,\n      // 保留其他可能的配置属性\n      ...(config as any)\n    }\n\n    // 覆盖特定的属性以确保正确性\n    unifiedConfig.input = resolvedInput\n    unifiedConfig.output = outputConfig\n    unifiedConfig.plugins = this.buildPlugins(config)\n    unifiedConfig.external = config.external || []\n    unifiedConfig.treeshake = config.performance?.treeshaking !== false\n    unifiedConfig.onwarn = this.createWarningHandler()\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.TYPESCRIPT\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.TYPESCRIPT,\n      output: {\n        format: ['esm', 'cjs', 'umd'],\n        sourcemap: true\n      },\n      typescript: {\n        declaration: true,\n        // declarationDir 将由 RollupAdapter 动态设置\n        target: 'ES2020',\n        module: 'ESNext',\n        strict: true,\n        skipLibCheck: true\n      },\n      performance: {\n        treeshaking: true,\n        minify: true\n      }\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{ts,tsx,js,jsx}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.ts'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // TypeScript 插件\n    plugins.push({\n      name: '@rollup/plugin-typescript',\n      options: this.getTypeScriptOptions(config)\n    })\n\n    // Node 解析插件（优先浏览器分支，避免引入 Node 内置依赖）\n    plugins.push({\n      name: '@rollup/plugin-node-resolve',\n      options: {\n        preferBuiltins: false,\n        browser: true,\n        extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: '@rollup/plugin-commonjs',\n      options: {}\n    })\n\n    // JSON 插件（允许导入 JSON 文件）\n    plugins.push({\n      name: '@rollup/plugin-json',\n      options: {}\n    })\n\n    // 样式处理（支持 css/less/scss），在 TS 库中也允许按需引入样式\n    plugins.push({\n      name: 'postcss',\n      plugin: async () => {\n        const postcss = await import('rollup-plugin-postcss')\n        return postcss.default({\n          extract: (config as any).style?.extract !== false,\n          minimize: (config as any).style?.minimize !== false,\n          sourceMap: (config as any).output?.sourcemap !== false,\n          modules: (config as any).style?.modules || false,\n          use: ['less'],\n          extensions: ['.css', '.less', '.scss', '.sass']\n        })\n      }\n    })\n\n    // 代码压缩插件（生产模式）\n    if (config.mode === 'production' && config.performance?.minify !== false) {\n      plugins.push({\n        name: '@rollup/plugin-terser',\n        options: {\n          compress: {\n            drop_console: true,\n            drop_debugger: true\n          },\n          format: {\n            comments: false\n          }\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      errors.push('TypeScript 策略需要指定入口文件')\n    } else if (typeof config.input === 'string') {\n      if (!config.input.endsWith('.ts') && !config.input.endsWith('.tsx')) {\n        warnings.push('入口文件不是 TypeScript 文件，建议使用 .ts 或 .tsx 扩展名')\n      }\n    }\n\n    // 检查输出配置 - 只在没有任何输出配置时才建议\n    if (!config.output?.format && !config.output?.esm && !config.output?.cjs && !config.output?.umd) {\n      suggestions.push('建议指定输出格式，如 [\"esm\", \"cjs\"]')\n    }\n\n    // 检查 TypeScript 配置 - 只在明确禁用时才建议\n    if (config.typescript?.declaration === false) {\n      suggestions.push('建议启用类型声明文件生成 (declaration: true)')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const oc: any = config.output || {}\n\n    // 若显式使用了 esm/cjs/umd 字段（boolean 或对象），优先走格式化分支\n    const hasPerFormat = typeof oc.esm !== 'undefined' || typeof oc.cjs !== 'undefined' || typeof oc.umd !== 'undefined'\n\n    const result: any = {}\n\n    // 继承顶层 sourcemap（可被子格式覆盖）\n    if (typeof oc.sourcemap !== 'undefined') {\n      result.sourcemap = oc.sourcemap\n    } else if (typeof (config as any).sourcemap !== 'undefined') {\n      result.sourcemap = (config as any).sourcemap\n    }\n\n    // 继承公共 name/globals（供 UMD 使用）\n    if (oc.name) result.name = oc.name\n    if (oc.globals) result.globals = oc.globals\n\n    if (hasPerFormat) {\n      if (typeof oc.esm !== 'undefined') result.esm = oc.esm\n      if (typeof oc.cjs !== 'undefined') result.cjs = oc.cjs\n      if (typeof oc.umd !== 'undefined') result.umd = oc.umd\n    } else {\n      // 回退到 format 数组（向后兼容）\n      const formats = Array.isArray(oc.format) ? oc.format : ['esm', 'cjs']\n      result.format = formats\n    }\n\n    return result\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private buildPlugins(config: BuilderConfig): any[] {\n    const plugins: any[] = []\n\n    // TypeScript 插件 - 始终添加，由 getTypeScriptOptions 决定声明相关行为\n    plugins.push({\n      name: 'typescript',\n      plugin: async () => {\n        const typescript = await import('@rollup/plugin-typescript')\n        return typescript.default({\n          ...this.getTypeScriptOptions(config)\n        })\n      }\n    })\n\n    // Node 解析插件（优先浏览器分支）\n    plugins.push({\n      name: 'node-resolve',\n      plugin: async () => {\n        const nodeResolve = await import('@rollup/plugin-node-resolve')\n        return nodeResolve.nodeResolve({\n          preferBuiltins: false,\n          browser: true,\n          extensions: ['.mjs', '.js', '.json', '.ts', '.tsx']\n        })\n      }\n    })\n\n    // CommonJS 插件\n    plugins.push({\n      name: 'commonjs',\n      plugin: async () => {\n        const commonjs = await import('@rollup/plugin-commonjs')\n        return commonjs.default()\n      }\n    })\n\n    // JSON 插件\n    plugins.push({\n      name: 'json',\n      plugin: async () => {\n        const json = await import('@rollup/plugin-json')\n        return json.default()\n      }\n    })\n\n    // 样式处理（支持 css/less/scss）\n    plugins.push({\n      name: 'postcss',\n      plugin: async () => {\n        const postcss = await import('rollup-plugin-postcss')\n        return postcss.default({\n          extract: (config as any).style?.extract !== false,\n          minimize: (config as any).style?.minimize !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          modules: (config as any).style?.modules || false,\n          use: ['less'],\n          extensions: ['.css', '.less', '.scss', '.sass']\n        })\n      }\n    })\n\n    // 使用 esbuild 转译 TS/TSX 为 JS（保留 JSX，由后续链按需处理）\n    plugins.push({\n      name: 'esbuild',\n      plugin: async () => {\n        const esbuild = await import('rollup-plugin-esbuild')\n        return esbuild.default({\n          include: /\\.(ts|tsx|js|jsx)(\\?|$)/,\n          exclude: [/node_modules/],\n          target: 'es2020',\n          jsx: 'preserve',\n          tsconfig: 'tsconfig.json',\n          loaders: { '.ts': 'ts', '.tsx': 'tsx' },\n          minify: shouldMinify(config),\n          sourceMap: config.output?.sourcemap !== false\n        })\n      }\n    })\n\n    // 代码压缩插件（生产模式）\n    if (shouldMinify(config)) {\n      plugins.push({\n        name: 'terser',\n        plugin: async () => {\n          const terser = await import('@rollup/plugin-terser')\n          return terser.default({\n            compress: {\n              drop_console: true,\n              drop_debugger: true\n            },\n            format: {\n              comments: false\n            }\n          })\n        }\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 获取 TypeScript 选项\n   */\n  private getTypeScriptOptions(config: BuilderConfig): any {\n    const tsConfig = config.typescript || {}\n    const options: any = {\n      target: tsConfig.target || 'ES2020',\n      module: tsConfig.module || 'ESNext',\n      strict: tsConfig.strict !== false,\n      skipLibCheck: tsConfig.skipLibCheck !== false,\n      esModuleInterop: true,\n      allowSyntheticDefaultImports: true,\n      moduleResolution: 'node',\n      resolveJsonModule: true,\n      isolatedModules: true,\n      noEmitOnError: false,\n      // 显式覆盖，避免上游 tsconfig 开启导致 TS5096\n      allowImportingTsExtensions: false,\n      exclude: ['**/*.test.ts', '**/*.spec.ts', 'node_modules/**']\n    }\n\n    // 只有在明确启用声明文件时才添加相关选项（顶层 dts 也可开启）\n    if (tsConfig.declaration === true || (config as any).dts === true) {\n      options.declaration = true\n      // declarationDir 将由 RollupAdapter 动态设置，这里不设置固定值\n      if (tsConfig.declarationDir) {\n        options.declarationDir = tsConfig.declarationDir\n      }\n      if (tsConfig.declarationMap === true) {\n        options.declarationMap = true\n      }\n    }\n\n    return options\n  }\n\n\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'THIS_IS_UNDEFINED') {\n        return\n      }\n      if (warning.code === 'CIRCULAR_DEPENDENCY') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n}\n"]}