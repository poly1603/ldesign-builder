{"version":3,"file":"StyleStrategy.js","sourceRoot":"","sources":["../../../src/strategies/style/StyleStrategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 样式库构建策略\n *\n * 为样式库提供完整的构建策略，包括：\n * - Less/Sass 预处理器支持\n * - CSS 压缩和优化\n * - 自动添加浏览器前缀\n * - CSS 变量和主题支持\n *\n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport type { ILibraryStrategy } from '../../types/strategy'\nimport { LibraryType } from '../../types/library'\nimport type { BuilderConfig } from '../../types/config'\nimport type { UnifiedConfig } from '../../types/adapter'\n\n/**\n * 样式库构建策略\n */\nexport class StyleStrategy implements ILibraryStrategy {\n  readonly name = 'style'\n  readonly supportedTypes: LibraryType[] = [LibraryType.STYLE]\n  readonly priority = 8\n\n  /**\n   * 应用样式策略\n   */\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\n    // 解析入口配置\n    const resolvedInput = await this.resolveInputEntries(config)\n\n    const unifiedConfig: UnifiedConfig = {\n      input: resolvedInput,\n      output: this.buildOutputConfig(config),\n      plugins: this.buildPlugins(config),\n      external: config.external || [],\n      treeshake: false, // CSS 不需要 Tree Shaking\n      onwarn: this.createWarningHandler()\n    }\n\n    return unifiedConfig\n  }\n\n  /**\n   * 检查策略是否适用\n   */\n  isApplicable(config: BuilderConfig): boolean {\n    return config.libraryType === LibraryType.STYLE\n  }\n\n  /**\n   * 获取默认配置\n   */\n  getDefaultConfig(): Partial<BuilderConfig> {\n    return {\n      libraryType: LibraryType.STYLE,\n      output: {\n        format: ['esm'], // 使用 ESM 格式，PostCSS 插件会提取 CSS\n        sourcemap: true\n      },\n      style: {\n        extract: true,\n        minimize: true,\n        autoprefixer: true,\n        modules: false,\n        preprocessor: {\n          less: {\n            enabled: true,\n            options: {\n              javascriptEnabled: true\n            }\n          },\n          sass: {\n            enabled: false\n          }\n        },\n        browserslist: [\n          '> 1%',\n          'last 2 versions',\n          'not dead'\n        ]\n      },\n      performance: {\n        treeshaking: false,\n        minify: true\n      }\n    }\n  }\n\n  /**\n   * 获取推荐插件\n   */\n  getRecommendedPlugins(config: BuilderConfig): any[] {\n    const plugins = []\n\n    // PostCSS 插件\n    plugins.push({\n      name: 'postcss',\n      options: this.getPostCSSOptions(config)\n    })\n\n    // Less 插件\n    if (this.shouldUseLess(config)) {\n      plugins.push({\n        name: 'less',\n        options: this.getLessOptions(config)\n      })\n    }\n\n    // Sass 插件\n    if (this.shouldUseSass(config)) {\n      plugins.push({\n        name: 'sass',\n        options: this.getSassOptions(config)\n      })\n    }\n\n    return plugins\n  }\n\n  /**\n   * 验证配置\n   */\n  validateConfig(config: BuilderConfig): any {\n    const errors: string[] = []\n    const warnings: string[] = []\n    const suggestions: string[] = []\n\n    // 检查入口文件\n    if (!config.input) {\n      // 入口可选：当未提供时，策略会自动发现入口，不作为硬错误\n      warnings.push('未显式指定入口，已启用自动入口发现')\n    } else if (typeof config.input === 'string') {\n      const inputStr = config.input as string\n      const supportedExtensions = ['.css', '.less', '.scss', '.sass', '.styl']\n      const hasValidExtension = supportedExtensions.some(ext =>\n        inputStr.endsWith(ext)\n      )\n\n      if (!hasValidExtension) {\n        warnings.push('入口文件不是样式文件，建议使用 .css, .less, .scss 等扩展名')\n      }\n    }\n\n    // 检查输出配置\n    if (config.output?.format && !config.output.format.includes('css')) {\n      suggestions.push('样式库建议输出 CSS 格式')\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings,\n      suggestions\n    }\n  }\n\n  /**\n   * 构建输出配置\n   */\n  private buildOutputConfig(config: BuilderConfig): any {\n    const outputConfig = config.output || {}\n    const formats = Array.isArray(outputConfig.format)\n      ? outputConfig.format\n      : [outputConfig.format || 'esm']\n\n    return {\n      dir: outputConfig.dir || 'dist',\n      format: formats,\n      sourcemap: outputConfig.sourcemap !== false,\n      assetFileNames: '[name][extname]' // 确保 CSS 文件使用正确的名称\n    }\n  }\n\n  /**\n   * 构建插件配置\n   */\n  private buildPlugins(config: BuilderConfig): any[] {\n    const plugins: any[] = []\n\n    // PostCSS 插件（用于处理 CSS）\n    plugins.push({\n      name: 'postcss',\n      plugin: async () => {\n        const postcss = await import('rollup-plugin-postcss')\n        const postCSSPlugins = await this.getPostCSSPlugins(config)\n        return postcss.default({\n          extract: true,\n          minimize: config.performance?.minify !== false,\n          sourceMap: config.output?.sourcemap !== false,\n          plugins: postCSSPlugins\n        })\n      }\n    })\n\n    return plugins\n  }\n\n  /**\n   * 获取 PostCSS 插件\n   */\n  private async getPostCSSPlugins(config: BuilderConfig): Promise<any[]> {\n    const plugins: any[] = []\n\n    // Autoprefixer\n    if (config.style?.autoprefixer !== false) {\n      try {\n        const autoprefixer = await import('autoprefixer')\n        plugins.push(autoprefixer.default({\n          overrideBrowserslist: config.style?.browserslist || [\n            '> 1%',\n            'last 2 versions',\n            'not dead'\n          ]\n        }))\n      } catch (error) {\n        console.warn('Autoprefixer 未安装，跳过自动前缀功能')\n      }\n    }\n\n    return plugins\n  }\n\n  /**\n   * 获取 PostCSS 选项\n   */\n  private async getPostCSSOptions(config: BuilderConfig): Promise<any> {\n    return {\n      extract: config.style?.extract !== false,\n      minimize: config.style?.minimize !== false,\n      sourceMap: config.output?.sourcemap !== false,\n      modules: config.style?.modules || false,\n      plugins: await this.getPostCSSPlugins(config)\n    }\n  }\n\n  /**\n   * 获取 Less 选项\n   */\n  private getLessOptions(config: BuilderConfig): any {\n    const preprocessor = config.style?.preprocessor\n    const lessConfig = typeof preprocessor === 'object' ? preprocessor.less : undefined\n\n    return {\n      javascriptEnabled: lessConfig?.options?.javascriptEnabled !== false,\n      modifyVars: lessConfig?.options?.modifyVars || {},\n      ...lessConfig?.options\n    }\n  }\n\n  /**\n   * 获取 Sass 选项\n   */\n  private getSassOptions(config: BuilderConfig): any {\n    const preprocessor = config.style?.preprocessor\n    const sassConfig = typeof preprocessor === 'object' ? preprocessor.sass : undefined\n\n    return {\n      includePaths: ['node_modules'],\n      ...sassConfig?.options\n    }\n  }\n\n  /**\n   * 检查是否应该使用 Less\n   */\n  private shouldUseLess(config: BuilderConfig): boolean {\n    const preprocessor = config.style?.preprocessor\n\n    if (typeof preprocessor === 'object' && preprocessor.less?.enabled === false) {\n      return false\n    }\n\n    // 如果入口文件是 .less，自动启用\n    if (typeof config.input === 'string' && config.input.endsWith('.less')) {\n      return true\n    }\n\n    return typeof preprocessor === 'object' && preprocessor.less?.enabled === true\n  }\n\n  /**\n   * 检查是否应该使用 Sass\n   */\n  private shouldUseSass(config: BuilderConfig): boolean {\n    const preprocessor = config.style?.preprocessor\n\n    if (typeof preprocessor === 'object' && preprocessor.sass?.enabled === false) {\n      return false\n    }\n\n    // 如果入口文件是 .scss 或 .sass，自动启用\n    if (typeof config.input === 'string') {\n      if (config.input.endsWith('.scss') || config.input.endsWith('.sass')) {\n        return true\n      }\n    }\n\n    return typeof preprocessor === 'object' && preprocessor.sass?.enabled === true\n  }\n\n  /**\n   * 创建警告处理器\n   */\n  private createWarningHandler() {\n    return (warning: any) => {\n      // 忽略一些常见的无害警告\n      if (warning.code === 'EMPTY_BUNDLE') {\n        return\n      }\n\n      console.warn(`Warning: ${warning.message}`)\n    }\n  }\n\n  /**\n   * 解析入口配置\n   * - 若用户未传入 input，则将 src 下所有样式文件作为入口\n   * - 若用户传入 glob 模式的数组，则解析为多入口\n   * - 若用户传入单个文件或对象，则直接返回\n   */\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\n    // 如果没有提供input，自动扫描src目录\n    if (!config.input) {\n      return this.autoDiscoverEntries()\n    }\n\n    // 如果是字符串数组且包含glob模式，解析为多入口\n    if (Array.isArray(config.input)) {\n      return this.resolveGlobEntries(config.input)\n    }\n\n    // 其他情况直接返回用户配置\n    return config.input\n  }\n\n  /**\n   * 自动发现入口文件\n   */\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles([\n      'src/**/*.{css,less,scss,sass,styl}'\n    ], {\n      cwd: process.cwd(),\n      ignore: ['**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) return 'src/index.less'\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n\n  /**\n   * 解析glob模式的入口配置\n   */\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\n    const { findFiles } = await import('../../utils/file-system')\n    const { relative, extname } = await import('path')\n\n    const files = await findFiles(patterns, {\n      cwd: process.cwd(),\n      ignore: ['**/*.test.*', '**/*.spec.*', '**/__tests__/**']\n    })\n\n    if (files.length === 0) {\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\n    }\n\n    const entryMap: Record<string, string> = {}\n    for (const abs of files) {\n      const rel = relative(process.cwd(), abs)\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\n      const key = noExt.replace(/\\\\/g, '/')\n      entryMap[key] = abs\n    }\n    return entryMap\n  }\n}\n"]}