{"version":3,"file":"ReactStrategy.js","sourceRoot":"","sources":["../../../src/strategies/react/ReactStrategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * React 策略\r\n * 使用 esbuild 处理 TS/TSX，postcss 处理样式，rollup 输出 ESM/CJS\r\n */\r\n\r\nimport type { ILibraryStrategy } from '../../types/strategy'\r\nimport { LibraryType } from '../../types/library'\r\nimport type { BuilderConfig } from '../../types/config'\r\nimport type { UnifiedConfig } from '../../types/adapter'\r\nimport { shouldMinify } from '../../utils/minify-processor'\r\n\r\nexport class ReactStrategy implements ILibraryStrategy {\r\n  readonly name = 'react'\r\n  readonly supportedTypes = [LibraryType.REACT]\r\n  readonly priority = 10\r\n\r\n  async applyStrategy(config: BuilderConfig): Promise<UnifiedConfig> {\r\n    // 解析入口配置\r\n    const resolvedInput = await this.resolveInputEntries(config)\r\n\r\n    return {\r\n      input: resolvedInput,\r\n      output: this.buildOutputConfig(config),\r\n      plugins: await this.buildPlugins(config),\r\n      external: this.mergeExternal(config.external),\r\n      treeshake: config.performance?.treeshaking !== false,\r\n      onwarn: this.createWarningHandler()\r\n    }\r\n  }\r\n\r\n  isApplicable(config: BuilderConfig): boolean {\r\n    return config.libraryType === LibraryType.REACT\r\n  }\r\n\r\n  getDefaultConfig(): Partial<BuilderConfig> {\r\n    return {\r\n      libraryType: LibraryType.REACT,\r\n      output: { format: ['esm', 'cjs'], sourcemap: true },\r\n      performance: { treeshaking: true, minify: true }\r\n    }\r\n  }\r\n\r\n  getRecommendedPlugins(_config: BuilderConfig): any[] { return [] }\r\n  validateConfig(_config: BuilderConfig): any { return { valid: true, errors: [], warnings: [], suggestions: [] } }\r\n\r\n  private async buildPlugins(config: BuilderConfig): Promise<any[]> {\r\n    const plugins: any[] = []\r\n\r\n    // Node resolve\r\n    const nodeResolve = await import('@rollup/plugin-node-resolve')\r\n    plugins.push(nodeResolve.default({ browser: true, extensions: ['.mjs', '.js', '.json', '.ts', '.tsx'] }))\r\n\r\n    // CommonJS\r\n    const commonjs = await import('@rollup/plugin-commonjs')\r\n    plugins.push(commonjs.default())\r\n\r\n    // TypeScript for DTS only\r\n    const ts = await import('@rollup/plugin-typescript')\r\n    plugins.push({\r\n      name: 'typescript',\r\n      plugin: async () => ts.default({\r\n        tsconfig: 'tsconfig.json',\r\n        declaration: true,\r\n        emitDeclarationOnly: true,\r\n        // declarationDir 将由 RollupAdapter 动态设置\r\n        jsx: 'react-jsx'\r\n      } as any)\r\n    })\r\n\r\n    // PostCSS (optional)\r\n    if (config.style?.extract !== false) {\r\n      const postcss = await import('rollup-plugin-postcss')\r\n      plugins.push(postcss.default({ extract: true, minimize: config.style?.minimize !== false }))\r\n    }\r\n\r\n    // esbuild for TS/TSX/JSX\r\n    const esbuild = await import('rollup-plugin-esbuild')\r\n    plugins.push(esbuild.default({\r\n      include: /\\.(tsx?|jsx?)$/, exclude: [/node_modules/], target: 'es2020',\r\n      jsx: 'automatic', jsxImportSource: 'react', tsconfig: 'tsconfig.json',\r\n      sourceMap: config.output?.sourcemap !== false, minify: shouldMinify(config)\r\n    }))\r\n\r\n    return plugins\r\n  }\r\n\r\n  private buildOutputConfig(config: BuilderConfig): any {\r\n    const out = config.output || {}\r\n    const formats = Array.isArray(out.format) ? out.format : ['esm', 'cjs']\r\n    return { dir: out.dir || 'dist', format: formats, sourcemap: out.sourcemap !== false, exports: 'auto' }\r\n  }\r\n\r\n  private createWarningHandler() {\r\n    return (warning: any) => { if (warning.code === 'THIS_IS_UNDEFINED' || warning.code === 'CIRCULAR_DEPENDENCY') return; console.warn(`Warning: ${warning.message}`) }\r\n  }\r\n\r\n  /**\r\n   * 解析入口配置\r\n   * - 若用户未传入 input，则将 src 下所有源文件作为入口（排除测试与声明文件）\r\n   * - 若用户传入 glob 模式的数组，则解析为多入口\r\n   * - 若用户传入单个文件或对象，则直接返回\r\n   */\r\n  private async resolveInputEntries(config: BuilderConfig): Promise<string | string[] | Record<string, string>> {\r\n    // 如果没有提供input，自动扫描src目录\r\n    if (!config.input) {\r\n      return this.autoDiscoverEntries()\r\n    }\r\n\r\n    // 如果是字符串数组且包含glob模式，解析为多入口\r\n    if (Array.isArray(config.input)) {\r\n      return this.resolveGlobEntries(config.input)\r\n    }\r\n\r\n    // 其他情况直接返回用户配置\r\n    return config.input\r\n  }\r\n\r\n  /**\r\n   * 自动发现入口文件\r\n   */\r\n  private async autoDiscoverEntries(): Promise<string | Record<string, string>> {\r\n    const { findFiles } = await import('../../utils/file-system')\r\n    const { relative, extname } = await import('path')\r\n\r\n    const files = await findFiles([\r\n      'src/**/*.{ts,tsx,js,jsx,json}'\r\n    ], {\r\n      cwd: process.cwd(),\r\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\r\n    })\r\n\r\n    if (files.length === 0) return 'src/index.ts'\r\n\r\n    const entryMap: Record<string, string> = {}\r\n    for (const abs of files) {\r\n      const rel = relative(process.cwd(), abs)\r\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\r\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\r\n      const key = noExt.replace(/\\\\/g, '/')\r\n      entryMap[key] = abs\r\n    }\r\n    return entryMap\r\n  }\r\n\r\n  /**\r\n   * 解析glob模式的入口配置\r\n   */\r\n  private async resolveGlobEntries(patterns: string[]): Promise<Record<string, string>> {\r\n    const { findFiles } = await import('../../utils/file-system')\r\n    const { relative, extname } = await import('path')\r\n\r\n    const files = await findFiles(patterns, {\r\n      cwd: process.cwd(),\r\n      ignore: ['**/*.d.ts', '**/*.test.*', '**/*.spec.*', '**/__tests__/**']\r\n    })\r\n\r\n    if (files.length === 0) {\r\n      throw new Error(`No files found matching patterns: ${patterns.join(', ')}`)\r\n    }\r\n\r\n    const entryMap: Record<string, string> = {}\r\n    for (const abs of files) {\r\n      const rel = relative(process.cwd(), abs)\r\n      const relFromSrc = rel.replace(/^src[\\\\/]/, '')\r\n      const noExt = relFromSrc.slice(0, relFromSrc.length - extname(relFromSrc).length)\r\n      const key = noExt.replace(/\\\\/g, '/')\r\n      entryMap[key] = abs\r\n    }\r\n    return entryMap\r\n  }\r\n\r\n  /**\r\n   * 合并 external 配置，确保 React 相关依赖被标记为外部\r\n   */\r\n  private mergeExternal(external: any): any {\r\n    const reactPkgs = ['react', 'react-dom']\r\n\r\n    if (!external) return reactPkgs\r\n\r\n    if (Array.isArray(external)) {\r\n      return [...external, ...reactPkgs]\r\n    }\r\n\r\n    if (typeof external === 'function') {\r\n      return (id: string, ...args: any[]) => reactPkgs.includes(id) || external(id, ...args)\r\n    }\r\n\r\n    if (external instanceof RegExp) {\r\n      return (id: string) => reactPkgs.includes(id) || (external as RegExp).test(id)\r\n    }\r\n\r\n    if (typeof external === 'string') {\r\n      return [external, ...reactPkgs]\r\n    }\r\n\r\n    if (typeof external === 'object') {\r\n      return [...Object.keys(external), ...reactPkgs]\r\n    }\r\n\r\n    return reactPkgs\r\n  }\r\n}\r\n\r\n"]}