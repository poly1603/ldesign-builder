{"version":3,"file":"dependency-analyzer.test.js","sourceRoot":"","sources":["../../../src/__tests__/utils/dependency-analyzer.test.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAA;AACxE,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAA;AAEpE,OAAO,KAAK,EAAE,MAAM,kBAAkB,CAAA;AACtC,OAAO,KAAK,IAAI,MAAM,WAAW,CAAA;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAA;AAEhC,wBAAwB;AACxB,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;AAC3B,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;AAE5B,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,QAA4B,CAAA;IAChC,IAAI,OAAe,CAAA;IAEnB,UAAU,CAAC,GAAG,EAAE;QACd,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAA;QACnC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,wBAAwB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAA;QAEnE,kBAAkB;QAClB,EAAE,CAAC,aAAa,EAAE,CAAA;IACpB,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,EAAE,CAAC,aAAa,EAAE,CAAA;IACpB,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAA;QACrD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,oBAAoB;YACpB,MAAM,eAAe,GAAG;gBACtB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE;oBACZ,OAAO,EAAE,SAAS;oBAClB,QAAQ,EAAE,UAAU;iBACrB;gBACD,eAAe,EAAE;oBACf,YAAY,EAAE,QAAQ;oBACtB,QAAQ,EAAE,QAAQ;iBACnB;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;YAClE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAS,CAAC,CAAA;YAE9E,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;gBAChB,sBAAsB,EAAE,IAAI;gBAC5B,aAAa,EAAE,KAAK;gBACpB,iBAAiB,EAAE,KAAK;aACzB,CAAA;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAA;YAC5B,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA,CAAC,qBAAqB;YACjE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACzC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;YAClD,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAA;YAE9D,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;aACjB,CAAA;YAED,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAA;QAChF,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,eAAe,GAAG;gBACtB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE;oBACZ,oBAAoB,EAAE,QAAQ;iBAC/B;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;YAClE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAS,CAAC,CAAA;YAE9E,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;gBAChB,aAAa,EAAE,IAAI;aACpB,CAAA;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAA;YAC3C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACzD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACvD,MAAM,eAAe,GAAG;gBACtB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE;oBACZ,OAAO,EAAE,SAAS;iBACnB;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;YAClE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAS,CAAC,CAAA;YAE9E,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;gBAChB,iBAAiB,EAAE,IAAI;aACxB,CAAA;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,WAAW,EAAE,CAAA;YAC/C,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAA;QACxE,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,eAAe,GAAG;gBACtB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE;oBACZ,WAAW,EAAE,QAAQ;iBACtB;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;YAClE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAS,CAAC,CAAA;YAE9E,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,IAAI;aACrB,CAAA;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAA;YACjD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/D,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,eAAe,GAAG;gBACtB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE;oBACZ,cAAc,EAAE,QAAQ;oBACxB,gBAAgB,EAAE,QAAQ;iBAC3B;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAgB,EAAE,EAAE;gBACtD,IAAI,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;oBACtC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;gBACzD,CAAC;gBACD,IAAI,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;oBAClC,OAAO,OAAO,CAAC,OAAO,CAAC,0CAA0C,CAAC,CAAA;gBACpE,CAAC;gBACD,OAAO,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;YACzC,CAAC,CAAC,CAAA;YACF,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAS,CAAC,CAAA;YAE9E,4CAA4C;YAC5C,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,UAAU,CAAQ,CAAC,CAAA;YAEjE,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE,IAAI;aACjB,CAAA;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE9C,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,WAAW,EAAE,CAAA;YAC/C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC7D,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAA;YAEjE,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,eAAe;aACzB,CAAA;YAED,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;QAC3D,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC/C,0BAA0B;gBAC1B,YAAY,EAAE,OAAO;aACtB,CAAC,CAAC,CAAA;YAEH,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;aACjB,CAAA;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE9C,oDAAoD;YACpD,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;YAC3C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACtC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,eAAe,GAAG;gBACtB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,OAAO;gBAChB,YAAY,EAAE;oBACZ,OAAO,EAAE,SAAS;oBAClB,QAAQ,EAAE,UAAU;oBACpB,OAAO,EAAE,QAAQ;iBAClB;aACF,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAA;YAClE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAS,CAAC,CAAA;YAE9E,MAAM,OAAO,GAAoB;gBAC/B,OAAO,EAAE,OAAO;gBAChB,sBAAsB,EAAE,IAAI;gBAC5B,aAAa,EAAE,IAAI;gBACnB,iBAAiB,EAAE,IAAI;gBACvB,cAAc,EAAE,IAAI;gBACpB,UAAU,EAAE,IAAI;aACjB,CAAA;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YAC5B,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YAE1B,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAA;YAC5B,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA,CAAC,mCAAmC;QACpF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["/**\n * 依赖分析器测试\n */\n\nimport { describe, it, expect, vi, beforeEach, afterEach } from 'vitest'\nimport { DependencyAnalyzer } from '../../utils/dependency-analyzer'\nimport type { AnalysisOptions, DependencyAnalysisResult } from '../../utils/dependency-analyzer'\nimport * as fs from 'node:fs/promises'\nimport * as path from 'node:path'\nimport { tmpdir } from 'node:os'\n\n// Mock node:fs/promises\nvi.mock('node:fs/promises')\nconst mockFs = vi.mocked(fs)\n\ndescribe('DependencyAnalyzer', () => {\n  let analyzer: DependencyAnalyzer\n  let tempDir: string\n\n  beforeEach(() => {\n    analyzer = new DependencyAnalyzer()\n    tempDir = path.join(tmpdir(), `ldesign-builder-test-${Date.now()}`)\n    \n    // Reset all mocks\n    vi.clearAllMocks()\n  })\n\n  afterEach(() => {\n    vi.clearAllMocks()\n  })\n\n  describe('Constructor', () => {\n    it('should create instance successfully', () => {\n      expect(analyzer).toBeInstanceOf(DependencyAnalyzer)\n    })\n  })\n\n  describe('analyze', () => {\n    it('should analyze dependencies successfully', async () => {\n      // Mock package.json\n      const mockPackageJson = {\n        name: 'test-package',\n        version: '1.0.0',\n        dependencies: {\n          'react': '^18.0.0',\n          'lodash': '^4.17.21'\n        },\n        devDependencies: {\n          'typescript': '^5.0.0',\n          'vitest': '^1.0.0'\n        }\n      }\n\n      mockFs.readFile.mockResolvedValue(JSON.stringify(mockPackageJson))\n      mockFs.stat.mockResolvedValue({ isDirectory: () => false, size: 1024 } as any)\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir,\n        includeDevDependencies: true,\n        checkSecurity: false,\n        analyzeBundleSize: false\n      }\n\n      const result = await analyzer.analyze(options)\n\n      expect(result).toBeDefined()\n      expect(result.dependencies).toHaveLength(4) // 2 deps + 2 devDeps\n      expect(result.summary.total).toBe(4)\n      expect(result.summary.production).toBe(2)\n      expect(result.summary.development).toBe(2)\n    })\n\n    it('should handle missing package.json', async () => {\n      mockFs.readFile.mockRejectedValue(new Error('File not found'))\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir\n      }\n\n      await expect(analyzer.analyze(options)).rejects.toThrow('未找到 package.json 文件')\n    })\n\n    it('should analyze with security check enabled', async () => {\n      const mockPackageJson = {\n        name: 'test-package',\n        version: '1.0.0',\n        dependencies: {\n          'vulnerable-package': '^1.0.0'\n        }\n      }\n\n      mockFs.readFile.mockResolvedValue(JSON.stringify(mockPackageJson))\n      mockFs.stat.mockResolvedValue({ isDirectory: () => false, size: 1024 } as any)\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir,\n        checkSecurity: true\n      }\n\n      const result = await analyzer.analyze(options)\n\n      expect(result.securityIssues).toBeDefined()\n      expect(Array.isArray(result.securityIssues)).toBe(true)\n    })\n\n    it('should analyze bundle size when enabled', async () => {\n      const mockPackageJson = {\n        name: 'test-package',\n        version: '1.0.0',\n        dependencies: {\n          'react': '^18.0.0'\n        }\n      }\n\n      mockFs.readFile.mockResolvedValue(JSON.stringify(mockPackageJson))\n      mockFs.stat.mockResolvedValue({ isDirectory: () => false, size: 1024 } as any)\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir,\n        analyzeBundleSize: true\n      }\n\n      const result = await analyzer.analyze(options)\n\n      expect(result.bundleSizeAnalysis).toBeDefined()\n      expect(result.bundleSizeAnalysis?.totalSize).toBeGreaterThanOrEqual(0)\n    })\n\n    it('should detect circular dependencies', async () => {\n      const mockPackageJson = {\n        name: 'test-package',\n        version: '1.0.0',\n        dependencies: {\n          'package-a': '^1.0.0'\n        }\n      }\n\n      mockFs.readFile.mockResolvedValue(JSON.stringify(mockPackageJson))\n      mockFs.stat.mockResolvedValue({ isDirectory: () => false, size: 1024 } as any)\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir,\n        detectCircular: true\n      }\n\n      const result = await analyzer.analyze(options)\n\n      expect(result.circularDependencies).toBeDefined()\n      expect(Array.isArray(result.circularDependencies)).toBe(true)\n    })\n\n    it('should identify unused dependencies', async () => {\n      const mockPackageJson = {\n        name: 'test-package',\n        version: '1.0.0',\n        dependencies: {\n          'used-package': '^1.0.0',\n          'unused-package': '^1.0.0'\n        }\n      }\n\n      mockFs.readFile.mockImplementation((filePath: string) => {\n        if (filePath.includes('package.json')) {\n          return Promise.resolve(JSON.stringify(mockPackageJson))\n        }\n        if (filePath.includes('index.ts')) {\n          return Promise.resolve(\"import { something } from 'used-package'\")\n        }\n        return Promise.resolve(\"// No imports\")\n      })\n      mockFs.stat.mockResolvedValue({ isDirectory: () => false, size: 1024 } as any)\n\n      // Mock file system for source code analysis\n      mockFs.readdir.mockResolvedValue(['index.ts', 'utils.ts'] as any)\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir,\n        findUnused: true\n      }\n\n      const result = await analyzer.analyze(options)\n\n      expect(result.unusedDependencies).toBeDefined()\n      expect(Array.isArray(result.unusedDependencies)).toBe(true)\n    })\n  })\n\n  describe('Error Handling', () => {\n    it('should handle file system errors gracefully', async () => {\n      mockFs.readFile.mockRejectedValue(new Error('Permission denied'))\n\n      const options: AnalysisOptions = {\n        rootDir: '/invalid/path'\n      }\n\n      await expect(analyzer.analyze(options)).rejects.toThrow()\n    })\n\n    it('should handle invalid package.json format', async () => {\n      mockFs.readFile.mockResolvedValue(JSON.stringify({\n        // Missing required fields\n        invalidField: 'value'\n      }))\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir\n      }\n\n      const result = await analyzer.analyze(options)\n\n      // Should handle gracefully and return empty results\n      expect(result.dependencies).toHaveLength(0)\n      expect(result.summary.total).toBe(0)\n    })\n  })\n\n  describe('Performance', () => {\n    it('should complete analysis within reasonable time', async () => {\n      const mockPackageJson = {\n        name: 'test-package',\n        version: '1.0.0',\n        dependencies: {\n          'react': '^18.0.0',\n          'lodash': '^4.17.21',\n          'axios': '^1.0.0'\n        }\n      }\n\n      mockFs.readFile.mockResolvedValue(JSON.stringify(mockPackageJson))\n      mockFs.stat.mockResolvedValue({ isDirectory: () => false, size: 1024 } as any)\n\n      const options: AnalysisOptions = {\n        rootDir: tempDir,\n        includeDevDependencies: true,\n        checkSecurity: true,\n        analyzeBundleSize: true,\n        detectCircular: true,\n        findUnused: true\n      }\n\n      const startTime = Date.now()\n      const result = await analyzer.analyze(options)\n      const endTime = Date.now()\n\n      expect(result).toBeDefined()\n      expect(endTime - startTime).toBeLessThan(5000) // Should complete within 5 seconds\n    })\n  })\n})\n"]}