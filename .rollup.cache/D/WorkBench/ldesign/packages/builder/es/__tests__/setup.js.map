{"version":3,"file":"setup.js","sourceRoot":"","sources":["../../src/__tests__/setup.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 测试环境设置\n */\n\nimport { beforeAll, afterAll, beforeEach, afterEach } from 'vitest'\nimport { promises as fs } from 'fs'\nimport { join } from 'path'\nimport { tmpdir } from 'os'\n\n// 全局测试配置\nexport const TEST_CONFIG = {\n  timeout: 30000,\n  tempDirPrefix: 'ldesign-builder-test-',\n  mockBundlers: true,\n  enableCoverage: true\n}\n\n// 全局变量\ndeclare global {\n  var __TEST_TEMP_DIR__: string\n  var __TEST_CLEANUP_FUNCTIONS__: Array<() => Promise<void>>\n}\n\n// 全局设置\nbeforeAll(async () => {\n  // 初始化全局临时目录\n  global.__TEST_TEMP_DIR__ = await fs.mkdtemp(\n    join(tmpdir(), TEST_CONFIG.tempDirPrefix)\n  )\n  \n  // 初始化清理函数数组\n  global.__TEST_CLEANUP_FUNCTIONS__ = []\n  \n  console.log(`Test temp directory: ${global.__TEST_TEMP_DIR__}`)\n})\n\n// 全局清理\nafterAll(async () => {\n  // 执行所有清理函数\n  for (const cleanup of global.__TEST_CLEANUP_FUNCTIONS__) {\n    try {\n      await cleanup()\n    } catch (error) {\n      console.warn('Cleanup function failed:', error)\n    }\n  }\n  \n  // 清理全局临时目录\n  try {\n    await fs.rm(global.__TEST_TEMP_DIR__, { recursive: true, force: true })\n  } catch (error) {\n    console.warn('Failed to clean up temp directory:', error)\n  }\n})\n\n// 每个测试前的设置\nbeforeEach(() => {\n  // 重置模拟状态\n  if (TEST_CONFIG.mockBundlers) {\n    // 这里可以重置所有的 mock\n  }\n})\n\n// 每个测试后的清理\nafterEach(() => {\n  // 清理测试特定的资源\n})\n\n/**\n * 测试工具函数\n */\n\n/**\n * 创建临时测试目录\n */\nexport async function createTempDir(prefix = 'test-'): Promise<string> {\n  const tempDir = await fs.mkdtemp(join(global.__TEST_TEMP_DIR__, prefix))\n  \n  // 添加清理函数\n  global.__TEST_CLEANUP_FUNCTIONS__.push(async () => {\n    await fs.rm(tempDir, { recursive: true, force: true })\n  })\n  \n  return tempDir\n}\n\n/**\n * 创建测试项目结构\n */\nexport async function createTestProject(\n  dir: string,\n  type: 'typescript' | 'vue3' | 'style' = 'typescript'\n): Promise<void> {\n  await fs.mkdir(join(dir, 'src'), { recursive: true })\n  \n  switch (type) {\n    case 'typescript':\n      await fs.writeFile(\n        join(dir, 'src/index.ts'),\n        'export const hello = (name: string) => `Hello, ${name}!`'\n      )\n      await fs.writeFile(\n        join(dir, 'tsconfig.json'),\n        JSON.stringify({\n          compilerOptions: {\n            target: 'ES2020',\n            module: 'ESNext',\n            declaration: true,\n            outDir: 'dist'\n          },\n          include: ['src/**/*']\n        }, null, 2)\n      )\n      break\n      \n    case 'vue3':\n      await fs.writeFile(\n        join(dir, 'src/index.ts'),\n        `import { defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'TestComponent',\n  template: '<div>Hello Vue 3!</div>'\n})`\n      )\n      break\n      \n    case 'style':\n      await fs.writeFile(\n        join(dir, 'src/index.css'),\n        `.test { color: red; }`\n      )\n      break\n  }\n  \n  await fs.writeFile(\n    join(dir, 'package.json'),\n    JSON.stringify({\n      name: 'test-project',\n      version: '1.0.0',\n      main: 'dist/index.js',\n      types: 'dist/index.d.ts'\n    }, null, 2)\n  )\n}\n\n/**\n * 等待指定时间\n */\nexport function wait(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * 模拟构建器适配器\n */\nexport function createMockAdapter(name: 'rollup' | 'rolldown' = 'rollup') {\n  return {\n    name,\n    version: '4.0.0',\n    available: true,\n    build: async () => ({\n      success: true,\n      outputs: [\n        {\n          fileName: 'index.js',\n          size: 100,\n          source: 'export const hello = () => \"Hello!\"',\n          type: 'chunk' as const,\n          format: 'esm' as const\n        }\n      ],\n      duration: 1000,\n      stats: {\n        buildTime: 1000,\n        fileCount: 1,\n        totalSize: {\n          raw: 100,\n          gzip: 50,\n          brotli: 45,\n          byType: {},\n          byFormat: { esm: 100, cjs: 0, umd: 0, iife: 0 },\n          largest: { file: 'index.js', size: 100 },\n          fileCount: 1\n        },\n        byFormat: {\n          esm: {\n            fileCount: 1,\n            size: {\n              raw: 100,\n              gzip: 50,\n              brotli: 45,\n              byType: {},\n              byFormat: { esm: 100, cjs: 0, umd: 0, iife: 0 },\n              largest: { file: 'index.js', size: 100 },\n              fileCount: 1\n            }\n          },\n          cjs: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n          umd: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } },\n          iife: { fileCount: 0, size: { raw: 0, gzip: 0, brotli: 0, byType: {}, byFormat: { esm: 0, cjs: 0, umd: 0, iife: 0 }, largest: { file: '', size: 0 }, fileCount: 0 } }\n        },\n        modules: {\n          total: 1,\n          external: 0,\n          internal: 1,\n          largest: { \n            id: 'index.ts', \n            size: 100,\n            renderedLength: 100,\n            originalLength: 100,\n            isEntry: true,\n            isExternal: false,\n            importedIds: [],\n            dynamicallyImportedIds: [],\n            importers: [],\n            dynamicImporters: []\n          }\n        },\n        dependencies: {\n          total: 0,\n          external: [],\n          bundled: [],\n          circular: []\n        }\n      }\n    }),\n    watch: async () => ({\n      patterns: ['src/**/*'],\n      watching: true,\n      close: async () => {},\n      on: () => {},\n      off: () => {},\n      emit: () => false\n    }),\n    getPerformanceMetrics: async () => ({\n      buildTime: 1000,\n      bundleSize: 100,\n      memoryUsage: {\n        heapUsed: 1000000,\n        heapTotal: 2000000,\n        external: 100000,\n        arrayBuffers: 50000\n      },\n      cpuUsage: 50\n    }),\n    dispose: async () => {}\n  }\n}\n\n/**\n * 断言工具\n */\nexport const assertions = {\n  /**\n   * 断言文件存在\n   */\n  async fileExists(filePath: string): Promise<void> {\n    try {\n      await fs.access(filePath)\n    } catch {\n      throw new Error(`File does not exist: ${filePath}`)\n    }\n  },\n  \n  /**\n   * 断言目录存在\n   */\n  async directoryExists(dirPath: string): Promise<void> {\n    try {\n      const stat = await fs.stat(dirPath)\n      if (!stat.isDirectory()) {\n        throw new Error(`Path is not a directory: ${dirPath}`)\n      }\n    } catch {\n      throw new Error(`Directory does not exist: ${dirPath}`)\n    }\n  },\n  \n  /**\n   * 断言文件内容包含指定文本\n   */\n  async fileContains(filePath: string, content: string): Promise<void> {\n    const fileContent = await fs.readFile(filePath, 'utf-8')\n    if (!fileContent.includes(content)) {\n      throw new Error(`File ${filePath} does not contain: ${content}`)\n    }\n  }\n}\n"]}