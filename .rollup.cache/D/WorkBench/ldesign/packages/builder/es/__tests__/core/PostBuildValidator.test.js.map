{"version":3,"file":"PostBuildValidator.test.js","sourceRoot":"","sources":["../../../src/__tests__/core/PostBuildValidator.test.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAA;AAGxE,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAA;AAOlE,UAAU;AACV,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAA;AAChC,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAA;AACxC,EAAE,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAA;AAC1C,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;AAEnB,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,SAA6B,CAAA;IACjC,IAAI,UAAkB,CAAA;IACtB,IAAI,cAA0B,CAAA;IAC9B,IAAI,YAAgC,CAAA;IACpC,IAAI,mBAAyC,CAAA;IAE7C,MAAM,qBAAqB,GAAsB;QAC/C,YAAY,EAAE;YACZ,OAAO,EAAE,gBAAgB;YACzB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;YACrB,MAAM,EAAE;gBACN,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE;aACxB;YACD,WAAW,EAAE,eAAe;YAC5B,SAAS,EAAE,MAAM;YACjB,IAAI,EAAE,YAAY;YAClB,WAAW,EAAE,YAAY;YACzB,OAAO,EAAE,QAAQ;SAClB;QACD,WAAW,EAAE;YACX,OAAO,EAAE,IAAI;YACb,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,6BAA6B,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;gBAClE,EAAE,IAAI,EAAE,8BAA8B,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;aACpE;YACD,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;YACpC,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YAClD,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,gBAAgB;YACzB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;YACrB,OAAO,EAAE,QAAQ;YACjB,IAAI,EAAE,YAAY;SACnB;QACD,MAAM,EAAE;YACN,OAAO,EAAE,IAAI;YACb,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,CAAC,cAAc,CAAC;YAC7B,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,IAAI;SAClB;QACD,OAAO,EAAE,sBAAsB;QAC/B,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;QACrB,YAAY,EAAE,qBAAqB;QACnC,WAAW,EAAE,eAAe;QAC5B,SAAS,EAAE,MAAM;KAClB,CAAA;IAED,UAAU,CAAC,GAAG,EAAE;QACd,iBAAiB;QACjB,UAAU,GAAG;YACX,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YACb,OAAO,EAAE,EAAE,CAAC,EAAE,EAAE;YAChB,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YACb,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE;YACd,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE;SACR,CAAA;QAER,kBAAkB;QAClB,SAAS,GAAG,IAAI,kBAAkB,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAA;QAE9D,aAAa;QACb,cAAc,GAAI,SAAiB,CAAC,UAAU,CAAA;QAC9C,YAAY,GAAI,SAAiB,CAAC,QAAQ,CAAA;QAC1C,mBAAmB,GAAI,SAAiB,CAAC,eAAe,CAAA;IAC1D,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,EAAE,CAAC,aAAa,EAAE,CAAA;IACpB,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;YACpB,MAAM,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAA;YACpD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,0BAA0B,CAAC,CAAA;QAC1E,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAClB,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,EAAE,CAAA;YACpC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACjC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YACzC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACnB,MAAM,YAAY,GAA8B;gBAC9C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,KAAK;gBACd,aAAa,EAAE,MAAM;aACtB,CAAA;YAED,MAAM,eAAe,GAAG,IAAI,kBAAkB,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAA;YACpF,MAAM,MAAM,GAAG,eAAe,CAAC,SAAS,EAAE,CAAA;YAE1C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAClC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAClC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,eAAe;YACf,MAAM,cAAc,GAAG;gBACrB,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,EAAE;gBACd,WAAW,EAAE,EAAE;gBACf,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,kBAAkB;gBAC1B,MAAM,EAAE,EAAE;gBACV,WAAW,EAAE;oBACX,SAAS,EAAE,GAAG;oBACd,aAAa,EAAE,IAAI;oBACnB,YAAY,EAAE,GAAG;oBACjB,eAAe,EAAE,EAAE;oBACnB,QAAQ,EAAE,EAAE;iBACb;aACF,CAAA;YAED,cAAc;YACd,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAClE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAC5E,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAA;YACpE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAEnE,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;YAE9D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACjC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;YACjD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;YACrC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;YAEvC,SAAS;YACT,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;YAC9E,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;YACxF,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;YAC3E,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;QACjF,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;YAC3B,MAAM,cAAc,GAAG;gBACrB,OAAO,EAAE,KAAK;gBACd,UAAU,EAAE,EAAE;gBACd,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,gBAAgB;gBACxB,MAAM,EAAE;oBACN;wBACE,OAAO,EAAE,0CAA0C;wBACnD,IAAI,EAAE,WAAoB;wBAC1B,IAAI,EAAE,sBAAsB;wBAC5B,IAAI,EAAE,EAAE;qBACT;iBACF;gBACD,WAAW,EAAE;oBACX,SAAS,EAAE,GAAG;oBACd,aAAa,EAAE,IAAI;oBACnB,YAAY,EAAE,GAAG;oBACjB,eAAe,EAAE,EAAE;oBACnB,QAAQ,EAAE,EAAE;iBACb;aACF,CAAA;YAED,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAClE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAC5E,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAA;YACpE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAEnE,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;YAE9D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAClC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC7C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;QAClD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,cAAc,EAAE,KAAK,IAAI,EAAE;YAC5B,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAA;YACjC,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAA;YAE9D,MAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;YAEjF,UAAU;YACV,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;QACjF,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,MAAM,gBAAgB,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YAChC,MAAM,qBAAqB,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YACrC,MAAM,aAAa,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YAC7B,MAAM,YAAY,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YAC5B,MAAM,eAAe,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YAE/B,MAAM,eAAe,GAA8B;gBACjD,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE;oBACL,gBAAgB;oBAChB,qBAAqB;oBACrB,aAAa;oBACb,YAAY;oBACZ,eAAe;iBAChB;aACF,CAAA;YAED,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAA;YAEpC,MAAM,cAAc,GAAG;gBACrB,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,kBAAkB;gBAC1B,MAAM,EAAE,EAAE;gBACV,WAAW,EAAE;oBACX,SAAS,EAAE,EAAE;oBACb,aAAa,EAAE,GAAG;oBAClB,YAAY,EAAE,EAAE;oBAChB,eAAe,EAAE,EAAE;oBACnB,QAAQ,EAAE,EAAE;iBACb;aACF,CAAA;YAED,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAClE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAC5E,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAA;YACpE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAEnE,MAAM,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;YAE/C,MAAM,CAAC,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;YACpE,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;YACzE,MAAM,CAAC,aAAa,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;YACjE,MAAM,CAAC,YAAY,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAA;YAChF,MAAM,CAAC,eAAe,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;QACzF,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE;YAChB,MAAM,SAAS,GAA8B;gBAC3C,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,KAAK;gBACd,aAAa,EAAE,MAAM;aACtB,CAAA;YAED,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;YAC9B,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,EAAE,CAAA;YAEpC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAClC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAClC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YACzC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAA;QACzD,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;YACrB,MAAM,aAAa,GAAG,SAAS,CAAC,SAAS,EAAE,CAAA;YAC3C,MAAM,aAAa,GAA8B;gBAC/C,OAAO,EAAE,KAAK;aACf,CAAA;YAED,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAA;YAClC,MAAM,aAAa,GAAG,SAAS,CAAC,SAAS,EAAE,CAAA;YAE3C,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACzC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA,CAAC,OAAO;YACjE,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAA,CAAC,OAAO;QAC/E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;YACxB,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAC9D,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAEnE,MAAM,SAAS,CAAC,OAAO,EAAE,CAAA;YAEzB,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAA;YACjD,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAA;YACtD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,2BAA2B,CAAC,CAAA;QAC3E,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,QAAQ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YACxB,SAAS,CAAC,EAAE,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAA;YAE1C,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAClE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAC5E,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC;gBACnD,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,EAAE;gBACV,WAAW,EAAE;oBACX,SAAS,EAAE,EAAE;oBACb,aAAa,EAAE,EAAE;oBACjB,YAAY,EAAE,EAAE;oBAChB,eAAe,EAAE,EAAE;oBACnB,QAAQ,EAAE,CAAC;iBACZ;aACF,CAAC,CAAA;YACF,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAEnE,MAAM,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;YAE/C,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CACnC,MAAM,CAAC,gBAAgB,CAAC;gBACtB,OAAO,EAAE,qBAAqB;gBAC9B,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;gBAChC,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;aAC9B,CAAC,CACH,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,QAAQ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YACxB,SAAS,CAAC,EAAE,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAA;YAE7C,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAClE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAC5E,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC;gBACnD,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE,aAAa;gBACrB,MAAM,EAAE,EAAE;gBACV,WAAW,EAAE;oBACX,SAAS,EAAE,EAAE;oBACb,aAAa,EAAE,EAAE;oBACjB,YAAY,EAAE,EAAE;oBAChB,eAAe,EAAE,EAAE;oBACnB,QAAQ,EAAE,CAAC;iBACZ;aACF,CAAC,CAAA;YACF,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;YAEnE,MAAM,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;YAE/C,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CACnC,MAAM,CAAC,gBAAgB,CAAC;gBACtB,OAAO,EAAE,qBAAqB;gBAC9B,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;aAC3B,CAAC,CACH,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;YAC1B,MAAM,QAAQ,GAAG,EAAE,CAAC,EAAE,EAAE,CAAA;YACxB,SAAS,CAAC,EAAE,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAA;YAE1C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAA;YAC/B,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAA;YAE9D,MAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;YAEzE,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CACnC,MAAM,CAAC,gBAAgB,CAAC;gBACtB,OAAO,EAAE,qBAAqB;gBAC9B,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC;gBACxB,YAAY,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;aACjC,CAAC,CACH,CAAA;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["/**\n * PostBuildValidator 单元测试\n */\n\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest'\nimport * as fs from 'fs-extra'\nimport * as path from 'path'\nimport { PostBuildValidator } from '../../core/PostBuildValidator'\nimport { TestRunner } from '../../core/TestRunner'\nimport { ValidationReporter } from '../../core/ValidationReporter'\nimport { TemporaryEnvironment } from '../../core/TemporaryEnvironment'\nimport type { ValidationContext, PostBuildValidationConfig } from '../../types/validation'\nimport { Logger } from '../../utils/logger'\n\n// Mock 依赖\nvi.mock('../../core/TestRunner')\nvi.mock('../../core/ValidationReporter')\nvi.mock('../../core/TemporaryEnvironment')\nvi.mock('fs-extra')\n\ndescribe('PostBuildValidator', () => {\n  let validator: PostBuildValidator\n  let mockLogger: Logger\n  let mockTestRunner: TestRunner\n  let mockReporter: ValidationReporter\n  let mockTempEnvironment: TemporaryEnvironment\n\n  const mockValidationContext: ValidationContext = {\n    buildContext: {\n      buildId: 'test-build-123',\n      startTime: Date.now(),\n      config: {\n        input: 'src/index.ts',\n        output: { dir: 'dist' }\n      },\n      projectRoot: '/test/project',\n      outputDir: 'dist',\n      mode: 'production',\n      libraryType: 'typescript',\n      bundler: 'rollup'\n    },\n    buildResult: {\n      success: true,\n      outputs: [\n        { path: '/test/project/dist/index.js', format: 'esm', size: 1024 },\n        { path: '/test/project/dist/index.cjs', format: 'cjs', size: 1200 }\n      ],\n      duration: 5000,\n      stats: { totalSize: 2224, files: 2 },\n      performance: { buildTime: 5000, bundleTime: 4000 },\n      warnings: [],\n      errors: [],\n      buildId: 'test-build-123',\n      timestamp: Date.now(),\n      bundler: 'rollup',\n      mode: 'production'\n    },\n    config: {\n      enabled: true,\n      testFramework: 'vitest',\n      testPattern: ['**/*.test.ts'],\n      timeout: 30000,\n      failOnError: true\n    },\n    tempDir: '/tmp/validation-test',\n    startTime: Date.now(),\n    validationId: 'validation-test-123',\n    projectRoot: '/test/project',\n    outputDir: 'dist'\n  }\n\n  beforeEach(() => {\n    // 创建 mock logger\n    mockLogger = {\n      info: vi.fn(),\n      success: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn(),\n      debug: vi.fn()\n    } as any\n\n    // 创建 validator 实例\n    validator = new PostBuildValidator({}, { logger: mockLogger })\n\n    // 获取 mock 实例\n    mockTestRunner = (validator as any).testRunner\n    mockReporter = (validator as any).reporter\n    mockTempEnvironment = (validator as any).tempEnvironment\n  })\n\n  afterEach(() => {\n    vi.clearAllMocks()\n  })\n\n  describe('构造函数', () => {\n    it('应该正确初始化验证器', () => {\n      expect(validator).toBeInstanceOf(PostBuildValidator)\n      expect(mockLogger.info).toHaveBeenCalledWith('PostBuildValidator 初始化完成')\n    })\n\n    it('应该使用默认配置', () => {\n      const config = validator.getConfig()\n      expect(config.enabled).toBe(true)\n      expect(config.testFramework).toBe('auto')\n      expect(config.timeout).toBe(60000)\n    })\n\n    it('应该合并自定义配置', () => {\n      const customConfig: PostBuildValidationConfig = {\n        enabled: false,\n        timeout: 30000,\n        testFramework: 'jest'\n      }\n\n      const customValidator = new PostBuildValidator(customConfig, { logger: mockLogger })\n      const config = customValidator.getConfig()\n\n      expect(config.enabled).toBe(false)\n      expect(config.timeout).toBe(30000)\n      expect(config.testFramework).toBe('jest')\n    })\n  })\n\n  describe('validate', () => {\n    it('应该成功执行验证流程', async () => {\n      // Mock 成功的测试结果\n      const mockTestResult = {\n        success: true,\n        totalTests: 10,\n        passedTests: 10,\n        failedTests: 0,\n        skippedTests: 0,\n        duration: 2000,\n        output: 'All tests passed',\n        errors: [],\n        performance: {\n          setupTime: 100,\n          executionTime: 1800,\n          teardownTime: 100,\n          peakMemoryUsage: 50,\n          cpuUsage: 25\n        }\n      }\n\n      // 设置 mock 返回值\n      vi.mocked(mockTempEnvironment.create).mockResolvedValue(undefined)\n      vi.mocked(mockTempEnvironment.copyBuildOutputs).mockResolvedValue(undefined)\n      vi.mocked(mockTestRunner.runTests).mockResolvedValue(mockTestResult)\n      vi.mocked(mockTempEnvironment.cleanup).mockResolvedValue(undefined)\n\n      const result = await validator.validate(mockValidationContext)\n\n      expect(result.success).toBe(true)\n      expect(result.testResult).toEqual(mockTestResult)\n      expect(result.errors).toHaveLength(0)\n      expect(result.warnings).toHaveLength(0)\n\n      // 验证调用顺序\n      expect(mockTempEnvironment.create).toHaveBeenCalledWith(mockValidationContext)\n      expect(mockTempEnvironment.copyBuildOutputs).toHaveBeenCalledWith(mockValidationContext)\n      expect(mockTestRunner.runTests).toHaveBeenCalledWith(mockValidationContext)\n      expect(mockTempEnvironment.cleanup).toHaveBeenCalledWith(mockValidationContext)\n    })\n\n    it('应该处理测试失败的情况', async () => {\n      const mockTestResult = {\n        success: false,\n        totalTests: 10,\n        passedTests: 8,\n        failedTests: 2,\n        skippedTests: 0,\n        duration: 2000,\n        output: '2 tests failed',\n        errors: [\n          {\n            message: 'Test failed: expected true but got false',\n            type: 'assertion' as const,\n            file: 'test/example.test.ts',\n            line: 15\n          }\n        ],\n        performance: {\n          setupTime: 100,\n          executionTime: 1800,\n          teardownTime: 100,\n          peakMemoryUsage: 50,\n          cpuUsage: 25\n        }\n      }\n\n      vi.mocked(mockTempEnvironment.create).mockResolvedValue(undefined)\n      vi.mocked(mockTempEnvironment.copyBuildOutputs).mockResolvedValue(undefined)\n      vi.mocked(mockTestRunner.runTests).mockResolvedValue(mockTestResult)\n      vi.mocked(mockTempEnvironment.cleanup).mockResolvedValue(undefined)\n\n      const result = await validator.validate(mockValidationContext)\n\n      expect(result.success).toBe(false)\n      expect(result.testResult.failedTests).toBe(2)\n      expect(result.testResult.errors).toHaveLength(1)\n    })\n\n    it('应该处理验证过程中的错误', async () => {\n      const error = new Error('环境创建失败')\n      vi.mocked(mockTempEnvironment.create).mockRejectedValue(error)\n\n      await expect(validator.validate(mockValidationContext)).rejects.toThrow('验证过程失败')\n\n      // 确保清理被调用\n      expect(mockTempEnvironment.cleanup).toHaveBeenCalledWith(mockValidationContext)\n    })\n\n    it('应该执行验证钩子', async () => {\n      const beforeValidation = vi.fn()\n      const afterEnvironmentSetup = vi.fn()\n      const beforeTestRun = vi.fn()\n      const afterTestRun = vi.fn()\n      const afterValidation = vi.fn()\n\n      const configWithHooks: PostBuildValidationConfig = {\n        enabled: true,\n        hooks: {\n          beforeValidation,\n          afterEnvironmentSetup,\n          beforeTestRun,\n          afterTestRun,\n          afterValidation\n        }\n      }\n\n      validator.setConfig(configWithHooks)\n\n      const mockTestResult = {\n        success: true,\n        totalTests: 5,\n        passedTests: 5,\n        failedTests: 0,\n        skippedTests: 0,\n        duration: 1000,\n        output: 'All tests passed',\n        errors: [],\n        performance: {\n          setupTime: 50,\n          executionTime: 900,\n          teardownTime: 50,\n          peakMemoryUsage: 30,\n          cpuUsage: 20\n        }\n      }\n\n      vi.mocked(mockTempEnvironment.create).mockResolvedValue(undefined)\n      vi.mocked(mockTempEnvironment.copyBuildOutputs).mockResolvedValue(undefined)\n      vi.mocked(mockTestRunner.runTests).mockResolvedValue(mockTestResult)\n      vi.mocked(mockTempEnvironment.cleanup).mockResolvedValue(undefined)\n\n      await validator.validate(mockValidationContext)\n\n      expect(beforeValidation).toHaveBeenCalledWith(mockValidationContext)\n      expect(afterEnvironmentSetup).toHaveBeenCalledWith(mockValidationContext)\n      expect(beforeTestRun).toHaveBeenCalledWith(mockValidationContext)\n      expect(afterTestRun).toHaveBeenCalledWith(mockValidationContext, mockTestResult)\n      expect(afterValidation).toHaveBeenCalledWith(mockValidationContext, expect.any(Object))\n    })\n  })\n\n  describe('setConfig', () => {\n    it('应该更新配置', () => {\n      const newConfig: PostBuildValidationConfig = {\n        enabled: false,\n        timeout: 45000,\n        testFramework: 'jest'\n      }\n\n      validator.setConfig(newConfig)\n      const config = validator.getConfig()\n\n      expect(config.enabled).toBe(false)\n      expect(config.timeout).toBe(45000)\n      expect(config.testFramework).toBe('jest')\n      expect(mockLogger.info).toHaveBeenCalledWith('验证配置已更新')\n    })\n\n    it('应该合并配置而不是替换', () => {\n      const initialConfig = validator.getConfig()\n      const partialConfig: PostBuildValidationConfig = {\n        timeout: 45000\n      }\n\n      validator.setConfig(partialConfig)\n      const updatedConfig = validator.getConfig()\n\n      expect(updatedConfig.timeout).toBe(45000)\n      expect(updatedConfig.enabled).toBe(initialConfig.enabled) // 保持原值\n      expect(updatedConfig.testFramework).toBe(initialConfig.testFramework) // 保持原值\n    })\n  })\n\n  describe('dispose', () => {\n    it('应该清理所有资源', async () => {\n      vi.mocked(mockTestRunner.dispose).mockResolvedValue(undefined)\n      vi.mocked(mockTempEnvironment.dispose).mockResolvedValue(undefined)\n\n      await validator.dispose()\n\n      expect(mockTestRunner.dispose).toHaveBeenCalled()\n      expect(mockTempEnvironment.dispose).toHaveBeenCalled()\n      expect(mockLogger.info).toHaveBeenCalledWith('PostBuildValidator 资源清理完成')\n    })\n  })\n\n  describe('事件发射', () => {\n    it('应该发射验证开始事件', async () => {\n      const eventSpy = vi.fn()\n      validator.on('validation:start', eventSpy)\n\n      vi.mocked(mockTempEnvironment.create).mockResolvedValue(undefined)\n      vi.mocked(mockTempEnvironment.copyBuildOutputs).mockResolvedValue(undefined)\n      vi.mocked(mockTestRunner.runTests).mockResolvedValue({\n        success: true,\n        totalTests: 1,\n        passedTests: 1,\n        failedTests: 0,\n        skippedTests: 0,\n        duration: 100,\n        output: 'Test passed',\n        errors: [],\n        performance: {\n          setupTime: 10,\n          executionTime: 80,\n          teardownTime: 10,\n          peakMemoryUsage: 10,\n          cpuUsage: 5\n        }\n      })\n      vi.mocked(mockTempEnvironment.cleanup).mockResolvedValue(undefined)\n\n      await validator.validate(mockValidationContext)\n\n      expect(eventSpy).toHaveBeenCalledWith(\n        expect.objectContaining({\n          context: mockValidationContext,\n          validationId: expect.any(String),\n          startTime: expect.any(Number)\n        })\n      )\n    })\n\n    it('应该发射验证完成事件', async () => {\n      const eventSpy = vi.fn()\n      validator.on('validation:complete', eventSpy)\n\n      vi.mocked(mockTempEnvironment.create).mockResolvedValue(undefined)\n      vi.mocked(mockTempEnvironment.copyBuildOutputs).mockResolvedValue(undefined)\n      vi.mocked(mockTestRunner.runTests).mockResolvedValue({\n        success: true,\n        totalTests: 1,\n        passedTests: 1,\n        failedTests: 0,\n        skippedTests: 0,\n        duration: 100,\n        output: 'Test passed',\n        errors: [],\n        performance: {\n          setupTime: 10,\n          executionTime: 80,\n          teardownTime: 10,\n          peakMemoryUsage: 10,\n          cpuUsage: 5\n        }\n      })\n      vi.mocked(mockTempEnvironment.cleanup).mockResolvedValue(undefined)\n\n      await validator.validate(mockValidationContext)\n\n      expect(eventSpy).toHaveBeenCalledWith(\n        expect.objectContaining({\n          context: mockValidationContext,\n          result: expect.any(Object)\n        })\n      )\n    })\n\n    it('应该发射验证错误事件', async () => {\n      const eventSpy = vi.fn()\n      validator.on('validation:error', eventSpy)\n\n      const error = new Error('测试错误')\n      vi.mocked(mockTempEnvironment.create).mockRejectedValue(error)\n\n      await expect(validator.validate(mockValidationContext)).rejects.toThrow()\n\n      expect(eventSpy).toHaveBeenCalledWith(\n        expect.objectContaining({\n          context: mockValidationContext,\n          error: expect.any(Error),\n          validationId: expect.any(String)\n        })\n      )\n    })\n  })\n})\n"]}