{"version":3,"file":"examples.test.js","sourceRoot":"","sources":["../../../../src/__tests__/cli/commands/examples.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAA;AACxE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAA;AACrC,OAAO,EAAE,QAAQ,IAAI,EAAE,EAAE,MAAM,IAAI,CAAA;AAEnC,qBAAqB;AACrB,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9B,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE;CACf,CAAC,CAAC,CAAA;AAEH,UAAU;AACV,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;IACnB,QAAQ,EAAE;QACR,OAAO,EAAE,EAAE,CAAC,EAAE,EAAE;QAChB,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;QACb,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;KAChB;CACF,CAAC,CAAC,CAAA;AAEH,4BAA4B;AAC5B,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IACrB,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,OAAO,EAAE,EAAE,CAAC,EAAE,EAAE;CACjB,CAAC,CAAC,CAAA;AAEH,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACpB,aAAa,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,wBAAwB,CAAC;CACrD,CAAC,CAAC,CAAA;AAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,SAAc,CAAA;IAClB,IAAI,WAAgB,CAAA;IACpB,IAAI,QAAa,CAAA;IACjB,IAAI,UAAe,CAAA;IAEnB,UAAU,CAAC,GAAG,EAAE;QACd,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAC5B,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAA;QACnC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;QAC7B,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QAEjC,uBAAuB;QACvB,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;IACxD,CAAC,CAAC,CAAA;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,EAAE,CAAC,aAAa,EAAE,CAAA;QAClB,EAAE,CAAC,eAAe,EAAE,CAAA;IACtB,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,kBAAkB;QAClB,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAAA;QACrE,MAAM,mBAAmB,GAAI,cAAsB,CAAC,mBAAmB,CAAA;QAEvE,WAAW,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC,CAAA;QAExE,QAAQ;aACL,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;aAClD,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;aAClD,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAA;QAEtD,UAAU;aACP,qBAAqB,CAAC,SAAS,CAAC,CAAC,+BAA+B;aAChE,qBAAqB,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAC,gCAAgC;QAE9E,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,UAAU,CAAC,CAAA;QAEpD,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;YACrB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,mBAAmB,EAAE;SAChD,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAAA;QACrE,MAAM,mBAAmB,GAAI,cAAsB,CAAC,mBAAmB,CAAA;QAEvE,WAAW,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAA;QAEjC,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,UAAU,CAAC,CAAA;QACpD,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;IAC5B,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAAA;QACrE,MAAM,UAAU,GAAI,cAAsB,CAAC,UAAU,CAAA;QAErD,MAAM,SAAS,GAAG;YAChB,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;gBAC5B,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;oBACtB,SAAS;oBACT,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;gBACnC,CAAC;YACH,CAAC,CAAC;SACH,CAAA;QAED,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAA;QAEpC,MAAM,MAAM,CAAC,UAAU,CAAC,yBAAyB,EAAE,eAAe,CAAC,CAAC;aACjE,QAAQ,CAAC,aAAa,EAAE,CAAA;QAE3B,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CACpC,OAAO,CAAC,QAAQ,EAChB,CAAC,yBAAyB,EAAE,OAAO,CAAC,EACpC;YACE,GAAG,EAAE,eAAe;YACpB,KAAK,EAAE,SAAS;YAChB,GAAG,EAAE,OAAO,CAAC,GAAG;SACjB,CACF,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAAA;QACrE,MAAM,UAAU,GAAI,cAAsB,CAAC,UAAU,CAAA;QAErD,MAAM,SAAS,GAAG;YAChB,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;gBAC5B,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;oBACtB,SAAS;oBACT,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;gBACnC,CAAC;YACH,CAAC,CAAC;SACH,CAAA;QAED,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAA;QAEpC,MAAM,MAAM,CAAC,UAAU,CAAC,yBAAyB,EAAE,eAAe,CAAC,CAAC;aACjE,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAAA;QACrE,MAAM,UAAU,GAAI,cAAsB,CAAC,UAAU,CAAA;QAErD,MAAM,SAAS,GAAG;YAChB,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;gBAC5B,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;oBACtB,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;gBAC3D,CAAC;YACH,CAAC,CAAC;SACH,CAAA;QAED,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAA;QAEpC,MAAM,MAAM,CAAC,UAAU,CAAC,yBAAyB,EAAE,eAAe,CAAC,CAAC;aACjE,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { describe, it, expect, vi, beforeEach, afterEach } from 'vitest'\nimport { spawn } from 'child_process'\nimport { promises as fs } from 'fs'\n\n// Mock child_process\nvi.mock('child_process', () => ({\n  spawn: vi.fn(),\n}))\n\n// Mock fs\nvi.mock('fs', () => ({\n  promises: {\n    readdir: vi.fn(),\n    stat: vi.fn(),\n    access: vi.fn(),\n  }\n}))\n\n// Mock path and url for ESM\nvi.mock('path', () => ({\n  join: vi.fn((...args) => args.join('/')),\n  dirname: vi.fn(),\n}))\n\nvi.mock('url', () => ({\n  fileURLToPath: vi.fn(() => '/mock/path/examples.js'),\n}))\n\ndescribe('examples command', () => {\n  let mockSpawn: any\n  let mockReaddir: any\n  let mockStat: any\n  let mockAccess: any\n\n  beforeEach(() => {\n    mockSpawn = vi.mocked(spawn)\n    mockReaddir = vi.mocked(fs.readdir)\n    mockStat = vi.mocked(fs.stat)\n    mockAccess = vi.mocked(fs.access)\n\n    // Mock console methods\n    vi.spyOn(console, 'log').mockImplementation(() => { })\n  })\n\n  afterEach(() => {\n    vi.clearAllMocks()\n    vi.restoreAllMocks()\n  })\n\n  it('should find example projects with package.json', async () => {\n    // 动态导入命令模块并获取内部函数\n    const examplesModule = await import('../../../cli/commands/examples')\n    const findExampleProjects = (examplesModule as any).findExampleProjects\n\n    mockReaddir.mockResolvedValue(['project1', 'project2', 'not-a-project'])\n\n    mockStat\n      .mockResolvedValueOnce({ isDirectory: () => true })\n      .mockResolvedValueOnce({ isDirectory: () => true })\n      .mockResolvedValueOnce({ isDirectory: () => false })\n\n    mockAccess\n      .mockResolvedValueOnce(undefined) // project1/package.json exists\n      .mockRejectedValueOnce(new Error('ENOENT')) // project2/package.json missing\n\n    const result = await findExampleProjects('examples')\n\n    expect(result).toEqual([\n      { name: 'project1', path: 'examples/project1' }\n    ])\n  })\n\n  it('should handle empty examples directory', async () => {\n    const examplesModule = await import('../../../cli/commands/examples')\n    const findExampleProjects = (examplesModule as any).findExampleProjects\n\n    mockReaddir.mockResolvedValue([])\n\n    const result = await findExampleProjects('examples')\n    expect(result).toEqual([])\n  })\n\n  it('should run example build successfully', async () => {\n    const examplesModule = await import('../../../cli/commands/examples')\n    const runExample = (examplesModule as any).runExample\n\n    const mockChild = {\n      on: vi.fn((event, callback) => {\n        if (event === 'close') {\n          // 模拟成功退出\n          setTimeout(() => callback(0), 10)\n        }\n      })\n    }\n\n    mockSpawn.mockReturnValue(mockChild)\n\n    await expect(runExample('/bin/ldesign-builder.js', '/project/path'))\n      .resolves.toBeUndefined()\n\n    expect(mockSpawn).toHaveBeenCalledWith(\n      process.execPath,\n      ['/bin/ldesign-builder.js', 'build'],\n      {\n        cwd: '/project/path',\n        stdio: 'inherit',\n        env: process.env,\n      }\n    )\n  })\n\n  it('should handle build failure', async () => {\n    const examplesModule = await import('../../../cli/commands/examples')\n    const runExample = (examplesModule as any).runExample\n\n    const mockChild = {\n      on: vi.fn((event, callback) => {\n        if (event === 'close') {\n          // 模拟失败退出\n          setTimeout(() => callback(1), 10)\n        }\n      })\n    }\n\n    mockSpawn.mockReturnValue(mockChild)\n\n    await expect(runExample('/bin/ldesign-builder.js', '/project/path'))\n      .rejects.toThrow('构建失败（退出码 1）: /project/path')\n  })\n\n  it('should handle spawn error', async () => {\n    const examplesModule = await import('../../../cli/commands/examples')\n    const runExample = (examplesModule as any).runExample\n\n    const mockChild = {\n      on: vi.fn((event, callback) => {\n        if (event === 'error') {\n          setTimeout(() => callback(new Error('spawn failed')), 10)\n        }\n      })\n    }\n\n    mockSpawn.mockReturnValue(mockChild)\n\n    await expect(runExample('/bin/ldesign-builder.js', '/project/path'))\n      .rejects.toThrow('spawn failed')\n  })\n})\n"]}