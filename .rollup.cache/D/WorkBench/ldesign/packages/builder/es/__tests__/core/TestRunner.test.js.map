{"version":3,"file":"TestRunner.test.js","sourceRoot":"","sources":["../../../src/__tests__/core/TestRunner.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * TestRunner 单元测试\n */\n\nimport { describe, it, expect, beforeEach, afterEach, vi } from 'vitest'\nimport * as fs from 'fs-extra'\nimport * as path from 'path'\nimport { spawn } from 'child_process'\nimport { TestRunner } from '../../core/TestRunner'\nimport type { ValidationContext } from '../../types/validation'\nimport { Logger } from '../../utils/logger'\n\n// Mock 依赖\nvi.mock('fs-extra', () => ({\n  pathExists: vi.fn(),\n  readJson: vi.fn(),\n  writeJson: vi.fn(),\n  ensureDir: vi.fn(),\n  copy: vi.fn(),\n  remove: vi.fn()\n}))\nvi.mock('child_process', () => ({\n  spawn: vi.fn()\n}))\n\ndescribe('TestRunner', () => {\n  let testRunner: TestRunner\n  let mockLogger: Logger\n\n  const mockValidationContext: ValidationContext = {\n    buildContext: {\n      buildId: 'test-build-123',\n      startTime: Date.now(),\n      config: {\n        input: 'src/index.ts',\n        output: { dir: 'dist' }\n      },\n      projectRoot: '/test/project',\n      outputDir: 'dist',\n      mode: 'production',\n      libraryType: 'typescript',\n      bundler: 'rollup'\n    },\n    buildResult: {\n      success: true,\n      outputs: [],\n      duration: 5000,\n      stats: { totalSize: 2224, files: 2 },\n      performance: { buildTime: 5000, bundleTime: 4000 },\n      warnings: [],\n      errors: [],\n      buildId: 'test-build-123',\n      timestamp: Date.now(),\n      bundler: 'rollup',\n      mode: 'production'\n    },\n    config: {\n      enabled: true,\n      testFramework: 'vitest',\n      testPattern: ['**/*.test.ts'],\n      timeout: 30000\n    },\n    tempDir: '/tmp/validation-test',\n    startTime: Date.now(),\n    validationId: 'validation-test-123',\n    projectRoot: '/test/project',\n    outputDir: 'dist'\n  }\n\n  beforeEach(() => {\n    mockLogger = {\n      info: vi.fn(),\n      success: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn(),\n      debug: vi.fn()\n    } as any\n\n    testRunner = new TestRunner({ logger: mockLogger })\n  })\n\n  afterEach(() => {\n    vi.clearAllMocks()\n  })\n\n  describe('detectFramework', () => {\n    it('应该从 package.json 检测 vitest', async () => {\n      const mockPackageJson = {\n        devDependencies: {\n          vitest: '^0.34.0'\n        }\n      }\n\n      vi.mocked(fs.pathExists).mockResolvedValue(true)\n      vi.mocked(fs.readJson).mockResolvedValue(mockPackageJson)\n\n      const framework = await testRunner.detectFramework('/test/project')\n\n      expect(framework).toBe('vitest')\n      expect(fs.pathExists).toHaveBeenCalledWith(path.join('/test/project', 'package.json'))\n      expect(fs.readJson).toHaveBeenCalledWith(path.join('/test/project', 'package.json'))\n    })\n\n    it('应该从 package.json 检测 jest', async () => {\n      const mockPackageJson = {\n        devDependencies: {\n          jest: '^29.0.0'\n        }\n      }\n\n      vi.mocked(fs.pathExists).mockResolvedValue(true)\n      vi.mocked(fs.readJson).mockResolvedValue(mockPackageJson)\n\n      const framework = await testRunner.detectFramework('/test/project')\n\n      expect(framework).toBe('jest')\n    })\n\n    it('应该从配置文件检测框架', async () => {\n      vi.mocked(fs.pathExists)\n        .mockResolvedValueOnce(false) // package.json 不存在\n        .mockResolvedValueOnce(true)  // vitest.config.ts 存在\n\n      const framework = await testRunner.detectFramework('/test/project')\n\n      expect(framework).toBe('vitest')\n      expect(fs.pathExists).toHaveBeenCalledWith(path.join('/test/project', 'vitest.config.ts'))\n    })\n\n    it('应该返回默认框架 vitest', async () => {\n      vi.mocked(fs.pathExists).mockResolvedValue(false)\n      vi.mocked(fs.readJson).mockResolvedValue({})\n\n      const framework = await testRunner.detectFramework('/test/project')\n\n      expect(framework).toBe('vitest')\n      expect(mockLogger.warn).toHaveBeenCalledWith('未检测到测试框架，使用默认的 vitest')\n    })\n  })\n\n  describe('runTests', () => {\n    it('应该成功运行 vitest 测试', async () => {\n      const mockSpawn = {\n        stdout: {\n          on: vi.fn((event, callback) => {\n            if (event === 'data') {\n              callback(JSON.stringify({\n                success: true,\n                numTotalTests: 10,\n                numPassedTests: 10,\n                numFailedTests: 0,\n                numPendingTests: 0\n              }))\n            }\n          })\n        },\n        stderr: {\n          on: vi.fn()\n        },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(0) // 成功退出码\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n      vi.mocked(fs.pathExists)\n        .mockResolvedValueOnce(true)  // package.json 存在\n        .mockResolvedValueOnce(true)  // pnpm-lock.yaml 存在\n\n      vi.mocked(fs.readJson).mockResolvedValue({\n        devDependencies: { vitest: '^0.34.0' }\n      })\n\n      const result = await testRunner.runTests(mockValidationContext)\n\n      expect(result.success).toBe(true)\n      expect(result.totalTests).toBe(10)\n      expect(result.passedTests).toBe(10)\n      expect(result.failedTests).toBe(0)\n      expect(result.duration).toBeGreaterThanOrEqual(0)\n      expect(mockLogger.success).toHaveBeenCalledWith(\n        expect.stringContaining('测试运行完成: 10/10 通过')\n      )\n    })\n\n    it('应该处理测试失败', async () => {\n      const mockSpawn = {\n        stdout: {\n          on: vi.fn((event, callback) => {\n            if (event === 'data') {\n              callback(JSON.stringify({\n                success: false,\n                numTotalTests: 10,\n                numPassedTests: 8,\n                numFailedTests: 2,\n                numPendingTests: 0,\n                testResults: [{\n                  assertionResults: [{\n                    status: 'failed',\n                    failureMessages: ['Expected true but got false']\n                  }],\n                  name: 'test/example.test.ts'\n                }]\n              }))\n            }\n          })\n        },\n        stderr: {\n          on: vi.fn()\n        },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(0)\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n      vi.mocked(fs.pathExists)\n        .mockResolvedValueOnce(true)\n        .mockResolvedValueOnce(true)\n\n      vi.mocked(fs.readJson).mockResolvedValue({\n        devDependencies: { vitest: '^0.34.0' }\n      })\n\n      const result = await testRunner.runTests(mockValidationContext)\n\n      expect(result.success).toBe(false)\n      expect(result.totalTests).toBe(10)\n      expect(result.passedTests).toBe(8)\n      expect(result.failedTests).toBe(2)\n      expect(result.errors).toHaveLength(1)\n      expect(result.errors[0].message).toBe('Expected true but got false')\n    })\n\n    it('应该处理测试超时', async () => {\n      const mockSpawn = {\n        stdout: { on: vi.fn() },\n        stderr: { on: vi.fn() },\n        on: vi.fn(),\n        kill: vi.fn()\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n      vi.mocked(fs.pathExists).mockResolvedValue(true)\n      vi.mocked(fs.readJson).mockResolvedValue({\n        devDependencies: { vitest: '^0.34.0' }\n      })\n\n      // 模拟超时\n      const contextWithShortTimeout = {\n        ...mockValidationContext,\n        config: {\n          ...mockValidationContext.config,\n          timeout: 100 // 100ms 超时\n        }\n      }\n\n      const result = await testRunner.runTests(contextWithShortTimeout)\n\n      expect(result.success).toBe(false)\n      expect(result.errors).toHaveLength(1)\n      expect(result.errors[0].message).toContain('测试超时')\n    })\n\n    it('应该处理命令执行错误', async () => {\n      const mockSpawn = {\n        stdout: { on: vi.fn() },\n        stderr: {\n          on: vi.fn((event, callback) => {\n            if (event === 'data') {\n              callback('Command not found: vitest')\n            }\n          })\n        },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(1) // 错误退出码\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n      vi.mocked(fs.pathExists).mockResolvedValue(true)\n      vi.mocked(fs.readJson).mockResolvedValue({\n        devDependencies: { vitest: '^0.34.0' }\n      })\n\n      const result = await testRunner.runTests(mockValidationContext)\n\n      expect(result.success).toBe(false)\n      expect(result.errors).toHaveLength(1)\n      expect(result.errors[0].message).toContain('测试失败')\n    })\n  })\n\n  describe('installDependencies', () => {\n    it('应该使用 pnpm 安装依赖', async () => {\n      const mockSpawn = {\n        stdout: { on: vi.fn() },\n        stderr: { on: vi.fn() },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(0)\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n      vi.mocked(fs.pathExists)\n        .mockResolvedValueOnce(true) // pnpm-lock.yaml 存在\n\n      await testRunner.installDependencies(mockValidationContext)\n\n      expect(spawn).toHaveBeenCalledWith(\n        'pnpm',\n        ['install'],\n        expect.objectContaining({\n          cwd: mockValidationContext.tempDir,\n          stdio: 'pipe',\n          shell: true\n        })\n      )\n      expect(mockLogger.success).toHaveBeenCalledWith('依赖安装完成')\n    })\n\n    it('应该使用 yarn 安装依赖', async () => {\n      const mockSpawn = {\n        stdout: { on: vi.fn() },\n        stderr: { on: vi.fn() },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(0)\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n\n      // Mock pathExists 调用顺序：pnpm-lock.yaml, yarn.lock, package-lock.json\n      vi.mocked(fs.pathExists)\n        .mockImplementation(async (filePath: string) => {\n          if (filePath.includes('pnpm-lock.yaml')) return false\n          if (filePath.includes('yarn.lock')) return true\n          if (filePath.includes('package-lock.json')) return false\n          return false\n        })\n\n      await testRunner.installDependencies(mockValidationContext)\n\n      expect(spawn).toHaveBeenCalledWith(\n        'yarn',\n        ['install'],\n        expect.objectContaining({\n          cwd: mockValidationContext.tempDir\n        })\n      )\n    })\n\n    it('应该默认使用 npm 安装依赖', async () => {\n      const mockSpawn = {\n        stdout: { on: vi.fn() },\n        stderr: { on: vi.fn() },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(0)\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n\n      // Mock pathExists 调用：所有锁文件都不存在，默认使用npm\n      vi.mocked(fs.pathExists)\n        .mockImplementation(async (filePath: string) => {\n          if (filePath.includes('pnpm-lock.yaml')) return false\n          if (filePath.includes('yarn.lock')) return false\n          if (filePath.includes('package-lock.json')) return false\n          return false\n        })\n\n      await testRunner.installDependencies(mockValidationContext)\n\n      expect(spawn).toHaveBeenCalledWith(\n        'npm',\n        ['install'],\n        expect.objectContaining({\n          cwd: mockValidationContext.tempDir\n        })\n      )\n    })\n\n    it('应该处理依赖安装失败', async () => {\n      const mockSpawn = {\n        stdout: { on: vi.fn() },\n        stderr: {\n          on: vi.fn((event, callback) => {\n            if (event === 'data') {\n              callback('Installation failed')\n            }\n          })\n        },\n        on: vi.fn((event, callback) => {\n          if (event === 'close') {\n            callback(1) // 错误退出码\n          }\n        })\n      }\n\n      vi.mocked(spawn).mockReturnValue(mockSpawn as any)\n      vi.mocked(fs.pathExists).mockResolvedValue(false)\n\n      await expect(testRunner.installDependencies(mockValidationContext))\n        .rejects.toThrow('依赖安装失败')\n    })\n  })\n\n  describe('dispose', () => {\n    it('应该清理资源', async () => {\n      await testRunner.dispose()\n      expect(mockLogger.info).toHaveBeenCalledWith('TestRunner 资源清理完成')\n    })\n  })\n})\n"]}