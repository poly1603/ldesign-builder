{"version":3,"file":"transform-config.test.js","sourceRoot":"","sources":["../../../../src/__tests__/adapters/rollup/transform-config.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAA;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAA;AAEtE,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;IAC7C,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,OAAO,GAAG,IAAI,aAAa,CAAC,EAAE,CAAC,CAAA;QACrC,MAAM,GAAG,GAAQ;YACf,KAAK,EAAE,cAAc;YACrB,MAAM,EAAE;gBACN,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;gBAC7B,SAAS,EAAE,IAAI;aAChB;YACD,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;SACZ,CAAA;QAED,MAAM,SAAS,GAAQ,MAAM,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;QACzD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAElD,MAAM,KAAK,GAAwB,EAAE,CAAA;QACrC,KAAK,MAAM,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;YACjC,oBAAoB;YACpB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;YAClD,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QAChB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,CAAA;QAChC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAA;QACjC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,CAAA;QAElC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACrC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACvC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAExC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QACpD,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QACtD,+BAA+B;QAC/B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;QAEhD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC9C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/C,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,SAAS,EAAE,CAAA;IACnD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { describe, it, expect } from 'vitest'\nimport { RollupAdapter } from '../../../adapters/rollup/RollupAdapter'\n\ndescribe('RollupAdapter.transformConfig', () => {\n  it('should map formats to correct output directories and filenames', async () => {\n    const adapter = new RollupAdapter({})\n    const cfg: any = {\n      input: 'src/index.ts',\n      output: {\n        format: ['esm', 'cjs', 'umd'],\n        sourcemap: true,\n      },\n      external: [],\n      plugins: [],\n    }\n\n    const rollupCfg: any = await adapter.transformConfig(cfg)\n    expect(Array.isArray(rollupCfg.output)).toBe(true)\n\n    const byDir: Record<string, any> = {}\n    for (const o of rollupCfg.output) {\n      // UMD格式使用file而不是dir\n      const key = o.dir || (o.file ? 'dist' : 'unknown')\n      byDir[key] = o\n    }\n\n    expect(byDir['es']).toBeTruthy()\n    expect(byDir['lib']).toBeTruthy()\n    expect(byDir['dist']).toBeTruthy()\n\n    expect(byDir['es'].format).toBe('es')\n    expect(byDir['lib'].format).toBe('cjs')\n    expect(byDir['dist'].format).toBe('umd')\n\n    expect(byDir['es'].entryFileNames).toBe('[name].js')\n    expect(byDir['lib'].entryFileNames).toBe('[name].cjs')\n    // UMD格式使用file而不是entryFileNames\n    expect(byDir['dist'].file).toBe('dist/index.js')\n\n    expect(byDir['es'].preserveModules).toBe(true)\n    expect(byDir['lib'].preserveModules).toBe(true)\n    expect(byDir['dist'].preserveModules).toBeFalsy()\n  })\n})\n\n"]}