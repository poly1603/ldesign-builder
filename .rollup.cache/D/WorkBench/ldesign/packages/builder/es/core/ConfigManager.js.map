{"version":3,"file":"ConfigManager.js","sourceRoot":"","sources":["../../src/core/ConfigManager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 配置管理器\r\n * \r\n * 负责配置文件的加载、验证、合并和监听\r\n * \r\n * @author LDesign Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport { EventEmitter } from 'events'\r\nimport type {\r\n  BuilderConfig,\r\n  ConfigManagerOptions,\r\n  ConfigLoadOptions,\r\n  ConfigMergeOptions,\r\n  ConfigValidationOptions\r\n} from '../types/config'\r\nimport type { ValidationResult } from '../types/common'\r\nimport { configLoader } from '../utils/config/config-loader'\r\nimport { DEFAULT_BUILDER_CONFIG } from '../constants/defaults'\r\nimport { Logger } from '../utils/logger'\r\nimport { ErrorHandler, BuilderError } from '../utils/error-handler'\r\nimport { ErrorCode } from '../constants/errors'\r\nimport { LibraryType } from '../types/library'\r\nimport { createAutoConfigEnhancer } from '../utils/auto-config-enhancer'\r\n\r\n/**\r\n * 配置管理器类\r\n * \r\n * 提供配置文件的完整生命周期管理\r\n */\r\nexport class ConfigManager extends EventEmitter {\r\n  private logger: Logger\r\n  private errorHandler: ErrorHandler\r\n  private options: ConfigManagerOptions\r\n  private currentConfig?: BuilderConfig\r\n  private configWatcher?: () => void\r\n\r\n  constructor(options: ConfigManagerOptions = {}) {\r\n    super()\r\n\r\n    this.options = {\r\n      validateOnLoad: true,\r\n      freezeConfig: false,\r\n      ...options\r\n    }\r\n\r\n    this.logger = options.logger || new Logger()\r\n    this.errorHandler = new ErrorHandler({ logger: this.logger })\r\n  }\r\n\r\n  /**\r\n   * 加载配置文件\r\n   */\r\n  async loadConfig(options?: ConfigLoadOptions, userConfig?: Partial<BuilderConfig>): Promise<BuilderConfig> {\r\n    // 支持两种调用方式：loadConfig(options) 或 loadConfig(options, userConfig)\r\n    const loadOptions = options || {}\r\n    const providedConfig = userConfig || {}\r\n    try {\r\n      const configPath = loadOptions.configFile || await this.findConfigFile()\r\n\r\n      let config: Partial<BuilderConfig> = {}\r\n\r\n      // 如果提供了用户配置，直接使用\r\n      if (Object.keys(providedConfig).length > 0) {\r\n        config = providedConfig\r\n      } else if (configPath) {\r\n        this.logger.info(`加载配置文件: ${configPath}`)\r\n        config = await configLoader.loadConfigFile(configPath)\r\n      } else {\r\n        this.logger.info('未找到配置文件，使用默认配置')\r\n        config = {}\r\n      }\r\n\r\n      // 合并默认配置\r\n      let mergedConfig = this.mergeConfigs(DEFAULT_BUILDER_CONFIG, config as BuilderConfig)\r\n\r\n      // 处理环境变量替换\r\n      mergedConfig = this.resolveEnvironmentVariables(mergedConfig)\r\n\r\n      // 应用环境特定配置\r\n      if (loadOptions.applyEnvConfig && mergedConfig.env) {\r\n        const envConfig = this.getEnvConfig(mergedConfig)\r\n        if (envConfig) {\r\n          Object.assign(mergedConfig, envConfig)\r\n        }\r\n      }\r\n\r\n      // 自动增强配置\r\n      if (loadOptions.autoEnhance !== false) {\r\n        const enhancer = createAutoConfigEnhancer(process.cwd(), this.logger)\r\n        mergedConfig = await enhancer.enhanceConfig(mergedConfig)\r\n      }\r\n\r\n      // 验证配置\r\n      if (loadOptions.validate !== false && this.options.validateOnLoad) {\r\n        const validation = this.validateConfig(mergedConfig)\r\n        if (!validation.valid) {\r\n          throw new BuilderError(\r\n            ErrorCode.CONFIG_VALIDATION_ERROR,\r\n            `配置验证失败: ${validation.errors.join(', ')}`\r\n          )\r\n        }\r\n      }\r\n\r\n      // 冻结配置（如果启用）\r\n      if (this.options.freezeConfig) {\r\n        Object.freeze(mergedConfig)\r\n      }\r\n\r\n      this.currentConfig = mergedConfig\r\n\r\n      // 启动配置文件监听\r\n      if (this.options.watch && configPath) {\r\n        await this.startWatching(configPath)\r\n      }\r\n\r\n      this.emit('config:loaded', mergedConfig, configPath)\r\n\r\n      return mergedConfig\r\n\r\n    } catch (error) {\r\n      this.errorHandler.handle(error as Error, 'loadConfig')\r\n      throw error\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证配置\r\n   */\r\n  validateConfig(config: BuilderConfig, _options: ConfigValidationOptions = {}): ValidationResult {\r\n    const result: ValidationResult = {\r\n      valid: true,\r\n      errors: [],\r\n      warnings: []\r\n    }\r\n\r\n    try {\r\n      // 基础验证 - 检查是否有入口配置（顶层或在 output 中）\r\n      const hasTopLevelInput = !!config.input\r\n\r\n      // 检查各格式的 input 配置\r\n      const esmHasInput = config.output?.esm && typeof config.output.esm === 'object' && 'input' in config.output.esm\r\n      const cjsHasInput = config.output?.cjs && typeof config.output.cjs === 'object' && 'input' in config.output.cjs\r\n      const umdHasInput = config.output?.umd && typeof config.output.umd === 'object' && 'input' in config.output.umd\r\n      const hasOutputInput = esmHasInput || cjsHasInput || umdHasInput\r\n\r\n      if (!hasTopLevelInput && !hasOutputInput) {\r\n        // 如果没有显式的 input 配置，但有启用的输出格式，也可以使用默认值\r\n        const hasEnabledFormat = (config.output?.esm === true || (config.output?.esm && typeof config.output.esm === 'object')) ||\r\n          (config.output?.cjs === true || (config.output?.cjs && typeof config.output.cjs === 'object')) ||\r\n          (config.output?.umd === true || (config.output?.umd && typeof config.output.umd === 'object'))\r\n\r\n        if (!hasEnabledFormat) {\r\n          result.errors.push('缺少入口文件配置（需要在顶层或 output 中指定 input）')\r\n        }\r\n      }\r\n\r\n      // 检查空的input\r\n      if (config.input === '') {\r\n        result.errors.push('input 不能为空字符串')\r\n      }\r\n\r\n      // 验证 libraryType\r\n      if (config.libraryType) {\r\n        const validLibraryTypes = Object.values(LibraryType)\r\n        if (!validLibraryTypes.includes(config.libraryType as LibraryType)) {\r\n          result.errors.push(`无效的 libraryType: ${config.libraryType}`)\r\n        }\r\n      }\r\n\r\n      // 输出配置验证\r\n      if (config.output) {\r\n        if (!config.output.dir && !config.output.file) {\r\n          result.errors.push('输出配置必须指定 dir 或 file')\r\n        }\r\n      }\r\n\r\n      // 打包器验证\r\n      if (config.bundler && !['rollup', 'rolldown'].includes(config.bundler)) {\r\n        result.errors.push(`不支持的打包器: ${config.bundler}`)\r\n      }\r\n\r\n      // 格式验证\r\n      if (config.output?.format) {\r\n        const formats = Array.isArray(config.output.format)\r\n          ? config.output.format\r\n          : [config.output.format]\r\n\r\n        const validFormats = ['esm', 'cjs', 'umd', 'iife', 'css']\r\n        for (const format of formats) {\r\n          if (!validFormats.includes(format)) {\r\n            result.errors.push(`不支持的输出格式: ${format}`)\r\n          }\r\n        }\r\n      }\r\n\r\n      // 设置验证结果\r\n      result.valid = result.errors.length === 0\r\n\r\n    } catch (error) {\r\n      result.valid = false\r\n      result.errors.push(`配置验证异常: ${(error as Error).message}`)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * 合并配置\r\n   */\r\n  mergeConfigs(base: BuilderConfig, override: BuilderConfig, options: ConfigMergeOptions = {}): BuilderConfig {\r\n    const { deep = true, arrayMergeStrategy = 'replace' } = options\r\n\r\n    if (!deep) {\r\n      return { ...base, ...override }\r\n    }\r\n\r\n    const result = { ...base }\r\n\r\n    for (const [key, value] of Object.entries(override)) {\r\n      if (value === undefined) {\r\n        continue\r\n      }\r\n\r\n      if (!(key in result)) {\r\n        (result as any)[key] = value\r\n        continue\r\n      }\r\n\r\n      const baseValue = (result as any)[key]\r\n\r\n      if (Array.isArray(value) && Array.isArray(baseValue)) {\r\n        switch (arrayMergeStrategy) {\r\n          case 'concat':\r\n            (result as any)[key] = [...baseValue, ...value]\r\n            break\r\n          case 'unique':\r\n            (result as any)[key] = [...new Set([...baseValue, ...value])]\r\n            break\r\n          case 'replace':\r\n          default:\r\n            (result as any)[key] = value\r\n            break\r\n        }\r\n      } else if (\r\n        typeof value === 'object' &&\r\n        value !== null &&\r\n        typeof baseValue === 'object' &&\r\n        baseValue !== null\r\n      ) {\r\n        (result as any)[key] = this.mergeConfigs(baseValue, value, options)\r\n      } else {\r\n        (result as any)[key] = value\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * 获取当前配置\r\n   */\r\n  getCurrentConfig(): BuilderConfig | undefined {\r\n    return this.currentConfig\r\n  }\r\n\r\n  /**\r\n   * 查找配置文件\r\n   */\r\n  private async findConfigFile(): Promise<string | null> {\r\n    return configLoader.findConfigFile()\r\n  }\r\n\r\n  /**\r\n   * 标准化配置\r\n   */\r\n  normalizeConfig(config: Partial<BuilderConfig>): BuilderConfig {\r\n    let normalized = { ...config } as BuilderConfig\r\n\r\n    // 标准化输出配置\r\n    if (normalized.output) {\r\n      // 如果output是字符串，转换为对象\r\n      if (typeof normalized.output === 'string') {\r\n        normalized.output = {\r\n          file: normalized.output\r\n        } as any\r\n      }\r\n\r\n      // 确保输出配置有 file 属性\r\n      if (typeof normalized.output === 'object' && !normalized.output.file && normalized.output.dir) {\r\n        normalized.output.file = `${normalized.output.dir}/index.js`\r\n      }\r\n    }\r\n\r\n    // 标准化插件配置\r\n    if (normalized.plugins && !Array.isArray(normalized.plugins)) {\r\n      normalized.plugins = []\r\n    }\r\n\r\n    // 处理环境变量替换\r\n    normalized = this.resolveEnvironmentVariables(normalized)\r\n\r\n    return normalized\r\n  }\r\n\r\n  /**\r\n   * 解析环境变量\r\n   */\r\n  private resolveEnvironmentVariables(config: BuilderConfig): BuilderConfig {\r\n    const resolved = JSON.parse(JSON.stringify(config))\r\n\r\n    const replaceEnvVars = (obj: any): any => {\r\n      if (typeof obj === 'string') {\r\n        return obj.replace(/\\$\\{([^}]+)\\}/g, (match, varName) => {\r\n          return process.env[varName] || match\r\n        })\r\n      }\r\n\r\n      if (Array.isArray(obj)) {\r\n        return obj.map(replaceEnvVars)\r\n      }\r\n\r\n      if (obj && typeof obj === 'object') {\r\n        const result: any = {}\r\n        for (const [key, value] of Object.entries(obj)) {\r\n          result[key] = replaceEnvVars(value)\r\n        }\r\n        return result\r\n      }\r\n\r\n      return obj\r\n    }\r\n\r\n    return replaceEnvVars(resolved)\r\n  }\r\n\r\n  /**\r\n   * 获取环境特定配置\r\n   */\r\n  private getEnvConfig(config: BuilderConfig): Partial<BuilderConfig> | undefined {\r\n    const env = process.env.NODE_ENV || config.mode || 'production'\r\n    return config.env?.[env]\r\n  }\r\n\r\n  /**\r\n   * 启动配置文件监听\r\n   */\r\n  private async startWatching(configPath: string): Promise<void> {\r\n    if (this.configWatcher) {\r\n      this.configWatcher()\r\n    }\r\n\r\n    this.configWatcher = await configLoader.watchConfigFile(configPath, (newConfig) => {\r\n      this.logger.info('配置文件已更改，重新加载...')\r\n\r\n      try {\r\n        const mergedConfig = this.mergeConfigs(DEFAULT_BUILDER_CONFIG, newConfig)\r\n        this.currentConfig = mergedConfig\r\n\r\n        this.emit('config:change', mergedConfig, configPath)\r\n        this.logger.success('配置重新加载完成')\r\n      } catch (error) {\r\n        this.logger.error('配置重新加载失败:', error)\r\n        this.emit('config:error', error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 停止监听\r\n   */\r\n  async dispose(): Promise<void> {\r\n    if (this.configWatcher) {\r\n      this.configWatcher()\r\n      this.configWatcher = undefined\r\n    }\r\n\r\n    this.removeAllListeners()\r\n  }\r\n}\r\n"]}