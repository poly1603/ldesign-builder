{"version":3,"file":"ConfigValidator.js","sourceRoot":"","sources":["../../src/core/ConfigValidator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 配置验证器\r\n * \r\n * 验证和规范化构建配置\r\n * \r\n * @author LDesign Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport type { BuilderConfig } from '../types/config'\r\nimport type { MinifyOptions } from '../types/minify'\r\nimport { Logger } from '../utils/logger'\r\n\r\nexport interface ValidationResult {\r\n  /** 是否有效 */\r\n  valid: boolean\r\n  /** 错误信息 */\r\n  errors: string[]\r\n  /** 警告信息 */\r\n  warnings: string[]\r\n  /** 规范化后的配置 */\r\n  normalizedConfig?: BuilderConfig\r\n}\r\n\r\nexport interface ConfigValidationOptions {\r\n  /** 是否严格模式 */\r\n  strict?: boolean\r\n  /** 是否检查文件存在性 */\r\n  checkFiles?: boolean\r\n  /** 工作目录 */\r\n  cwd?: string\r\n}\r\n\r\nexport class ConfigValidator {\r\n  private logger: Logger\r\n  private options: ConfigValidationOptions\r\n\r\n  constructor(options: ConfigValidationOptions = {}, logger?: Logger) {\r\n    this.options = {\r\n      strict: false,\r\n      checkFiles: true,\r\n      cwd: process.cwd(),\r\n      ...options\r\n    }\r\n    this.logger = logger || new Logger()\r\n  }\r\n\r\n  /**\r\n   * 验证配置\r\n   */\r\n  validate(config: Partial<BuilderConfig>): ValidationResult {\r\n    const errors: string[] = []\r\n    const warnings: string[] = []\r\n\r\n    // 使用 logger 以避免未使用成员告警\r\n    this.logger.debug('Validating config...')\r\n\r\n    try {\r\n      // 基础验证\r\n      this.validateBasicConfig(config, errors, warnings)\r\n      \r\n      // 输入验证\r\n      this.validateInput(config, errors, warnings)\r\n      \r\n      // 输出验证\r\n      this.validateOutput(config, errors, warnings)\r\n      \r\n      // 打包器验证\r\n      this.validateBundler(config, errors, warnings)\r\n      \r\n      // 压缩配置验证\r\n      this.validateMinifyConfig(config, errors, warnings)\r\n      \r\n      // 外部依赖验证\r\n      this.validateExternal(config, errors, warnings)\r\n      \r\n      // 插件验证\r\n      this.validatePlugins(config, errors, warnings)\r\n      \r\n      // 性能配置验证\r\n      this.validatePerformance(config, errors, warnings)\r\n      \r\n      // 文件存在性验证\r\n      if (this.options.checkFiles) {\r\n        this.validateFileExistence(config, errors, warnings)\r\n      }\r\n\r\n      // 规范化配置\r\n      const normalizedConfig = this.normalizeConfig(config)\r\n\r\n      return {\r\n        valid: errors.length === 0,\r\n        errors,\r\n        warnings,\r\n        normalizedConfig\r\n      }\r\n    } catch (error) {\r\n      errors.push(`配置验证过程中发生错误: ${(error as Error).message}`)\r\n      return {\r\n        valid: false,\r\n        errors,\r\n        warnings\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证基础配置\r\n   */\r\n  private validateBasicConfig(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.input) {\r\n      errors.push('缺少必需的 input 配置')\r\n    }\r\n\r\n    if (config.logLevel && !['silent', 'error', 'warn', 'info', 'debug'].includes(config.logLevel)) {\r\n      errors.push(`无效的日志级别: ${config.logLevel}`)\r\n    }\r\n\r\n    if (config.mode && !['development', 'production'].includes(config.mode)) {\r\n      errors.push(`无效的构建模式: ${config.mode}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证输入配置\r\n   */\r\n  private validateInput(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.input) return\r\n\r\n    const input = config.input\r\n\r\n    if (typeof input === 'string') {\r\n      // 单入口验证\r\n      if (!input.trim()) {\r\n        errors.push('入口文件路径不能为空')\r\n      }\r\n    } else if (Array.isArray(input)) {\r\n      // 多入口数组验证\r\n      if (input.length === 0) {\r\n        errors.push('入口文件数组不能为空')\r\n      }\r\n      input.forEach((entry, index) => {\r\n        if (typeof entry !== 'string' || !entry.trim()) {\r\n          errors.push(`入口文件数组第 ${index + 1} 项无效`)\r\n        }\r\n      })\r\n    } else if (typeof input === 'object') {\r\n      // 多入口对象验证\r\n      const entries = Object.entries(input)\r\n      if (entries.length === 0) {\r\n        errors.push('入口文件对象不能为空')\r\n      }\r\n      entries.forEach(([key, value]) => {\r\n        if (!key.trim()) {\r\n          errors.push('入口文件对象的键不能为空')\r\n        }\r\n        if (typeof value !== 'string' || !value.trim()) {\r\n          errors.push(`入口文件对象的值 \"${key}\" 无效`)\r\n        }\r\n      })\r\n    } else {\r\n      errors.push('input 配置必须是字符串、数组或对象')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证输出配置\r\n   */\r\n  private validateOutput(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.output) return\r\n\r\n    const output = config.output\r\n\r\n    if (output.dir && typeof output.dir !== 'string') {\r\n      errors.push('output.dir 必须是字符串')\r\n    }\r\n\r\n    if (output.format) {\r\n      const validFormats = ['esm', 'cjs', 'umd', 'iife']\r\n      const formats = Array.isArray(output.format) ? output.format : [output.format]\r\n      \r\n      formats.forEach(format => {\r\n        if (!validFormats.includes(format)) {\r\n          errors.push(`无效的输出格式: ${format}`)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (output.name && typeof output.name !== 'string') {\r\n      errors.push('output.name 必须是字符串')\r\n    }\r\n\r\n    if (output.sourcemap !== undefined && typeof output.sourcemap !== 'boolean') {\r\n      errors.push('output.sourcemap 必须是布尔值')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证打包器配置\r\n   */\r\n  private validateBundler(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (config.bundler && !['rollup', 'rolldown', 'auto'].includes(config.bundler)) {\r\n      errors.push(`无效的打包器: ${config.bundler}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证压缩配置\r\n   */\r\n  private validateMinifyConfig(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.minify) return\r\n\r\n    if (typeof config.minify === 'boolean') {\r\n      return // 布尔值是有效的\r\n    }\r\n\r\n    if (typeof config.minify === 'object') {\r\n      const minifyConfig = config.minify as MinifyOptions\r\n      \r\n      if (minifyConfig.level && !['none', 'whitespace', 'basic', 'advanced'].includes(minifyConfig.level)) {\r\n        errors.push(`无效的压缩级别: ${minifyConfig.level}`)\r\n      }\r\n\r\n      // 验证 JS 压缩配置\r\n      if (minifyConfig.js && typeof minifyConfig.js === 'object') {\r\n        const jsConfig = minifyConfig.js\r\n        if (jsConfig.minifier && !['terser', 'esbuild', 'swc'].includes(jsConfig.minifier)) {\r\n          errors.push(`无效的 JS 压缩器: ${jsConfig.minifier}`)\r\n        }\r\n      }\r\n\r\n      // 验证 CSS 压缩配置\r\n      if (minifyConfig.css && typeof minifyConfig.css === 'object') {\r\n        const cssConfig = minifyConfig.css\r\n        if (cssConfig.minifier && !['cssnano', 'clean-css', 'lightningcss'].includes(cssConfig.minifier)) {\r\n          errors.push(`无效的 CSS 压缩器: ${cssConfig.minifier}`)\r\n        }\r\n      }\r\n    } else {\r\n      errors.push('minify 配置必须是布尔值或对象')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证外部依赖配置\r\n   */\r\n  private validateExternal(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.external) return\r\n\r\n    // 允许函数或字符串数组两种形式\r\n    if (typeof config.external === 'function') {\r\n      return\r\n    }\r\n\r\n    if (Array.isArray(config.external)) {\r\n      config.external.forEach((dep, index) => {\r\n        if (typeof dep !== 'string') {\r\n          errors.push(`external 鏁扮粍绗?${index + 1} 椤瑰繀椤绘槸瀛楃涓?`)\r\n        }\r\n      })\r\n      return\r\n    }\r\n\r\n    errors.push('external 閰嶇疆蹇呴』鏄暟缁勬垨鍑芥暟')\r\n  }\r\n\r\n  /**\r\n   * 验证插件配置\r\n   */\r\n  private validatePlugins(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.plugins) return\r\n\r\n    if (!Array.isArray(config.plugins)) {\r\n      errors.push('plugins 配置必须是数组')\r\n      return\r\n    }\r\n\r\n    config.plugins.forEach((plugin, index) => {\r\n      if (typeof plugin !== 'object' || plugin === null) {\r\n        errors.push(`plugins 数组第 ${index + 1} 项必须是对象`)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 验证性能配置\r\n   */\r\n  private validatePerformance(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.performance) return\r\n\r\n    const perf = config.performance\r\n\r\n    if (perf.treeshaking !== undefined && typeof perf.treeshaking !== 'boolean') {\r\n      errors.push('performance.treeshaking 必须是布尔值')\r\n    }\r\n\r\n    if (perf.bundleAnalyzer !== undefined && typeof perf.bundleAnalyzer !== 'boolean') {\r\n      errors.push('performance.bundleAnalyzer 必须是布尔值')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证文件存在性\r\n   */\r\n  private validateFileExistence(config: Partial<BuilderConfig>, errors: string[], _warnings: string[]): void {\r\n    if (!config.input) return\r\n\r\n    const checkFile = (filePath: string) => {\r\n      const fullPath = path.resolve(this.options.cwd!, filePath)\r\n      if (!fs.existsSync(fullPath)) {\r\n        errors.push(`入口文件不存在: ${filePath}`)\r\n      }\r\n    }\r\n\r\n    if (typeof config.input === 'string') {\r\n      checkFile(config.input)\r\n    } else if (Array.isArray(config.input)) {\r\n      config.input.forEach(checkFile)\r\n    } else if (typeof config.input === 'object') {\r\n      Object.values(config.input).forEach(checkFile)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 规范化配置\r\n   */\r\n  private normalizeConfig(config: Partial<BuilderConfig>): BuilderConfig {\r\n    const normalized: BuilderConfig = {\r\n      input: config.input || 'src/index.ts',\r\n      output: {\r\n        dir: 'dist',\r\n        format: 'esm',\r\n        sourcemap: true,\r\n        ...config.output\r\n      },\r\n      bundler: (config.bundler === 'rollup' || config.bundler === 'rolldown') ? config.bundler : undefined,\r\n      mode: config.mode || 'production',\r\n      minify: config.minify ?? true,\r\n      external: config.external || [],\r\n      plugins: config.plugins || [],\r\n      clean: config.clean ?? true,\r\n      logLevel: config.logLevel || 'info',\r\n      performance: {\r\n        treeshaking: true,\r\n        bundleAnalyzer: false,\r\n        ...config.performance\r\n      },\r\n      ...config\r\n    }\r\n\r\n    return normalized\r\n  }\r\n\r\n  /**\r\n   * 获取配置建议\r\n   */\r\n  getSuggestions(config: Partial<BuilderConfig>): string[] {\r\n    const suggestions: string[] = []\r\n\r\n    // 性能建议\r\n    if (!config.performance?.treeshaking) {\r\n      suggestions.push('建议启用 Tree Shaking 以减少包体积')\r\n    }\r\n\r\n    if (config.mode === 'production' && !config.minify) {\r\n      suggestions.push('生产模式建议启用代码压缩')\r\n    }\r\n\r\n    // 输出格式建议\r\n    if (config.output?.format === 'umd' && !config.output?.name) {\r\n      suggestions.push('UMD 格式需要指定全局变量名 (output.name)')\r\n    }\r\n\r\n    // 源码映射建议\r\n    if (config.mode === 'development' && config.output?.sourcemap === false) {\r\n      suggestions.push('开发模式建议启用 source map 以便调试')\r\n    }\r\n\r\n    return suggestions\r\n  }\r\n}\r\n\r\n/**\r\n * 创建配置验证器\r\n */\r\nexport function createConfigValidator(options?: ConfigValidationOptions, logger?: Logger): ConfigValidator {\r\n  return new ConfigValidator(options, logger)\r\n}\r\n\r\n/**\r\n * 快速验证配置\r\n */\r\nexport function validateConfig(config: Partial<BuilderConfig>, options?: ConfigValidationOptions): ValidationResult {\r\n  const validator = createConfigValidator(options)\r\n  return validator.validate(config)\r\n}\r\n"]}