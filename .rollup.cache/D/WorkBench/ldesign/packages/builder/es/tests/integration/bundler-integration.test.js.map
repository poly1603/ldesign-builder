{"version":3,"file":"bundler-integration.test.js","sourceRoot":"","sources":["../../../src/tests/integration/bundler-integration.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 打包工具集成测试\n * \n * 测试 Rollup 和 Rolldown 的功能完整性和一致性\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport { describe, it, expect, beforeEach, afterEach } from 'vitest'\nimport fs from 'fs'\nimport path from 'path'\nimport { execSync } from 'child_process'\nimport { LibraryBuilder } from '../../core/LibraryBuilder'\nimport { BuildManifestGenerator } from '../../core/BuildManifestGenerator'\nimport { ConfigValidator } from '../../core/ConfigValidator'\nimport { BannerGenerator } from '../../utils/banner-generator'\nimport type { BuilderConfig } from '../../types/config'\n\ndescribe('打包工具集成测试', () => {\n  const testDir = path.join(__dirname, '../../../test-output')\n  const fixturesDir = path.join(__dirname, '../fixtures')\n\n  beforeEach(() => {\n    // 清理测试目录\n    if (fs.existsSync(testDir)) {\n      fs.rmSync(testDir, { recursive: true })\n    }\n    fs.mkdirSync(testDir, { recursive: true })\n  })\n\n  afterEach(() => {\n    // 清理测试目录\n    if (fs.existsSync(testDir)) {\n      fs.rmSync(testDir, { recursive: true })\n    }\n  })\n\n  describe('基础功能测试', () => {\n    it('应该能够使用 Rollup 构建简单的 TypeScript 项目', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'simple-ts/index.ts'),\n        output: {\n          dir: path.join(testDir, 'rollup-simple'),\n          format: ['esm', 'cjs'],\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rollup-simple/index.js'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rollup-simple/index.cjs'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rollup-simple/index.js.map'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rollup-simple/index.cjs.map'))).toBe(true)\n    })\n\n    it('应该能够使用 Rolldown 构建简单的 TypeScript 项目', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'simple-ts/index.ts'),\n        output: {\n          dir: path.join(testDir, 'rolldown-simple'),\n          format: ['esm', 'cjs'],\n          sourcemap: true\n        },\n        bundler: 'rolldown',\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rolldown-simple/index.js'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rolldown-simple/index.cjs'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rolldown-simple/index.js.map'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'rolldown-simple/index.cjs.map'))).toBe(true)\n    })\n  })\n\n  describe('多入口测试', () => {\n    it('应该支持多入口构建', async () => {\n      const config: BuilderConfig = {\n        input: {\n          main: path.join(fixturesDir, 'multi-entry/main.ts'),\n          utils: path.join(fixturesDir, 'multi-entry/utils.ts')\n        },\n        output: {\n          dir: path.join(testDir, 'multi-entry'),\n          format: 'esm',\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'multi-entry/main.js'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'multi-entry/utils.js'))).toBe(true)\n    })\n  })\n\n  describe('多格式输出测试', () => {\n    it('应该支持所有输出格式', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'simple-ts/index.ts'),\n        output: {\n          dir: path.join(testDir, 'multi-format'),\n          format: ['esm', 'cjs', 'umd', 'iife'],\n          name: 'TestLib',\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'multi-format/index.js'))).toBe(true) // ESM\n      expect(fs.existsSync(path.join(testDir, 'multi-format/index.cjs'))).toBe(true) // CJS\n      expect(fs.existsSync(path.join(testDir, 'multi-format/index.umd.js'))).toBe(true) // UMD\n      expect(fs.existsSync(path.join(testDir, 'multi-format/index.iife.js'))).toBe(true) // IIFE\n    })\n  })\n\n  describe('压缩功能测试', () => {\n    it('应该支持不同级别的压缩', async () => {\n      const levels = ['none', 'whitespace', 'basic', 'advanced'] as const\n\n      for (const level of levels) {\n        const config: BuilderConfig = {\n          input: path.join(fixturesDir, 'simple-ts/index.ts'),\n          output: {\n            dir: path.join(testDir, `minify-${level}`),\n            format: 'esm',\n            sourcemap: true\n          },\n          bundler: 'rollup',\n          minify: {\n            level,\n            js: true\n          }\n        }\n\n        const builder = new LibraryBuilder(config)\n        const result = await builder.build()\n\n        expect(result.success).toBe(true)\n        expect(fs.existsSync(path.join(testDir, `minify-${level}/index.js`))).toBe(true)\n\n        // 检查文件内容是否符合压缩级别\n        const content = fs.readFileSync(path.join(testDir, `minify-${level}/index.js`), 'utf-8')\n        \n        if (level === 'none') {\n          expect(content).toMatch(/\\s+/) // 应该包含空格\n        } else if (level === 'advanced') {\n          expect(content.length).toBeLessThan(1000) // 应该被大幅压缩\n        }\n      }\n    })\n  })\n\n  describe('Banner 功能测试', () => {\n    it('应该在输出文件中包含 Banner', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'simple-ts/index.ts'),\n        output: {\n          dir: path.join(testDir, 'banner-test'),\n          format: 'esm',\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        minify: false,\n        banner: {\n          enabled: true,\n          style: 'default'\n        }\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n\n      const content = fs.readFileSync(path.join(testDir, 'banner-test/index.js'), 'utf-8')\n      expect(content).toMatch(/^\\/\\*!/) // 应该以 banner 开头\n      expect(content).toMatch(/Built with/) // 应该包含构建信息\n    })\n  })\n\n  describe('构建清单测试', () => {\n    it('应该生成构建清单', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'simple-ts/index.ts'),\n        output: {\n          dir: path.join(testDir, 'manifest-test'),\n          format: ['esm', 'cjs'],\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        minify: false,\n        manifest: {\n          enabled: true,\n          formats: ['json', 'markdown', 'html']\n        }\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'manifest-test/build-manifest.json'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'manifest-test/build-manifest.md'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'manifest-test/build-manifest.html'))).toBe(true)\n\n      // 验证清单内容\n      const manifest = JSON.parse(fs.readFileSync(path.join(testDir, 'manifest-test/build-manifest.json'), 'utf-8'))\n      expect(manifest.build).toBeDefined()\n      expect(manifest.files).toBeDefined()\n      expect(manifest.stats).toBeDefined()\n      expect(manifest.files.length).toBeGreaterThan(0)\n    })\n  })\n\n  describe('TypeScript 兼容性测试', () => {\n    it('应该正确处理 TypeScript 类型声明', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'typescript-complex/index.ts'),\n        output: {\n          dir: path.join(testDir, 'typescript-test'),\n          format: ['esm', 'cjs'],\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        typescript: {\n          declaration: true,\n          declarationDir: path.join(testDir, 'typescript-test')\n        },\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'typescript-test/index.d.ts'))).toBe(true)\n      expect(fs.existsSync(path.join(testDir, 'typescript-test/index.d.cts'))).toBe(true)\n\n      // 验证类型声明文件内容\n      const dtsContent = fs.readFileSync(path.join(testDir, 'typescript-test/index.d.ts'), 'utf-8')\n      expect(dtsContent).toMatch(/export/) // 应该包含导出声明\n    })\n  })\n\n  describe('外部依赖处理测试', () => {\n    it('应该正确处理外部依赖', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'with-externals/index.ts'),\n        output: {\n          dir: path.join(testDir, 'externals-test'),\n          format: 'esm',\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        external: ['lodash', 'react'],\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(true)\n\n      const content = fs.readFileSync(path.join(testDir, 'externals-test/index.js'), 'utf-8')\n      expect(content).toMatch(/import.*from.*['\"]lodash['\"]/) // 应该保留外部依赖的导入\n      expect(content).not.toMatch(/lodash.*=.*function/) // 不应该包含 lodash 的实现\n    })\n  })\n\n  describe('错误处理测试', () => {\n    it('应该正确处理构建错误', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'invalid-syntax/index.ts'), // 不存在的文件\n        output: {\n          dir: path.join(testDir, 'error-test'),\n          format: 'esm'\n        },\n        bundler: 'rollup',\n        minify: false\n      }\n\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n\n      expect(result.success).toBe(false)\n      expect(result.errors).toBeDefined()\n      expect(result.errors!.length).toBeGreaterThan(0)\n    })\n  })\n\n  describe('性能测试', () => {\n    it('应该在合理时间内完成构建', async () => {\n      const config: BuilderConfig = {\n        input: path.join(fixturesDir, 'large-project/index.ts'),\n        output: {\n          dir: path.join(testDir, 'performance-test'),\n          format: ['esm', 'cjs'],\n          sourcemap: true\n        },\n        bundler: 'rollup',\n        minify: true\n      }\n\n      const startTime = Date.now()\n      const builder = new LibraryBuilder(config)\n      const result = await builder.build()\n      const endTime = Date.now()\n\n      expect(result.success).toBe(true)\n      expect(endTime - startTime).toBeLessThan(30000) // 应该在 30 秒内完成\n    })\n  })\n\n  describe('一致性测试', () => {\n    it('Rollup 和 Rolldown 应该产生相似的输出', async () => {\n      const baseConfig = {\n        input: path.join(fixturesDir, 'simple-ts/index.ts'),\n        output: {\n          format: 'esm' as const,\n          sourcemap: true\n        },\n        minify: false\n      }\n\n      // Rollup 构建\n      const rollupConfig: BuilderConfig = {\n        ...baseConfig,\n        output: {\n          ...baseConfig.output,\n          dir: path.join(testDir, 'consistency-rollup')\n        },\n        bundler: 'rollup'\n      }\n\n      // Rolldown 构建\n      const rolldownConfig: BuilderConfig = {\n        ...baseConfig,\n        output: {\n          ...baseConfig.output,\n          dir: path.join(testDir, 'consistency-rolldown')\n        },\n        bundler: 'rolldown'\n      }\n\n      const rollupBuilder = new LibraryBuilder(rollupConfig)\n      const rolldownBuilder = new LibraryBuilder(rolldownConfig)\n\n      const [rollupResult, rolldownResult] = await Promise.all([\n        rollupBuilder.build(),\n        rolldownBuilder.build()\n      ])\n\n      expect(rollupResult.success).toBe(true)\n      expect(rolldownResult.success).toBe(true)\n\n      // 比较输出文件\n      const rollupContent = fs.readFileSync(path.join(testDir, 'consistency-rollup/index.js'), 'utf-8')\n      const rolldownContent = fs.readFileSync(path.join(testDir, 'consistency-rolldown/index.js'), 'utf-8')\n\n      // 移除 banner 和空白字符后比较核心功能\n      const normalizeContent = (content: string) => \n        content.replace(/\\/\\*![\\s\\S]*?\\*\\/\\s*/, '').replace(/\\s+/g, ' ').trim()\n\n      const normalizedRollup = normalizeContent(rollupContent)\n      const normalizedRolldown = normalizeContent(rolldownContent)\n\n      // 内容应该基本相似（允许一些差异）\n      expect(normalizedRollup.length).toBeCloseTo(normalizedRolldown.length, -1)\n    })\n  })\n})\n"]}