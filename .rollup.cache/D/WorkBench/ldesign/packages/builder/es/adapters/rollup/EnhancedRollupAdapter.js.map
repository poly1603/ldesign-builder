{"version":3,"file":"EnhancedRollupAdapter.js","sourceRoot":"","sources":["../../../src/adapters/rollup/EnhancedRollupAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 增强版 Rollup 适配器\r\n *\r\n * 提供更强大的 Rollup 打包器适配实现，确保打包产物的正确性\r\n *\r\n * @author LDesign Team\r\n * @version 2.0.0\r\n */\r\n\r\nimport * as path from 'path'\r\nimport * as fs from 'fs-extra'\r\nimport { createHash } from 'crypto'\r\nimport type {\r\n  IBundlerAdapter,\r\n  UnifiedConfig,\r\n  AdapterOptions,\r\n  BundlerSpecificConfig,\r\n  BundlerSpecificPlugin,\r\n  BundlerFeature,\r\n  FeatureSupportMap\r\n} from '../../types/adapter'\r\nimport type { BuildResult, BuildWatcher } from '../../types/builder'\r\nimport type { PerformanceMetrics } from '../../types/performance'\r\nimport { Logger } from '../../utils/logger'\r\nimport { BuilderError } from '../../utils/error-handler'\r\nimport { ErrorCode } from '../../constants/errors'\r\n\r\n/**\r\n * 插件验证结果\r\n */\r\ninterface PluginValidation {\r\n  valid: boolean\r\n  errors: string[]\r\n  warnings: string[]\r\n}\r\n\r\n/**\r\n * 输出格式配置\r\n */\r\ninterface FormatConfig {\r\n  format: string\r\n  dir: string\r\n  entryFileNames: string\r\n  chunkFileNames: string\r\n  preserveModules: boolean\r\n  preserveModulesRoot?: string\r\n  exports?: string\r\n  sourcemap?: boolean | 'inline' | 'hidden'\r\n  globals?: Record<string, string>\r\n  name?: string\r\n  plugins?: any[]\r\n}\r\n\r\n/**\r\n * 增强版 Rollup 适配器类\r\n */\r\nexport class EnhancedRollupAdapter implements IBundlerAdapter {\r\n  readonly name = 'rollup' as const\r\n  readonly version: string\r\n  readonly available: boolean\r\n\r\n  private logger: Logger\r\n  private performanceMonitor: any\r\n  private multiConfigs?: any[]\r\n  private pluginCache: Map<string, any> = new Map()\r\n  private outputCache: Map<string, any> = new Map()\r\n  private rollupInstance: any = null\r\n\r\n  constructor(options: Partial<AdapterOptions> = {}) {\r\n    this.logger = options.logger || new Logger()\r\n    this.performanceMonitor = options.performanceMonitor\r\n\r\n    this.version = 'unknown'\r\n    this.available = true\r\n\r\n    this.logger.debug('增强版 Rollup 适配器初始化')\r\n  }\r\n\r\n  /**\r\n   * 执行构建（增强版）\r\n   */\r\n  async build(config: UnifiedConfig): Promise<BuildResult> {\r\n    if (!this.available) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rollup 适配器不可用'\r\n      )\r\n    }\r\n\r\n    try {\r\n      const rollup = await this.loadRollup()\r\n\r\n      // 验证配置\r\n      const configValidation = await this.validateConfig(config)\r\n      if (!configValidation.valid) {\r\n        throw new BuilderError(\r\n          ErrorCode.CONFIG_VALIDATION_ERROR,\r\n          `配置验证失败: ${configValidation.errors.join(', ')}`\r\n        )\r\n      }\r\n\r\n      // 转换配置\r\n      const rollupConfig = await this.transformConfig(config)\r\n\r\n      this.logger.info('开始增强版 Rollup 构建...')\r\n      const startTime = Date.now()\r\n\r\n      let results: any[] = []\r\n      const outputMetadata: Map<string, any> = new Map()\r\n\r\n      // 处理多配置构建 - 添加并行构建支持\r\n      if (this.multiConfigs && this.multiConfigs.length > 0) {\r\n        // 对于小量配置，使用并行构建提高性能\r\n        if (this.multiConfigs.length <= 3) {\r\n          const buildPromises = this.multiConfigs.map(async (singleConfig, index) => {\r\n            this.logger.debug(`并行构建配置 ${index + 1}/${this.multiConfigs?.length || 0}`)\r\n\r\n            // 验证单个配置\r\n            await this.validateSingleConfig(singleConfig)\r\n\r\n            // 创建 bundle\r\n            const bundle = await rollup.rollup(singleConfig)\r\n\r\n            try {\r\n              // 生成和写入输出\r\n              const outputs = await this.generateAndWriteOutputs(bundle, singleConfig)\r\n\r\n              // 收集输出元数据\r\n              const metadata = outputs.map(output => ({\r\n                fileName: output.fileName,\r\n                format: singleConfig.output.format,\r\n                preserveModules: singleConfig.output.preserveModules,\r\n                sourcemap: singleConfig.output.sourcemap\r\n              }))\r\n\r\n              return { outputs, metadata }\r\n            } finally {\r\n              await bundle.close()\r\n            }\r\n          })\r\n\r\n          const buildResults = await Promise.all(buildPromises)\r\n          buildResults.forEach(({ outputs, metadata }) => {\r\n            results.push(...outputs)\r\n            metadata.forEach(meta => {\r\n              outputMetadata.set(meta.fileName, {\r\n                format: meta.format,\r\n                preserveModules: meta.preserveModules,\r\n                sourcemap: meta.sourcemap\r\n              })\r\n            })\r\n          })\r\n        } else {\r\n          // 对于大量配置，使用串行构建避免内存压力\r\n          for (const [index, singleConfig] of this.multiConfigs.entries()) {\r\n            this.logger.debug(`串行构建配置 ${index + 1}/${this.multiConfigs.length}`)\r\n\r\n            // 验证单个配置\r\n            await this.validateSingleConfig(singleConfig)\r\n\r\n            // 创建 bundle\r\n            const bundle = await rollup.rollup(singleConfig)\r\n\r\n            try {\r\n              // 生成和写入输出\r\n              const outputs = await this.generateAndWriteOutputs(bundle, singleConfig)\r\n              results.push(...outputs)\r\n\r\n              // 收集输出元数据\r\n              outputs.forEach(output => {\r\n                outputMetadata.set(output.fileName, {\r\n                  format: singleConfig.output.format,\r\n                  preserveModules: singleConfig.output.preserveModules,\r\n                  sourcemap: singleConfig.output.sourcemap\r\n                })\r\n              })\r\n            } finally {\r\n              await bundle.close()\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // 单配置构建\r\n        const bundle = await rollup.rollup(rollupConfig)\r\n\r\n        const outputs = Array.isArray(rollupConfig.output)\r\n          ? rollupConfig.output\r\n          : [rollupConfig.output]\r\n\r\n        for (const outputConfig of outputs) {\r\n          const { output } = await bundle.generate(outputConfig)\r\n\r\n          // 验证输出\r\n          await this.validateOutputs(output, outputConfig)\r\n\r\n          results.push(...output)\r\n\r\n          // 写入文件\r\n          await bundle.write(outputConfig)\r\n        }\r\n\r\n        await bundle.close()\r\n      }\r\n\r\n      const duration = Date.now() - startTime\r\n\r\n      // 处理和增强输出结果\r\n      const enhancedOutputs = await this.enhanceOutputs(results, outputMetadata)\r\n\r\n      // 生成详细的构建统计\r\n      const stats = await this.generateBuildStats(enhancedOutputs, duration)\r\n\r\n      // 验证构建产物\r\n      const validation = await this.validateBuildOutputs(enhancedOutputs, config)\r\n\r\n      // 构建结果\r\n      const buildResult: BuildResult = {\r\n        success: validation.success,\r\n        outputs: enhancedOutputs,\r\n        duration,\r\n        stats,\r\n        performance: this.getPerformanceMetrics(),\r\n        warnings: validation.warnings || [],\r\n        errors: validation.errors || [],\r\n        buildId: `rollup-${Date.now()}`,\r\n        timestamp: Date.now(),\r\n        bundler: 'rollup',\r\n        mode: config.mode || 'production',\r\n        validation\r\n      }\r\n\r\n      this.logger.success(`增强版 Rollup 构建完成 (${duration}ms)`)\r\n      return buildResult\r\n\r\n    } catch (error) {\r\n      // 增强的错误处理\r\n      const enhancedError = await this.enhanceError(error as Error)\r\n      throw new BuilderError(\r\n        ErrorCode.BUILD_FAILED,\r\n        `Rollup 构建失败: ${enhancedError.message}`,\r\n        { cause: enhancedError }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 启动监听模式（增强版）\r\n   */\r\n  async watch(config: UnifiedConfig): Promise<BuildWatcher> {\r\n    if (!this.available) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rollup 适配器不可用'\r\n      )\r\n    }\r\n\r\n    try {\r\n      const rollup = await this.loadRollup()\r\n      const rollupConfig = await this.transformConfig(config)\r\n\r\n      // 添加增强的监听配置\r\n      const watchOptions = config.watch || {}\r\n      const watchConfig = {\r\n        ...rollupConfig,\r\n        watch: {\r\n          include: (watchOptions as any).include || ['src/**/*'],\r\n          exclude: (watchOptions as any).exclude || ['node_modules/**/*'],\r\n          clearScreen: false,\r\n          chokidar: {\r\n            ignoreInitial: true,\r\n            awaitWriteFinish: {\r\n              stabilityThreshold: 100,\r\n              pollInterval: 10\r\n            }\r\n          },\r\n          ...(typeof watchOptions === 'object' ? watchOptions : {})\r\n        }\r\n      }\r\n\r\n      const watcher = rollup.watch(watchConfig)\r\n\r\n      // 增强的监听器接口\r\n      const buildWatcher = {\r\n        patterns: watchConfig.watch.include,\r\n        watching: true,\r\n\r\n        async close() {\r\n          await watcher.close()\r\n        },\r\n\r\n        on(event: string, listener: (...args: any[]) => void) {\r\n          // 包装监听器以提供更好的错误处理\r\n          const wrappedListener = (...args: any[]) => {\r\n            try {\r\n              listener(...args)\r\n            } catch (error) {\r\n              console.error('Watcher event listener error:', error)\r\n            }\r\n          }\r\n\r\n          watcher.on(event, wrappedListener)\r\n          return this\r\n        },\r\n\r\n        off(event: string, listener: (...args: any[]) => void) {\r\n          watcher.off(event, listener)\r\n          return this\r\n        },\r\n\r\n        emit(_event: string, ..._args: any[]) {\r\n          return false\r\n        }\r\n      } as BuildWatcher\r\n\r\n      // 添加错误处理\r\n      watcher.on('error', (error: Error) => {\r\n        this.logger.error('监听模式错误:', error)\r\n      })\r\n\r\n      // 添加构建事件处理\r\n      watcher.on('event', (event: any) => {\r\n        switch (event.code) {\r\n          case 'START':\r\n            this.logger.info('检测到文件变化，重新构建...')\r\n            break\r\n          case 'BUNDLE_END':\r\n            this.logger.success(`构建完成 (${event.duration}ms)`)\r\n            break\r\n          case 'ERROR':\r\n            this.logger.error('构建错误:', event.error)\r\n            break\r\n        }\r\n      })\r\n\r\n      this.logger.info('增强版 Rollup 监听模式已启动')\r\n      return buildWatcher\r\n\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.BUILD_FAILED,\r\n        `启动 Rollup 监听模式失败: ${(error as Error).message}`,\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 转换配置（增强版）\r\n   */\r\n  async transformConfig(config: UnifiedConfig): Promise<BundlerSpecificConfig> {\r\n    // 获取基础插件\r\n    const basePlugins = await this.getEnhancedBasePlugins(config)\r\n\r\n    const rollupConfig: any = {\r\n      input: config.input,\r\n      external: this.processExternal(config.external),\r\n      cache: config.cache !== false,\r\n      strictDeprecations: true,\r\n      maxParallelFileOps: 5\r\n    }\r\n\r\n    // 注入 Acorn 插件\r\n    const acornPlugins = await this.getAcornPlugins()\r\n    if (acornPlugins.length > 0) {\r\n      rollupConfig.acorn = {\r\n        ecmaVersion: 2022,\r\n        sourceType: 'module',\r\n        allowAwaitOutsideFunction: true,\r\n        injectPlugins: acornPlugins\r\n      }\r\n    }\r\n\r\n    // 高级 tree-shaking 配置\r\n    if (config.treeshake !== false) {\r\n      const tsOptions = typeof config.treeshake === 'object' ? config.treeshake : undefined\r\n      rollupConfig.treeshake = {\r\n        moduleSideEffects: tsOptions?.moduleSideEffects ?? true,\r\n        propertyReadSideEffects: tsOptions?.propertyReadSideEffects ?? true,\r\n        tryCatchDeoptimization: tsOptions?.tryCatchDeoptimization ?? true,\r\n        unknownGlobalSideEffects: tsOptions?.unknownGlobalSideEffects ?? true,\r\n        correctVarValueBeforeDeclaration: true,\r\n        ...(tsOptions || {})\r\n      }\r\n    }\r\n\r\n    // 处理输出配置\r\n    if (config.output) {\r\n      const outputConfigs = await this.processOutputConfig(config)\r\n\r\n      if (outputConfigs.length > 1) {\r\n        // 多格式输出\r\n        this.multiConfigs = outputConfigs.map(outputConfig => ({\r\n          ...rollupConfig,\r\n          plugins: [...basePlugins, ...(outputConfig.plugins || [])],\r\n          output: outputConfig\r\n        }))\r\n\r\n        return this.multiConfigs[0]\r\n      } else {\r\n        // 单格式输出\r\n        rollupConfig.plugins = [...basePlugins, ...(outputConfigs[0].plugins || [])]\r\n        rollupConfig.output = outputConfigs[0]\r\n      }\r\n    }\r\n\r\n    // 性能优化配置\r\n    if (config.performance?.chunkSizeWarningLimit) {\r\n      rollupConfig.onwarn = (warning: any, warn: any) => {\r\n        if (warning.code === 'CIRCULAR_DEPENDENCY') {\r\n          this.logger.warn('检测到循环依赖:', warning.message)\r\n        } else if (warning.code === 'EVAL') {\r\n          this.logger.warn('代码中使用了 eval:', warning.message)\r\n        } else {\r\n          warn(warning)\r\n        }\r\n      }\r\n    }\r\n\r\n    return rollupConfig\r\n  }\r\n\r\n  /**\r\n   * 处理输出配置\r\n   */\r\n  private async processOutputConfig(config: UnifiedConfig): Promise<FormatConfig[]> {\r\n    const outputConfig = config.output!\r\n    const formats = Array.isArray(outputConfig.format)\r\n      ? outputConfig.format\r\n      : [outputConfig.format || 'esm']\r\n\r\n    const configs: FormatConfig[] = []\r\n    const isMultiEntry = this.isMultiEntryBuild(config.input)\r\n\r\n    for (const format of formats) {\r\n      // 智能格式处理\r\n      if (isMultiEntry && (format === 'umd' || format === 'iife')) {\r\n        if (config.umd?.forceMultiEntry) {\r\n          // 强制为多入口创建 UMD/IIFE\r\n          const umdConfig = await this.createEnhancedUMDConfig(config, format)\r\n          configs.push(umdConfig)\r\n        } else {\r\n          this.logger.warn(`多入口构建跳过 ${format} 格式`)\r\n          continue\r\n        }\r\n      } else {\r\n        const formatConfig = await this.createFormatConfig(format, config)\r\n        configs.push(formatConfig)\r\n      }\r\n    }\r\n\r\n    return configs\r\n  }\r\n\r\n  /**\r\n   * 创建格式配置\r\n   */\r\n  private async createFormatConfig(format: string, config: UnifiedConfig): Promise<FormatConfig> {\r\n    const mapped = this.mapFormat(format)\r\n    const isESM = format === 'esm'\r\n    const isCJS = format === 'cjs'\r\n    const isUMD = format === 'umd'\r\n    const isIIFE = format === 'iife'\r\n\r\n    // 智能目录分配\r\n    let dir = config.output?.dir || 'dist'\r\n    if (isESM) {\r\n      dir = path.join(dir, 'es')\r\n    } else if (isCJS) {\r\n      dir = path.join(dir, 'cjs')\r\n    }\r\n\r\n    // 智能文件命名\r\n    const entryFileNames = this.getEntryFileName(format, config)\r\n    const chunkFileNames = this.getChunkFileName(format, config)\r\n\r\n    // 格式特定插件\r\n    const formatPlugins = await this.getFormatSpecificPlugins(format, config)\r\n\r\n    return {\r\n      format: mapped,\r\n      dir,\r\n      entryFileNames,\r\n      chunkFileNames,\r\n      preserveModules: (isESM || isCJS),\r\n      preserveModulesRoot: (isESM || isCJS) ? 'src' : undefined,\r\n      sourcemap: config.output?.sourcemap ?? true,\r\n      globals: config.output?.globals,\r\n      name: (isUMD || isIIFE) ? config.output?.name : undefined,\r\n      plugins: formatPlugins\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取增强的基础插件\r\n   */\r\n  private async getEnhancedBasePlugins(config: UnifiedConfig): Promise<any[]> {\r\n    const plugins: any[] = []\r\n\r\n    try {\r\n      // Node resolve 插件\r\n      const resolve = await import('@rollup/plugin-node-resolve')\r\n      plugins.push(resolve.default({\r\n        preferBuiltins: false,\r\n        browser: config.browser ?? true,\r\n        mainFields: ['module', 'jsnext:main', 'main'],\r\n        extensions: ['.mjs', '.js', '.jsx', '.json', '.node', '.ts', '.tsx'],\r\n        dedupe: config.dedupe || [],\r\n        resolveOnly: config.resolveOnly\r\n      }))\r\n\r\n      // CommonJS 插件\r\n      const commonjs = await import('@rollup/plugin-commonjs')\r\n      plugins.push(commonjs.default({\r\n        include: /node_modules/,\r\n        requireReturnsDefault: 'auto',\r\n        defaultIsModuleExports: true,\r\n        esmExternals: true,\r\n        transformMixedEsModules: true\r\n      }))\r\n\r\n      // JSON 插件\r\n      const json = await import('@rollup/plugin-json')\r\n      plugins.push(json.default({\r\n        compact: true,\r\n        preferConst: true,\r\n        indent: '  '\r\n      }))\r\n\r\n      // TypeScript 处理\r\n      if (await this.hasTypeScriptFiles(config)) {\r\n        const typescript = await import('@rollup/plugin-typescript')\r\n        plugins.push(typescript.default({\r\n          tsconfig: await this.findTsConfig(),\r\n          declaration: true,\r\n          declarationMap: true,\r\n          sourceMap: true,\r\n          inlineSources: true,\r\n          exclude: ['**/*.test.ts', '**/*.spec.ts', '**/*.test.tsx', '**/*.spec.tsx']\r\n        }))\r\n      }\r\n\r\n      // 压缩插件\r\n      if (config.minify !== false && config.mode === 'production') {\r\n        const terser = await import('@rollup/plugin-terser')\r\n        plugins.push(terser.default({\r\n          compress: {\r\n            ecma: 2015,\r\n            passes: 2,\r\n            drop_console: config.dropConsole ?? false,\r\n            drop_debugger: true,\r\n            pure_funcs: config.pureFuncs || []\r\n          },\r\n          mangle: {\r\n            safari10: true\r\n          },\r\n          format: {\r\n            comments: false,\r\n            preserve_annotations: true\r\n          }\r\n        }))\r\n      }\r\n\r\n      // 替换插件\r\n      if (config.define || config.env) {\r\n        const replace = await import('@rollup/plugin-replace')\r\n        const replacements: Record<string, string> = {}\r\n\r\n        if (config.define) {\r\n          Object.assign(replacements, config.define)\r\n        }\r\n\r\n        if (config.env) {\r\n          Object.keys(config.env).forEach(key => {\r\n            replacements[`process.env.${key}`] = JSON.stringify(config.env![key])\r\n          })\r\n        }\r\n\r\n        plugins.push(replace.default({\r\n          preventAssignment: true,\r\n          values: replacements\r\n        }))\r\n      }\r\n\r\n      // 用户自定义插件\r\n      if (config.plugins) {\r\n        const transformedPlugins = await this.transformPlugins(config.plugins)\r\n        plugins.push(...transformedPlugins)\r\n      }\r\n\r\n    } catch (error) {\r\n      this.logger.error('加载插件失败:', error)\r\n      throw error\r\n    }\r\n\r\n    return plugins\r\n  }\r\n\r\n  /**\r\n   * 验证配置\r\n   */\r\n  private async validateConfig(config: UnifiedConfig): Promise<{\r\n    valid: boolean\r\n    errors: string[]\r\n    warnings: string[]\r\n  }> {\r\n    const errors: string[] = []\r\n    const warnings: string[] = []\r\n\r\n    // 验证入口\r\n    if (!config.input) {\r\n      errors.push('未指定入口文件')\r\n    }\r\n\r\n    // 验证输出\r\n    if (!config.output) {\r\n      errors.push('未指定输出配置')\r\n    } else {\r\n      if (!config.output.dir && !config.output.file) {\r\n        errors.push('未指定输出目录或文件')\r\n      }\r\n    }\r\n\r\n    // 验证插件\r\n    if (config.plugins) {\r\n      for (const plugin of config.plugins) {\r\n        const validation = await this.validatePlugin(plugin)\r\n        errors.push(...validation.errors)\r\n        warnings.push(...validation.warnings)\r\n      }\r\n    }\r\n\r\n    return {\r\n      valid: errors.length === 0,\r\n      errors,\r\n      warnings\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证插件\r\n   */\r\n  private async validatePlugin(plugin: any): Promise<PluginValidation> {\r\n    const errors: string[] = []\r\n    const warnings: string[] = []\r\n\r\n    if (!plugin) {\r\n      errors.push('插件为空')\r\n    } else if (typeof plugin === 'object') {\r\n      if (!plugin.name) {\r\n        warnings.push('插件缺少名称')\r\n      }\r\n\r\n      // 检查必要的钩子\r\n      const hasHooks = ['buildStart', 'buildEnd', 'renderChunk', 'generateBundle', 'transform', 'load', 'resolveId']\r\n        .some(hook => typeof plugin[hook] === 'function')\r\n\r\n      if (!hasHooks && !plugin.plugin) {\r\n        warnings.push('插件没有实现任何钩子')\r\n      }\r\n    }\r\n\r\n    return { valid: errors.length === 0, errors, warnings }\r\n  }\r\n\r\n  /**\r\n   * 验证单个配置\r\n   */\r\n  private async validateSingleConfig(config: any): Promise<void> {\r\n    if (!config.input) {\r\n      throw new Error('配置缺少入口文件')\r\n    }\r\n\r\n    if (!config.output) {\r\n      throw new Error('配置缺少输出设置')\r\n    }\r\n\r\n    // 检查输出目录权限\r\n    const outputDir = config.output.dir || path.dirname(config.output.file)\r\n    try {\r\n      await fs.ensureDir(outputDir)\r\n    } catch (error) {\r\n      throw new Error(`无法创建输出目录 ${outputDir}: ${(error as Error).message}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 生成和写入输出\r\n   */\r\n  private async generateAndWriteOutputs(bundle: any, config: any): Promise<any[]> {\r\n    const outputs: any[] = []\r\n\r\n    try {\r\n      // 生成输出\r\n      const { output } = await bundle.generate(config.output)\r\n\r\n      // 验证输出\r\n      await this.validateOutputs(output, config.output)\r\n\r\n      // 增强输出\r\n      for (const chunk of output) {\r\n        if (chunk.type === 'chunk') {\r\n          // 添加源码映射链接\r\n          if (config.output.sourcemap && config.output.sourcemap !== 'inline') {\r\n            chunk.code += `\\n//# sourceMappingURL=${chunk.fileName}.map`\r\n          }\r\n        }\r\n      }\r\n\r\n      outputs.push(...output)\r\n\r\n      // 写入文件\r\n      await bundle.write(config.output)\r\n\r\n    } catch (error) {\r\n      throw new Error(`生成输出失败: ${(error as Error).message}`)\r\n    }\r\n\r\n    return outputs\r\n  }\r\n\r\n  /**\r\n   * 验证输出\r\n   */\r\n  private async validateOutputs(outputs: any[], config: any): Promise<void> {\r\n    for (const output of outputs) {\r\n      // 检查输出大小\r\n      const size = output.type === 'chunk' ? output.code.length : output.source.length\r\n      if (size === 0) {\r\n        this.logger.warn(`输出文件 ${output.fileName} 为空`)\r\n      }\r\n\r\n      // 检查必要的导出\r\n      if (output.type === 'chunk' && config.format === 'cjs') {\r\n        if (!output.code.includes('exports.') && !output.code.includes('module.exports')) {\r\n          this.logger.warn(`CommonJS 输出 ${output.fileName} 可能没有导出`)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 增强输出结果\r\n   */\r\n  private async enhanceOutputs(outputs: any[], metadata: Map<string, any>): Promise<any[]> {\r\n    const enhanced = []\r\n\r\n    for (const output of outputs) {\r\n      const meta = metadata.get(output.fileName) || {}\r\n      const size = output.type === 'chunk' ? output.code.length : output.source.length\r\n      const source = output.type === 'chunk' ? output.code : output.source\r\n\r\n      // 计算哈希\r\n      const hash = createHash('md5').update(source).digest('hex')\r\n\r\n      // 计算 gzip 大小\r\n      let gzipSize = 0\r\n      try {\r\n        const { gzipSize: getGzipSize } = await import('gzip-size')\r\n        gzipSize = await getGzipSize(source)\r\n      } catch (error) {\r\n        this.logger.debug('无法计算 gzip 大小:', error)\r\n      }\r\n\r\n      enhanced.push({\r\n        fileName: output.fileName,\r\n        size,\r\n        source,\r\n        type: output.type,\r\n        format: meta.format || 'unknown',\r\n        gzipSize,\r\n        hash,\r\n        map: output.map,\r\n        isEntry: output.isEntry || false,\r\n        isDynamicEntry: output.isDynamicEntry || false,\r\n        facadeModuleId: output.facadeModuleId,\r\n        modules: output.modules,\r\n        imports: output.imports || [],\r\n        exports: output.exports || []\r\n      })\r\n    }\r\n\r\n    return enhanced\r\n  }\r\n\r\n  /**\r\n   * 生成构建统计\r\n   */\r\n  private async generateBuildStats(outputs: any[], duration: number): Promise<any> {\r\n    const totalSize = outputs.reduce((sum, o) => sum + o.size, 0)\r\n    const totalGzipSize = outputs.reduce((sum, o) => sum + o.gzipSize, 0)\r\n\r\n    const byFormat: Record<string, any> = {}\r\n    const formats = ['esm', 'cjs', 'umd', 'iife', 'css']\r\n\r\n    for (const format of formats) {\r\n      const formatOutputs = outputs.filter(o => o.format === format ||\r\n        (format === 'css' && o.fileName.endsWith('.css')))\r\n\r\n      byFormat[format] = {\r\n        fileCount: formatOutputs.length,\r\n        size: {\r\n          raw: formatOutputs.reduce((sum, o) => sum + o.size, 0),\r\n          gzip: formatOutputs.reduce((sum, o) => sum + o.gzipSize, 0),\r\n          brotli: 0,\r\n          byType: {},\r\n          byFormat: {},\r\n          largest: formatOutputs.length > 0 ? {\r\n            file: formatOutputs.sort((a, b) => b.size - a.size)[0].fileName,\r\n            size: formatOutputs.sort((a, b) => b.size - a.size)[0].size\r\n          } : { file: '', size: 0 },\r\n          fileCount: formatOutputs.length\r\n        }\r\n      }\r\n    }\r\n\r\n    // 分析模块\r\n    const modules = new Set<string>()\r\n    const externalModules = new Set<string>()\r\n\r\n    for (const output of outputs) {\r\n      if (output.modules) {\r\n        Object.keys(output.modules).forEach(m => modules.add(m))\r\n      }\r\n      if (output.imports) {\r\n        output.imports.forEach((i: string) => externalModules.add(i))\r\n      }\r\n    }\r\n\r\n    return {\r\n      buildTime: duration,\r\n      fileCount: outputs.length,\r\n      totalSize: {\r\n        raw: totalSize,\r\n        gzip: totalGzipSize,\r\n        brotli: 0,\r\n        byType: {\r\n          js: outputs.filter(o => o.fileName.endsWith('.js')).reduce((sum, o) => sum + o.size, 0),\r\n          css: outputs.filter(o => o.fileName.endsWith('.css')).reduce((sum, o) => sum + o.size, 0),\r\n          map: outputs.filter(o => o.fileName.endsWith('.map')).reduce((sum, o) => sum + o.size, 0)\r\n        },\r\n        byFormat,\r\n        largest: outputs.length > 0 ? {\r\n          file: outputs.sort((a, b) => b.size - a.size)[0].fileName,\r\n          size: outputs.sort((a, b) => b.size - a.size)[0].size\r\n        } : { file: '', size: 0 },\r\n        fileCount: outputs.length\r\n      },\r\n      byFormat,\r\n      modules: {\r\n        total: modules.size,\r\n        external: externalModules.size,\r\n        internal: modules.size - externalModules.size,\r\n        largest: null\r\n      },\r\n      dependencies: {\r\n        total: externalModules.size,\r\n        external: Array.from(externalModules),\r\n        bundled: [],\r\n        circular: []\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证构建产物\r\n   */\r\n  private async validateBuildOutputs(outputs: any[], config: UnifiedConfig): Promise<any> {\r\n    const errors: string[] = []\r\n    const warnings: string[] = []\r\n    let success = true\r\n\r\n    // 检查是否有输出\r\n    if (outputs.length === 0) {\r\n      errors.push('没有生成任何输出文件')\r\n      success = false\r\n    }\r\n\r\n    // 检查必要的文件\r\n    if (config.output?.format) {\r\n      const formats = Array.isArray(config.output.format) ? config.output.format : [config.output.format]\r\n\r\n      for (const format of formats) {\r\n        const hasFormat = outputs.some(o => o.format === this.mapFormat(format))\r\n        if (!hasFormat) {\r\n          warnings.push(`缺少 ${format} 格式的输出`)\r\n        }\r\n      }\r\n    }\r\n\r\n    // 检查文件完整性\r\n    for (const output of outputs) {\r\n      if (output.size === 0) {\r\n        warnings.push(`文件 ${output.fileName} 为空`)\r\n      }\r\n\r\n      // 检查源码映射\r\n      if (config.output?.sourcemap && !output.fileName.endsWith('.map')) {\r\n        const mapFile = `${output.fileName}.map`\r\n        const hasMap = outputs.some(o => o.fileName === mapFile)\r\n        if (!hasMap && output.type === 'chunk') {\r\n          warnings.push(`缺少源码映射文件: ${mapFile}`)\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      success,\r\n      errors,\r\n      warnings\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 增强错误信息\r\n   */\r\n  private async enhanceError(error: Error): Promise<Error> {\r\n    // 添加更多上下文信息\r\n    const enhancedError = new Error(error.message)\r\n    enhancedError.stack = error.stack\r\n\r\n    // 添加建议\r\n    if (error.message.includes('Could not resolve')) {\r\n      (enhancedError as any).suggestion = '请检查模块路径或安装缺失的依赖'\r\n    } else if (error.message.includes('Unexpected token')) {\r\n      (enhancedError as any).suggestion = '请检查语法错误或配置相应的转换插件'\r\n    } else if (error.message.includes('ENOENT')) {\r\n      (enhancedError as any).suggestion = '文件或目录不存在，请检查路径'\r\n    }\r\n\r\n    return enhancedError\r\n  }\r\n\r\n  /**\r\n   * 获取格式特定插件\r\n   */\r\n  private async getFormatSpecificPlugins(format: string, config: UnifiedConfig): Promise<any[]> {\r\n    const plugins: any[] = []\r\n\r\n    // TypeScript 声明文件插件\r\n    if (format === 'esm' && await this.hasTypeScriptFiles(config)) {\r\n      try {\r\n        const dts = await import('rollup-plugin-dts')\r\n        void dts\r\n        if (config.typescript?.declaration) {\r\n          // 这里可以添加 dts 插件配置\r\n        }\r\n      } catch (error) {\r\n        this.logger.debug('rollup-plugin-dts 不可用')\r\n      }\r\n    }\r\n\r\n    // CSS 处理插件\r\n    if (await this.hasStyleFiles(config)) {\r\n      try {\r\n        const postcss = await import('rollup-plugin-postcss')\r\n        plugins.push(postcss.default({\r\n          extract: true,\r\n          minimize: config.mode === 'production',\r\n          sourceMap: config.output?.sourcemap !== false,\r\n          use: {\r\n            sass: await this.hasSassFiles(config) ? {} : undefined,\r\n            less: await this.hasLessFiles(config) ? {} : undefined,\r\n            stylus: await this.hasStylusFiles(config) ? {} : undefined\r\n          }\r\n        }))\r\n      } catch (error) {\r\n        this.logger.debug('样式处理插件不可用')\r\n      }\r\n    }\r\n\r\n    return plugins\r\n  }\r\n\r\n  /**\r\n   * 处理外部依赖配置\r\n   */\r\n  private processExternal(external: any): any {\r\n    if (!external) return []\r\n\r\n    if (Array.isArray(external)) {\r\n      return external\r\n    }\r\n\r\n    if (typeof external === 'function') {\r\n      return external\r\n    }\r\n\r\n    if (external instanceof RegExp) {\r\n      return (id: string) => external.test(id)\r\n    }\r\n\r\n    if (typeof external === 'string') {\r\n      return [external]\r\n    }\r\n\r\n    if (typeof external === 'object') {\r\n      return Object.keys(external)\r\n    }\r\n\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * 获取入口文件名\r\n   */\r\n  private getEntryFileName(format: string, config: UnifiedConfig): string {\r\n    const out: any = config.output as any\r\n    if (out?.entryFileNames) {\r\n      return out.entryFileNames\r\n    }\r\n    if (config.output?.fileName) {\r\n      return config.output.fileName as string\r\n    }\r\n\r\n    switch (format) {\r\n      case 'esm':\r\n        return '[name].js'\r\n      case 'cjs':\r\n        return '[name].cjs'\r\n      case 'umd':\r\n        return '[name].js'\r\n      case 'iife':\r\n        return '[name].iife.js'\r\n      default:\r\n        return '[name].js'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取代码块文件名\r\n   */\r\n  private getChunkFileName(format: string, config: UnifiedConfig): string {\r\n    if (config.output?.chunkFileNames) {\r\n      return config.output.chunkFileNames\r\n    }\r\n\r\n    switch (format) {\r\n      case 'esm':\r\n        return 'chunks/[name]-[hash].js'\r\n      case 'cjs':\r\n        return 'chunks/[name]-[hash].cjs'\r\n      default:\r\n        return 'chunks/[name]-[hash].js'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 创建增强的 UMD 配置\r\n   */\r\n  private async createEnhancedUMDConfig(config: UnifiedConfig, format: string): Promise<FormatConfig> {\r\n    const name = config.output?.name || 'Library'\r\n    const globals = config.output?.globals || {}\r\n\r\n    // 创建单入口包装器\r\n    const tempEntry = path.join(process.cwd(), '.temp', `umd-entry-${Date.now()}.js`)\r\n    await fs.ensureDir(path.dirname(tempEntry))\r\n\r\n    // 生成包装器代码\r\n    const entries = Array.isArray(config.input) ? config.input : [config.input]\r\n    const imports = entries.map((entry, index) =>\r\n      `export * as module${index} from '${entry}'`\r\n    ).join('\\n')\r\n\r\n    await fs.writeFile(tempEntry, imports)\r\n\r\n    return {\r\n      format: format === 'umd' ? 'umd' : 'iife',\r\n      dir: config.output?.dir || 'dist',\r\n      entryFileNames: `[name].${format}.js`,\r\n      chunkFileNames: `chunks/[name]-[hash].${format}.js`,\r\n      preserveModules: false,\r\n      name,\r\n      globals,\r\n      sourcemap: config.output?.sourcemap ?? true,\r\n      plugins: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 检查是否有 TypeScript 文件\r\n   */\r\n  private async hasTypeScriptFiles(config: UnifiedConfig): Promise<boolean> {\r\n    const input = config.input as any\r\n\r\n    let entries: string[] = []\r\n    if (Array.isArray(input)) {\r\n      entries = input.filter((e: any): e is string => typeof e === 'string')\r\n    } else if (typeof input === 'object' && input !== null) {\r\n      // 命名入口对象 { name: path }\r\n      entries = Object.values(input).filter((e: any): e is string => typeof e === 'string')\r\n    } else if (typeof input === 'string') {\r\n      entries = [input]\r\n    }\r\n\r\n    return entries.some((entry) => entry.endsWith('.ts') || entry.endsWith('.tsx'))\r\n  }\r\n\r\n  /**\r\n   * 查找 tsconfig.json\r\n   */\r\n  private async findTsConfig(): Promise<string | undefined> {\r\n    const candidates = [\r\n      'tsconfig.json',\r\n      'tsconfig.build.json',\r\n      '../tsconfig.json',\r\n      '../../tsconfig.json'\r\n    ]\r\n\r\n    for (const candidate of candidates) {\r\n      const fullPath = path.join(process.cwd(), candidate)\r\n      if (await fs.pathExists(fullPath)) {\r\n        return fullPath\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * 检查是否有样式文件\r\n   */\r\n  private async hasStyleFiles(_config: UnifiedConfig): Promise<boolean> {\r\n    // 简单检查，实际实现可以更复杂\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * 检查是否有 Sass 文件\r\n   */\r\n  private async hasSassFiles(_config: UnifiedConfig): Promise<boolean> {\r\n    return false // 简化实现\r\n  }\r\n\r\n  /**\r\n   * 检查是否有 Less 文件\r\n   */\r\n  private async hasLessFiles(_config: UnifiedConfig): Promise<boolean> {\r\n    return false // 简化实现\r\n  }\r\n\r\n  /**\r\n   * 检查是否有 Stylus 文件\r\n   */\r\n  private async hasStylusFiles(_config: UnifiedConfig): Promise<boolean> {\r\n    return false // 简化实现\r\n  }\r\n\r\n  /**\r\n   * 检查是否是多入口构建\r\n   */\r\n  private isMultiEntryBuild(input: any): boolean {\r\n    if (Array.isArray(input)) {\r\n      return input.length > 1\r\n    }\r\n\r\n    if (typeof input === 'object' && input !== null) {\r\n      return Object.keys(input).length > 1\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * 映射格式\r\n   */\r\n  private mapFormat(format: string): string {\r\n    const formatMap: Record<string, string> = {\r\n      'esm': 'es',\r\n      'es': 'es',\r\n      'cjs': 'cjs',\r\n      'commonjs': 'cjs',\r\n      'umd': 'umd',\r\n      'iife': 'iife',\r\n      'amd': 'amd',\r\n      'system': 'system'\r\n    }\r\n\r\n    return formatMap[format] || format\r\n  }\r\n\r\n  /**\r\n   * 转换插件\r\n   */\r\n  async transformPlugins(plugins: any[]): Promise<BundlerSpecificPlugin[]> {\r\n    const transformedPlugins: BundlerSpecificPlugin[] = []\r\n\r\n    for (const plugin of plugins) {\r\n      try {\r\n        // 缓存插件\r\n        const cacheKey = JSON.stringify(plugin.name || plugin)\r\n        if (this.pluginCache.has(cacheKey)) {\r\n          transformedPlugins.push(this.pluginCache.get(cacheKey))\r\n          continue\r\n        }\r\n\r\n        let actualPlugin\r\n\r\n        if (plugin.plugin && typeof plugin.plugin === 'function') {\r\n          actualPlugin = await plugin.plugin()\r\n        } else if (plugin.rollup) {\r\n          actualPlugin = { ...plugin, ...plugin.rollup }\r\n        } else {\r\n          actualPlugin = plugin\r\n        }\r\n\r\n        this.pluginCache.set(cacheKey, actualPlugin)\r\n        transformedPlugins.push(actualPlugin)\r\n\r\n      } catch (error) {\r\n        this.logger.warn(`插件 ${plugin.name || 'unknown'} 加载失败:`, (error as Error).message)\r\n      }\r\n    }\r\n\r\n    return transformedPlugins\r\n  }\r\n\r\n  /**\r\n   * 获取 Acorn 插件\r\n   */\r\n  private async getAcornPlugins(): Promise<any[]> {\r\n    const plugins = []\r\n\r\n    try {\r\n      // JSX 支持\r\n      const jsx = await import('acorn-jsx')\r\n      plugins.push(jsx.default())\r\n    } catch (error) {\r\n      this.logger.debug('acorn-jsx 不可用')\r\n    }\r\n\r\n    try {\r\n      // TypeScript 支持\r\n      const ts = await import('acorn-typescript')\r\n      plugins.push(ts.default())\r\n    } catch (error) {\r\n      this.logger.debug('acorn-typescript 不可用')\r\n    }\r\n\r\n    return plugins\r\n  }\r\n\r\n  /**\r\n   * 加载 Rollup\r\n   */\r\n  private async loadRollup(): Promise<any> {\r\n    if (this.rollupInstance) {\r\n      return this.rollupInstance\r\n    }\r\n\r\n    try {\r\n      const rollup = await import('rollup')\r\n      this.rollupInstance = rollup\r\n\r\n      // 获取版本\r\n      if (rollup.VERSION) {\r\n        (this as any).version = rollup.VERSION\r\n      }\r\n\r\n      return rollup\r\n    } catch (error) {\r\n      throw new BuilderError(\r\n        ErrorCode.ADAPTER_NOT_AVAILABLE,\r\n        'Rollup 未安装或无法加载',\r\n        { cause: error as Error }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取性能指标\r\n   */\r\n  getPerformanceMetrics(): PerformanceMetrics {\r\n    return this.performanceMonitor?.getMetrics() || {\r\n      buildTime: 0,\r\n      bundleTime: 0,\r\n      optimizeTime: 0,\r\n      emitTime: 0,\r\n      totalTime: 0,\r\n      memoryUsage: {\r\n        peak: 0,\r\n        average: 0\r\n      },\r\n      phases: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清理资源\r\n   */\r\n  async dispose(): Promise<void> {\r\n    this.pluginCache.clear()\r\n    this.outputCache.clear()\r\n    this.multiConfigs = undefined\r\n    this.rollupInstance = null\r\n\r\n    this.logger.debug('增强版 Rollup 适配器已清理')\r\n  }\r\n\r\n  supportsFeature(feature: BundlerFeature): boolean {\r\n    const support = this.getFeatureSupport()\r\n    return support[feature] ?? false\r\n  }\r\n\r\n  getFeatureSupport(): FeatureSupportMap {\r\n    return {\r\n      'treeshaking': true,\r\n      'code-splitting': true,\r\n      'dynamic-import': true,\r\n      'worker-support': true,\r\n      'css-bundling': true,\r\n      'asset-processing': true,\r\n      'sourcemap': true,\r\n      'minification': true,\r\n      'hot-reload': false,\r\n      'module-federation': false,\r\n      'incremental-build': true,\r\n      'parallel-build': true,\r\n      'cache-support': true,\r\n      'plugin-system': true,\r\n      'config-file': true\r\n    } as unknown as FeatureSupportMap\r\n  }\r\n}\r\n"]}