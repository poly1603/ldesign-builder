{"version":3,"file":"auto-config-enhancer.js","sourceRoot":"","sources":["../../src/utils/auto-config-enhancer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * 自动配置增强器\n * \n * 自动处理 external、globals、libraryType 和 Vue 插件配置\n * \n * @author LDesign Team\n * @version 1.0.0\n */\n\nimport * as fs from 'node:fs/promises'\nimport * as path from 'node:path'\nimport type { BuilderConfig } from '../types/config'\nimport { LibraryType } from '../types/library'\nimport { Logger } from './logger'\n\n/**\n * 包信息接口\n */\ninterface PackageInfo {\n  name?: string\n  dependencies?: Record<string, string>\n  devDependencies?: Record<string, string>\n  peerDependencies?: Record<string, string>\n  optionalDependencies?: Record<string, string>\n}\n\n/**\n * 已知的全局变量映射\n */\nconst KNOWN_GLOBALS: Record<string, string> = {\n  'vue': 'Vue',\n  'react': 'React',\n  'react-dom': 'ReactDOM',\n  'lodash': '_',\n  'lodash-es': '_',\n  'jquery': '$',\n  'moment': 'moment',\n  'dayjs': 'dayjs',\n  'axios': 'axios',\n  'raf': 'raf',\n  '@vue/runtime-core': 'Vue',\n  '@vue/runtime-dom': 'Vue',\n  '@vue/reactivity': 'Vue',\n  '@vue/shared': 'Vue'\n}\n\n/**\n * 自动配置增强器类\n */\nexport class AutoConfigEnhancer {\n  private logger: Logger\n  private projectPath: string\n  private packageInfo?: PackageInfo\n\n  constructor(projectPath: string, logger?: Logger) {\n    this.projectPath = projectPath\n    this.logger = logger || new Logger()\n  }\n\n  /**\n   * 增强配置\n   */\n  async enhanceConfig(config: BuilderConfig): Promise<BuilderConfig> {\n    this.logger.info('开始配置自动增强...')\n    const enhanced = { ...config }\n\n    // 读取 package.json\n    this.logger.info('读取 package.json...')\n    await this.loadPackageInfo()\n\n    // 自动检测库类型\n    this.logger.info(`当前 libraryType: ${enhanced.libraryType}`)\n    if (!enhanced.libraryType || enhanced.libraryType === LibraryType.TYPESCRIPT) {\n      this.logger.info('libraryType 为空或为默认的 TypeScript 类型，开始自动检测...')\n      enhanced.libraryType = await this.detectLibraryType()\n      this.logger.info(`自动检测库类型: ${enhanced.libraryType}`)\n    } else {\n      this.logger.info('libraryType 已明确设置，跳过自动检测')\n    }\n\n    // 自动生成 external\n    if (!enhanced.external || (Array.isArray(enhanced.external) && enhanced.external.length === 0)) {\n      enhanced.external = this.generateExternal()\n    }\n\n    // 自动生成 globals\n    if (!enhanced.globals || Object.keys(enhanced.globals).length === 0) {\n      enhanced.globals = this.generateGlobals(enhanced.external)\n    }\n\n    // 自动添加默认的 exclude 配置\n    if (!enhanced.exclude || (Array.isArray(enhanced.exclude) && enhanced.exclude.length === 0)) {\n      enhanced.exclude = this.generateDefaultExcludes()\n    }\n\n    // 自动添加 Vue 插件\n    this.logger.info(`检查是否需要添加 Vue 插件，libraryType: ${enhanced.libraryType}`)\n    if (enhanced.libraryType === LibraryType.VUE3 || enhanced.libraryType === LibraryType.VUE2) {\n      this.logger.info(`检测到 ${enhanced.libraryType} 项目，自动添加 Vue 插件`)\n      enhanced.plugins = await this.addVuePlugin(enhanced.plugins || [], enhanced.libraryType)\n    } else {\n      this.logger.info('非 Vue 项目，不添加 Vue 插件')\n    }\n\n    this.logger.info('配置自动增强完成')\n    return enhanced\n  }\n\n  /**\n   * 加载 package.json 信息\n   */\n  private async loadPackageInfo(): Promise<void> {\n    try {\n      const packagePath = path.join(this.projectPath, 'package.json')\n      const content = await fs.readFile(packagePath, 'utf-8')\n      this.packageInfo = JSON.parse(content)\n    } catch (error) {\n      this.logger.warn('无法读取 package.json，将使用默认配置')\n      this.packageInfo = {}\n    }\n  }\n\n  /**\n   * 检测库类型\n   */\n  private async detectLibraryType(): Promise<LibraryType> {\n    this.logger.info('开始检测库类型...')\n\n    if (!this.packageInfo) {\n      this.logger.info('没有 package.json 信息，返回 TypeScript 类型')\n      return LibraryType.TYPESCRIPT\n    }\n\n    const allDeps = {\n      ...this.packageInfo.dependencies,\n      ...this.packageInfo.devDependencies,\n      ...this.packageInfo.peerDependencies\n    }\n    this.logger.info(`所有依赖: ${JSON.stringify(Object.keys(allDeps))}`)\n\n    // 检查是否有 Vue 文件\n    const hasVueFiles = await this.hasVueFiles()\n    this.logger.info(`是否有 Vue 文件: ${hasVueFiles}`)\n\n    if (hasVueFiles) {\n      // 检查 Vue 版本\n      const vueVersion = allDeps.vue\n      this.logger.info(`Vue 版本: ${vueVersion}`)\n\n      if (vueVersion && vueVersion.includes('2.')) {\n        this.logger.info('检测到 Vue 2 项目')\n        return LibraryType.VUE2\n      } else {\n        this.logger.info('检测到 Vue 3 项目')\n        return LibraryType.VUE3\n      }\n    }\n\n    // 检查 React\n    if (allDeps.react) {\n      this.logger.info('检测到 React 项目')\n      return LibraryType.REACT\n    }\n\n    // 检查样式库\n    if (allDeps.less || allDeps.sass || allDeps.stylus) {\n      this.logger.info('检测到样式库项目')\n      return LibraryType.STYLE\n    }\n\n    this.logger.info('检测到 TypeScript 项目')\n    return LibraryType.TYPESCRIPT\n  }\n\n  /**\n   * 检查是否有 Vue 文件\n   */\n  private async hasVueFiles(): Promise<boolean> {\n    try {\n      const srcPath = path.join(this.projectPath, 'src')\n      const files = await this.findVueFiles(srcPath)\n      this.logger.info(`在 ${srcPath} 中找到 ${files.length} 个 Vue 文件: ${files.join(', ')}`)\n      return files.length > 0\n    } catch (error) {\n      this.logger.warn(`检查 Vue 文件时出错: ${error}`)\n      return false\n    }\n  }\n\n  /**\n   * 递归查找 Vue 文件\n   */\n  private async findVueFiles(dir: string): Promise<string[]> {\n    const vueFiles: string[] = []\n\n    try {\n      const entries = await fs.readdir(dir, { withFileTypes: true })\n\n      for (const entry of entries) {\n        const fullPath = path.join(dir, entry.name)\n\n        if (entry.isDirectory() && entry.name !== 'node_modules') {\n          const subFiles = await this.findVueFiles(fullPath)\n          vueFiles.push(...subFiles)\n        } else if (entry.isFile() && entry.name.endsWith('.vue')) {\n          vueFiles.push(fullPath)\n        }\n      }\n    } catch {\n      // 忽略错误\n    }\n\n    return vueFiles\n  }\n\n  /**\n   * 生成 external 配置\n   */\n  private generateExternal(): string[] {\n    if (!this.packageInfo) {\n      return []\n    }\n\n    const external: string[] = []\n\n    // 添加 peerDependencies\n    if (this.packageInfo.peerDependencies) {\n      external.push(...Object.keys(this.packageInfo.peerDependencies))\n    }\n\n    // 添加常见的外部依赖\n    if (this.packageInfo.dependencies) {\n      const deps = Object.keys(this.packageInfo.dependencies)\n      const commonExternals = ['vue', 'react', 'react-dom', 'lodash', 'lodash-es', 'moment', 'dayjs']\n\n      for (const dep of deps) {\n        if (commonExternals.includes(dep)) {\n          external.push(dep)\n        }\n      }\n    }\n\n    this.logger.info(`自动生成 external: ${external.join(', ')}`)\n    return [...new Set(external)] // 去重\n  }\n\n  /**\n   * 生成 globals 配置\n   */\n  private generateGlobals(external: string[] | ((id: string) => boolean) | undefined): Record<string, string> {\n    if (!external || typeof external === 'function') {\n      return {}\n    }\n\n    const globals: Record<string, string> = {}\n\n    for (const dep of external) {\n      if (KNOWN_GLOBALS[dep]) {\n        globals[dep] = KNOWN_GLOBALS[dep]\n      } else {\n        // 生成驼峰命名的全局变量名\n        globals[dep] = this.toPascalCase(dep)\n      }\n    }\n\n    this.logger.info(`自动生成 globals: ${JSON.stringify(globals)}`)\n    return globals\n  }\n\n  /**\n   * 转换为 PascalCase\n   */\n  private toPascalCase(name: string): string {\n    // 移除作用域前缀\n    const base = name.replace(/^@[^/]+\\//, '')\n\n    return base\n      .split(/[\\/-]/)\n      .filter(Boolean)\n      .map(s => s.charAt(0).toUpperCase() + s.slice(1))\n      .join('')\n  }\n\n  /**\n   * 添加 Vue 插件\n   */\n  private async addVuePlugin(plugins: any[], libraryType: LibraryType): Promise<any[]> {\n    // 检查是否已经有 Vue 插件\n    const hasVuePlugin = plugins.some(plugin =>\n      plugin && (\n        plugin.name === 'vue' ||\n        plugin.name === 'rollup-plugin-vue' ||\n        (typeof plugin === 'function' && plugin.toString().includes('vue'))\n      )\n    )\n\n    if (hasVuePlugin) {\n      this.logger.info('已存在 Vue 插件，跳过自动添加')\n      return plugins\n    }\n\n    try {\n      // 动态导入 Vue 插件\n      const { default: vue } = await import('rollup-plugin-vue')\n\n      const vuePlugin = vue({\n        target: 'browser',\n        compileTemplate: true,\n        ...(libraryType === LibraryType.VUE2 ? { version: 2 } : {})\n      } as any)\n\n      this.logger.info(`自动添加 Vue ${libraryType === LibraryType.VUE2 ? '2' : '3'} 插件`)\n      return [vuePlugin, ...plugins]\n    } catch (error) {\n      this.logger.warn('无法加载 Vue 插件，请手动安装 rollup-plugin-vue')\n      return plugins\n    }\n  }\n\n  /**\n   * 生成默认的排除配置\n   */\n  private generateDefaultExcludes(): string[] {\n    return [\n      '**/*.test.ts',\n      '**/*.test.tsx',\n      '**/*.spec.ts',\n      '**/*.spec.tsx',\n      '**/test/**',\n      '**/tests/**',\n      '**/__tests__/**',\n      '**/examples/**',\n      '**/demo/**',\n      '**/demos/**',\n      '**/*.stories.ts',\n      '**/*.stories.tsx'\n    ]\n  }\n}\n\n/**\n * 创建自动配置增强器\n */\nexport function createAutoConfigEnhancer(projectPath: string, logger?: Logger): AutoConfigEnhancer {\n  return new AutoConfigEnhancer(projectPath, logger)\n}\n"]}