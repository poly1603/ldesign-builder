{"version":3,"file":"Input.vue3.js","sources":["../../src/input/Input.vue?vue&type=template&id=5787635c&lang.js"],"sourcesContent":["<template>\n  <div :class=\"wrapperClasses\">\n    <label v-if=\"label\" :class=\"labelClasses\" :for=\"inputId\">\n      {{ label }}\n      <span v-if=\"required\" class=\"l-input__required\">*</span>\n    </label>\n\n    <div :class=\"inputWrapperClasses\">\n      <span v-if=\"prefixIcon || $slots.prefix\" class=\"l-input__prefix\">\n        <slot name=\"prefix\">\n          <span v-if=\"prefixIcon\" class=\"l-input__icon\">{{ prefixIcon }}</span>\n        </slot>\n      </span>\n\n      <input :id=\"inputId\" ref=\"input\" :class=\"inputClasses\" :type=\"type\" :value=\"currentValue\"\n        :placeholder=\"placeholder\" :disabled=\"disabled\" :readonly=\"readonly\" :maxlength=\"maxlength\"\n        :minlength=\"minlength\" :max=\"max\" :min=\"min\" :step=\"step\" :autocomplete=\"autocomplete\" @input=\"handleInput\"\n        @change=\"handleChange\" @focus=\"handleFocus\" @blur=\"handleBlur\" @keydown=\"handleKeydown\" @keyup=\"handleKeyup\"\n        @keypress=\"handleKeypress\" />\n\n      <span v-if=\"suffixIcon || $slots.suffix || showClearIcon\" class=\"l-input__suffix\">\n        <span v-if=\"showClearIcon\" class=\"l-input__clear\" @click=\"handleClear\">\n          ✕\n        </span>\n        <slot name=\"suffix\">\n          <span v-if=\"suffixIcon\" class=\"l-input__icon\">{{ suffixIcon }}</span>\n        </slot>\n      </span>\n    </div>\n\n    <div v-if=\"showWordCount\" class=\"l-input__count\">\n      {{ currentValue.length }}{{ maxlength ? `/${maxlength}` : '' }}\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"l-input__error\">\n      {{ errorMessage }}\n    </div>\n\n    <div v-if=\"helpText\" class=\"l-input__help\">\n      {{ helpText }}\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * Input 输入框组件\n * \n * 提供多种类型和状态的输入框组件\n * 支持前缀图标、后缀图标、清除功能、字数统计等\n */\nexport default {\n  name: 'LInput',\n\n  props: {\n    /**\n     * 输入框的值\n     */\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n\n    /**\n     * 输入框类型\n     */\n    type: {\n      type: String,\n      default: 'text'\n    },\n\n    /**\n     * 输入框尺寸\n     * @type {'small' | 'medium' | 'large'}\n     */\n    size: {\n      type: String,\n      default: 'medium',\n      validator: (value) => ['small', 'medium', 'large'].includes(value)\n    },\n\n    /**\n     * 标签文本\n     */\n    label: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 占位符文本\n     */\n    placeholder: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 是否禁用\n     */\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * 是否只读\n     */\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * 是否必填\n     */\n    required: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * 是否可清除\n     */\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * 是否显示字数统计\n     */\n    showWordCount: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * 最大长度\n     */\n    maxlength: {\n      type: Number,\n      default: undefined\n    },\n\n    /**\n     * 最小长度\n     */\n    minlength: {\n      type: Number,\n      default: undefined\n    },\n\n    /**\n     * 最大值（数字类型）\n     */\n    max: {\n      type: Number,\n      default: undefined\n    },\n\n    /**\n     * 最小值（数字类型）\n     */\n    min: {\n      type: Number,\n      default: undefined\n    },\n\n    /**\n     * 步长（数字类型）\n     */\n    step: {\n      type: Number,\n      default: undefined\n    },\n\n    /**\n     * 自动完成\n     */\n    autocomplete: {\n      type: String,\n      default: 'off'\n    },\n\n    /**\n     * 前缀图标\n     */\n    prefixIcon: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 后缀图标\n     */\n    suffixIcon: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 错误信息\n     */\n    errorMessage: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 帮助文本\n     */\n    helpText: {\n      type: String,\n      default: ''\n    }\n  },\n\n  data() {\n    return {\n      currentValue: this.value,\n      focused: false,\n      inputId: `l-input-${Math.random().toString(36).substr(2, 9)}`\n    }\n  },\n\n  computed: {\n    /**\n     * 包装器样式类名\n     */\n    wrapperClasses() {\n      return [\n        'l-input',\n        `l-input--${this.size}`,\n        {\n          'l-input--disabled': this.disabled,\n          'l-input--readonly': this.readonly,\n          'l-input--focused': this.focused,\n          'l-input--error': !!this.errorMessage\n        }\n      ]\n    },\n\n    /**\n     * 标签样式类名\n     */\n    labelClasses() {\n      return [\n        'l-input__label',\n        {\n          'l-input__label--required': this.required\n        }\n      ]\n    },\n\n    /**\n     * 输入框包装器样式类名\n     */\n    inputWrapperClasses() {\n      return [\n        'l-input__wrapper',\n        {\n          'l-input__wrapper--prefix': this.prefixIcon || this.$slots.prefix,\n          'l-input__wrapper--suffix': this.suffixIcon || this.$slots.suffix || this.showClearIcon\n        }\n      ]\n    },\n\n    /**\n     * 输入框样式类名\n     */\n    inputClasses() {\n      return ['l-input__inner']\n    },\n\n    /**\n     * 是否显示清除图标\n     */\n    showClearIcon() {\n      return this.clearable && this.currentValue && !this.disabled && !this.readonly\n    }\n  },\n\n  watch: {\n    value(newValue) {\n      this.currentValue = newValue\n    }\n  },\n\n  methods: {\n    /**\n     * 处理输入事件\n     */\n    handleInput(event) {\n      const value = event.target.value\n      this.currentValue = value\n\n      /**\n       * 输入事件\n       * @event input\n       * @param {string} value - 输入的值\n       */\n      this.$emit('input', value)\n    },\n\n    /**\n     * 处理变化事件\n     */\n    handleChange(event) {\n      /**\n       * 变化事件\n       * @event change\n       * @param {string} value - 变化后的值\n       */\n      this.$emit('change', event.target.value)\n    },\n\n    /**\n     * 处理获得焦点事件\n     */\n    handleFocus(event) {\n      this.focused = true\n\n      /**\n       * 获得焦点事件\n       * @event focus\n       * @param {Event} event - 原生焦点事件\n       */\n      this.$emit('focus', event)\n    },\n\n    /**\n     * 处理失去焦点事件\n     */\n    handleBlur(event) {\n      this.focused = false\n\n      /**\n       * 失去焦点事件\n       * @event blur\n       * @param {Event} event - 原生失焦事件\n       */\n      this.$emit('blur', event)\n    },\n\n    /**\n     * 处理键盘按下事件\n     */\n    handleKeydown(event) {\n      /**\n       * 键盘按下事件\n       * @event keydown\n       * @param {KeyboardEvent} event - 键盘事件\n       */\n      this.$emit('keydown', event)\n    },\n\n    /**\n     * 处理键盘抬起事件\n     */\n    handleKeyup(event) {\n      /**\n       * 键盘抬起事件\n       * @event keyup\n       * @param {KeyboardEvent} event - 键盘事件\n       */\n      this.$emit('keyup', event)\n    },\n\n    /**\n     * 处理键盘按键事件\n     */\n    handleKeypress(event) {\n      /**\n       * 键盘按键事件\n       * @event keypress\n       * @param {KeyboardEvent} event - 键盘事件\n       */\n      this.$emit('keypress', event)\n    },\n\n    /**\n     * 处理清除事件\n     */\n    handleClear() {\n      this.currentValue = ''\n      this.$emit('input', '')\n      this.$emit('change', '')\n\n      /**\n       * 清除事件\n       * @event clear\n       */\n      this.$emit('clear')\n\n      // 聚焦到输入框\n      this.$nextTick(() => {\n        this.$refs.input.focus()\n      })\n    },\n\n    /**\n     * 聚焦到输入框\n     */\n    focus() {\n      this.$refs.input.focus()\n    },\n\n    /**\n     * 失去焦点\n     */\n    blur() {\n      this.$refs.input.blur()\n    },\n\n    /**\n     * 选中输入框内容\n     */\n    select() {\n      this.$refs.input.select()\n    }\n  }\n}\n</script>\n\n<!-- 样式暂时移除，等待 rollup-plugin-vue 版本兼容性问题解决 -->\n"],"names":["_createElementBlock","_createTextVNode","_toDisplayString","_createElementVNode","_openBlock","_renderSlot"],"mappings":"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"}